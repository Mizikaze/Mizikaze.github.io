/* Generated by JSIL v0.6.0 build 23610. See http://jsil.org/ for more information. */ 
/* Generating type stubs only */ 
var $asm02 = JSIL.DeclareAssembly("Microsoft.Xna.Framework.Game, Version=4.0.0.0, Culture=neutral, PublicKeyToken=842cf8be1de50553");

JSIL.DeclareNamespace("Microsoft");
JSIL.DeclareNamespace("Microsoft.Xna");
JSIL.DeclareNamespace("Microsoft.Xna.Framework");
JSIL.MakeInterface(
  "Microsoft.Xna.Framework.IGameComponent", true, [], function ($) {
    $.Method({}, "Initialize", $sig.make(0x1F01, null, [], []));
  }, []);

JSIL.MakeInterface(
  "Microsoft.Xna.Framework.IUpdateable", true, [], function ($) {
    $.Method({}, "get_Enabled", $sig.make(0x6D46, $.Boolean, [], []));
    $.Method({}, "get_UpdateOrder", $sig.make(0x6D4A, $.Int32, [], []));
    $.Method({}, "add_EnabledChanged", $sig.make(0x6D4D, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], []));
    $.Method({}, "remove_EnabledChanged", $sig.make(0x6D4F, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], []));
    $.Method({}, "add_UpdateOrderChanged", $sig.make(0x6D51, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], []));
    $.Method({}, "remove_UpdateOrderChanged", $sig.make(0x6D53, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], []));
    $.Method({}, "Update", $sig.make(0x6D55, null, [$asm02.TypeRef("Microsoft.Xna.Framework.GameTime")], []));
    $.Property({}, "Enabled");
    $.Property({}, "UpdateOrder");
  }, []);

JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.GameComponent", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x6D6A, null, [$asm02.TypeRef("Microsoft.Xna.Framework.Game")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "add_Disposed", 
    $sig.make(0x6D66, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "add_EnabledChanged", 
    $sig.make(0x6D62, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "add_UpdateOrderChanged", 
    $sig.make(0x6D64, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Dispose", 
    $sig.make(0x6D6E, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Dispose", 
    $sig.make(0x6D72, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Finalize", 
    $sig.make(0x6D70, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Enabled", 
    $sig.make(0x6D5D, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Game", 
    $sig.make(0x6D61, $asm02.TypeRef("Microsoft.Xna.Framework.Game"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_UpdateOrder", 
    $sig.make(0x6D5F, $.Int32, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Initialize", 
    $sig.make(0x6D6B, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnEnabledChanged", 
    $sig.make(0x6D75, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnUpdateOrderChanged", 
    $sig.make(0x6D73, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "remove_Disposed", 
    $sig.make(0x6D67, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "remove_EnabledChanged", 
    $sig.make(0x6D63, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "remove_UpdateOrderChanged", 
    $sig.make(0x6D65, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_Enabled", 
    $sig.make(0x6D5E, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_UpdateOrder", 
    $sig.make(0x6D60, null, [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Update", 
    $sig.make(0x6D6D, null, [$asm02.TypeRef("Microsoft.Xna.Framework.GameTime")], [])
  );

  $.Field({Static:false, Public:false}, "enabled", $.Boolean); 
  $.Field({Static:false, Public:false}, "updateOrder", $.Int32); 
  $.Field({Static:false, Public:false}, "game", $asm02.TypeRef("Microsoft.Xna.Framework.Game")); 
  $.Field({Static:false, Public:false}, "EnabledChanged", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Field({Static:false, Public:false}, "UpdateOrderChanged", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Field({Static:false, Public:false}, "Disposed", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Property({Static:false, Public:true , Virtual:true }, "Enabled", $.Boolean);

  $.Property({Static:false, Public:true , Virtual:true }, "UpdateOrder", $.Int32);

  $.Property({Static:false, Public:true }, "Game", $asm02.TypeRef("Microsoft.Xna.Framework.Game"));

  $.ImplementInterfaces(
      $asm02.TypeRef("Microsoft.Xna.Framework.IGameComponent"), $asm02.TypeRef("Microsoft.Xna.Framework.IUpdateable"), 
      $asm06.TypeRef("System.IDisposable")
  )
});

JSIL.MakeInterface(
  "Microsoft.Xna.Framework.IDrawable", true, [], function ($) {
    $.Method({}, "get_Visible", $sig.make(0x6D56, $.Boolean, [], []));
    $.Method({}, "get_DrawOrder", $sig.make(0x6D57, $.Int32, [], []));
    $.Method({}, "add_VisibleChanged", $sig.make(0x6D58, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], []));
    $.Method({}, "remove_VisibleChanged", $sig.make(0x6D59, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], []));
    $.Method({}, "add_DrawOrderChanged", $sig.make(0x6D5A, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], []));
    $.Method({}, "remove_DrawOrderChanged", $sig.make(0x6D5B, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], []));
    $.Method({}, "Draw", $sig.make(0x6D5C, null, [$asm02.TypeRef("Microsoft.Xna.Framework.GameTime")], []));
    $.Property({}, "Visible");
    $.Property({}, "DrawOrder");
  }, []);

JSIL.MakeClass($asm02.TypeRef("Microsoft.Xna.Framework.GameComponent"), "Microsoft.Xna.Framework.DrawableGameComponent", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x6DB4, null, [$asm02.TypeRef("Microsoft.Xna.Framework.Game")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "add_DrawOrderChanged", 
    $sig.make(0x6DAF, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "add_VisibleChanged", 
    $sig.make(0x6DAA, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "DeviceCreated", 
    $sig.make(0x6DBE, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "DeviceDisposing", 
    $sig.make(0x6DBF, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "DeviceReset", 
    $sig.make(0x6DBC, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "DeviceResetting", 
    $sig.make(0x6DBB, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Dispose", 
    $sig.make(0x6DB8, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Draw", 
    $sig.make(0x6DC0, null, [$asm02.TypeRef("Microsoft.Xna.Framework.GameTime")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_DrawOrder", 
    $sig.make(0x6D9F, $.Int32, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_GraphicsDevice", 
    $sig.make(0x6DA9, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Visible", 
    $sig.make(0x6D9D, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Initialize", 
    $sig.make(0x6DB6, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "LoadContent", 
    $sig.make(0x6DC1, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnDrawOrderChanged", 
    $sig.make(0x6DC3, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnVisibleChanged", 
    $sig.make(0x6DC5, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "remove_DrawOrderChanged", 
    $sig.make(0x6DB1, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "remove_VisibleChanged", 
    $sig.make(0x6DAC, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_DrawOrder", 
    $sig.make(0x6DA4, null, [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_Visible", 
    $sig.make(0x6D9E, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "UnloadContent", 
    $sig.make(0x6DC2, null, [], [])
  );

  $.Field({Static:false, Public:false}, "initialized", $.Boolean); 
  $.Field({Static:false, Public:false}, "visible", $.Boolean); 
  $.Field({Static:false, Public:false}, "drawOrder", $.Int32); 
  $.Field({Static:false, Public:false}, "deviceService", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IGraphicsDeviceService")); 
  $.Field({Static:false, Public:false}, "VisibleChanged", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Field({Static:false, Public:false}, "DrawOrderChanged", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Property({Static:false, Public:true , Virtual:true }, "Visible", $.Boolean);

  $.Property({Static:false, Public:true , Virtual:true }, "DrawOrder", $.Int32);

  $.Property({Static:false, Public:true }, "GraphicsDevice", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"));

  $.ImplementInterfaces($asm02.TypeRef("Microsoft.Xna.Framework.IDrawable"))
});

JSIL.MakeClass($asm06.TypeRef("System.EventArgs"), "Microsoft.Xna.Framework.PreparingDeviceSettingsEventArgs", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x1F4C, null, [$asm02.TypeRef("Microsoft.Xna.Framework.GraphicsDeviceInformation")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_GraphicsDeviceInformation", 
    $sig.make(0x1F49, $asm02.TypeRef("Microsoft.Xna.Framework.GraphicsDeviceInformation"), [], [])
  );

  $.Field({Static:false, Public:false}, "graphicsDeviceInformation", $asm02.TypeRef("Microsoft.Xna.Framework.GraphicsDeviceInformation")); 
  $.Property({Static:false, Public:true }, "GraphicsDeviceInformation", $asm02.TypeRef("Microsoft.Xna.Framework.GraphicsDeviceInformation"));

});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Game", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x39, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "add_Activated", 
    $sig.make(0x31, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "add_Deactivated", 
    $sig.make(0x33, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "add_Disposed", 
    $sig.make(0x37, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "add_Exiting", 
    $sig.make(0x35, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "BeginDraw", 
    $sig.make(0x44, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "BeginRun", 
    $sig.make(0x41, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "DeviceCreated", 
    $sig.make(0x5D, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "DeviceDisposing", 
    $sig.make(0x5E, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "DeviceReset", 
    $sig.make(0x5C, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "DeviceResetting", 
    $sig.make(0x5B, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Dispose", 
    $sig.make(0x65, null, [$asm06.TypeRef("System.Array") /* AnyType[] */ ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Dispose", 
    $sig.make(0x65, null, [$asm06.TypeRef("System.Array") /* AnyType[] */ ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Draw", 
    $sig.make(0x45, null, [$asm02.TypeRef("Microsoft.Xna.Framework.GameTime")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "DrawableDrawOrderChanged", 
    $sig.make(0x4D, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "DrawFrame", 
    $sig.make(0x4A, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "EndDraw", 
    $sig.make(0x46, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "EndRun", 
    $sig.make(0x42, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "EnsureHost", 
    $sig.make(0x52, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Exit", 
    $sig.make(0x40, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Finalize", 
    $sig.make(0x62, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GameComponentAdded", 
    $sig.make(0x4C, null, [$.Object, $asm02.TypeRef("Microsoft.Xna.Framework.GameComponentCollectionEventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GameComponentRemoved", 
    $sig.make(0x4B, null, [$.Object, $asm02.TypeRef("Microsoft.Xna.Framework.GameComponentCollectionEventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Components", 
    $sig.make(0x19, $asm02.TypeRef("Microsoft.Xna.Framework.GameComponentCollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Content", 
    $sig.make(0x26, $asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentManager"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_GraphicsDevice", 
    $sig.make(0x25, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_InactiveSleepTime", 
    $sig.make(0x1B, $asm06.TypeRef("System.TimeSpan"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsActive", 
    $sig.make(0x24, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsActiveIgnoringGuide", 
    $sig.make(0x28, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsFixedTimeStep", 
    $sig.make(0x21, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsMouseVisible", 
    $sig.make(0x1D, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_LaunchParameters", 
    $sig.make(0x18, $asm02.TypeRef("Microsoft.Xna.Framework.LaunchParameters"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Services", 
    $sig.make(0x1A, $asm02.TypeRef("Microsoft.Xna.Framework.GameServiceContainer"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ShouldExit", 
    $sig.make(0x29, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_TargetElapsedTime", 
    $sig.make(0x1F, $asm06.TypeRef("System.TimeSpan"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Window", 
    $sig.make(0x23, $asm02.TypeRef("Microsoft.Xna.Framework.GameWindow"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "HookDeviceEvents", 
    $sig.make(0x59, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "HostActivated", 
    $sig.make(0x58, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "HostDeactivated", 
    $sig.make(0x57, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "HostExiting", 
    $sig.make(0x55, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "HostIdle", 
    $sig.make(0x56, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "HostResume", 
    $sig.make(0x54, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "HostSuspend", 
    $sig.make(0x53, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Initialize", 
    $sig.make(0x48, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "LoadContent", 
    $sig.make(0x5F, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnActivated", 
    $sig.make(0x4F, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnDeactivated", 
    $sig.make(0x50, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnExiting", 
    $sig.make(0x51, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Paint", 
    $sig.make(0x47, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "remove_Activated", 
    $sig.make(0x32, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "remove_Deactivated", 
    $sig.make(0x34, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "remove_Disposed", 
    $sig.make(0x38, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "remove_Exiting", 
    $sig.make(0x36, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "ResetElapsedTime", 
    $sig.make(0x49, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Run", 
    $sig.make(0x3A, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "RunGame", 
    $sig.make(0x3C, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "RunOneFrame", 
    $sig.make(0x3D, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_Content", 
    $sig.make(0x27, null, [$asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentManager")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_InactiveSleepTime", 
    $sig.make(0x1C, null, [$asm06.TypeRef("System.TimeSpan")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_IsFixedTimeStep", 
    $sig.make(0x22, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_IsMouseVisible", 
    $sig.make(0x1E, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_TargetElapsedTime", 
    $sig.make(0x20, null, [$asm06.TypeRef("System.TimeSpan")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ShowMissingRequirementMessage", 
    $sig.make(0x64, $.Boolean, [$asm06.TypeRef("System.Exception")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "StartGameLoop", 
    $sig.make(0x3B, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "SuppressDraw", 
    $sig.make(0x3F, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Tick", 
    $sig.make(0x3E, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "UnhookDeviceEvents", 
    $sig.make(0x5A, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "UnloadContent", 
    $sig.make(0x60, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Update", 
    $sig.make(0x43, null, [$asm02.TypeRef("Microsoft.Xna.Framework.GameTime")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "UpdateableUpdateOrderChanged", 
    $sig.make(0x4E, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.Field({Static:false, Public:false, ReadOnly:true }, "maximumElapsedTime", $asm06.TypeRef("System.TimeSpan")); 
  $.Field({Static:false, Public:false}, "graphicsDeviceManager", $asm02.TypeRef("Microsoft.Xna.Framework.IGraphicsDeviceManager")); 
  $.Field({Static:false, Public:false}, "graphicsDeviceService", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IGraphicsDeviceService")); 
  $.Field({Static:false, Public:false}, "host", $asm02.TypeRef("Microsoft.Xna.Framework.GameHost")); 
  $.Field({Static:false, Public:false}, "isActive", $.Boolean); 
  $.Field({Static:false, Public:false}, "exitRequested", $.Boolean); 
  $.Field({Static:false, Public:false}, "inactiveSleepTime", $asm06.TypeRef("System.TimeSpan")); 
  $.Field({Static:false, Public:false}, "isMouseVisible", $.Boolean); 
  $.Field({Static:false, Public:false}, "inRun", $.Boolean); 
  $.Field({Static:false, Public:false}, "endRunRequired", $.Boolean); 
  $.Field({Static:false, Public:false}, "gameTime", $asm02.TypeRef("Microsoft.Xna.Framework.GameTime")); 
  $.Field({Static:false, Public:false}, "clock", $asm02.TypeRef("Microsoft.Xna.Framework.GameClock")); 
  $.Field({Static:false, Public:false}, "totalGameTime", $asm06.TypeRef("System.TimeSpan")); 
  $.Field({Static:false, Public:false}, "targetElapsedTime", $asm06.TypeRef("System.TimeSpan")); 
  $.Field({Static:false, Public:false}, "accumulatedElapsedGameTime", $asm06.TypeRef("System.TimeSpan")); 
  $.Field({Static:false, Public:false}, "lastFrameElapsedGameTime", $asm06.TypeRef("System.TimeSpan")); 
  $.Field({Static:false, Public:false}, "isFixedTimeStep", $.Boolean); 
  $.Field({Static:false, Public:false}, "drawRunningSlowly", $.Boolean); 
  $.Field({Static:false, Public:false}, "updatesSinceRunningSlowly1", $.Int32); 
  $.Field({Static:false, Public:false}, "updatesSinceRunningSlowly2", $.Int32); 
  $.Field({Static:false, Public:false}, "doneFirstUpdate", $.Boolean); 
  $.Field({Static:false, Public:false}, "doneFirstDraw", $.Boolean); 
  $.Field({Static:false, Public:false}, "forceElapsedTimeToZero", $.Boolean); 
  $.Field({Static:false, Public:false}, "suppressDraw", $.Boolean); 
  $.Field({Static:false, Public:false}, "gameComponents", $asm02.TypeRef("Microsoft.Xna.Framework.GameComponentCollection")); 
  $.Field({Static:false, Public:false}, "updateableComponents", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm02.TypeRef("Microsoft.Xna.Framework.IUpdateable")])); 
  $.Field({Static:false, Public:false}, "currentlyUpdatingComponents", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm02.TypeRef("Microsoft.Xna.Framework.IUpdateable")])); 
  $.Field({Static:false, Public:false}, "drawableComponents", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm02.TypeRef("Microsoft.Xna.Framework.IDrawable")])); 
  $.Field({Static:false, Public:false}, "currentlyDrawingComponents", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm02.TypeRef("Microsoft.Xna.Framework.IDrawable")])); 
  $.Field({Static:false, Public:false}, "notYetInitialized", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm02.TypeRef("Microsoft.Xna.Framework.IGameComponent")])); 
  $.Field({Static:false, Public:false}, "gameServices", $asm02.TypeRef("Microsoft.Xna.Framework.GameServiceContainer")); 
  $.Field({Static:false, Public:false}, "content", $asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentManager")); 
  $.Field({Static:false, Public:false}, "launchParameters", $asm02.TypeRef("Microsoft.Xna.Framework.LaunchParameters")); 
  $.Field({Static:false, Public:false}, "Activated", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Field({Static:false, Public:false}, "Deactivated", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Field({Static:false, Public:false}, "Exiting", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Field({Static:false, Public:false}, "Disposed", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Property({Static:false, Public:true }, "LaunchParameters", $asm02.TypeRef("Microsoft.Xna.Framework.LaunchParameters"));

  $.Property({Static:false, Public:true }, "Components", $asm02.TypeRef("Microsoft.Xna.Framework.GameComponentCollection"));

  $.Property({Static:false, Public:true }, "Services", $asm02.TypeRef("Microsoft.Xna.Framework.GameServiceContainer"));

  $.Property({Static:false, Public:true }, "InactiveSleepTime", $asm06.TypeRef("System.TimeSpan"));

  $.Property({Static:false, Public:true }, "IsMouseVisible", $.Boolean);

  $.Property({Static:false, Public:true }, "TargetElapsedTime", $asm06.TypeRef("System.TimeSpan"));

  $.Property({Static:false, Public:true }, "IsFixedTimeStep", $.Boolean);

  $.Property({Static:false, Public:true }, "Window", $asm02.TypeRef("Microsoft.Xna.Framework.GameWindow"));

  $.Property({Static:false, Public:true }, "IsActive", $.Boolean);

  $.Property({Static:false, Public:true }, "GraphicsDevice", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"));

  $.Property({Static:false, Public:true }, "Content", $asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentManager"));

  $.Property({Static:false, Public:false}, "IsActiveIgnoringGuide", $.Boolean);

  $.Property({Static:false, Public:false}, "ShouldExit", $.Boolean);

  $.ImplementInterfaces($asm06.TypeRef("System.IDisposable"))
});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.GameClock", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x9E2, null, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "CounterToTimeSpan", 
    $sig.make(0x9E9, $asm06.TypeRef("System.TimeSpan"), [$.Int64], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_Counter", 
    $sig.make(0x9DF, $.Int64, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_CurrentTime", 
    $sig.make(0x9DB, $asm06.TypeRef("System.TimeSpan"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ElapsedAdjustedTime", 
    $sig.make(0x9DD, $asm06.TypeRef("System.TimeSpan"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ElapsedTime", 
    $sig.make(0x9DC, $asm06.TypeRef("System.TimeSpan"), [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_Frequency", 
    $sig.make(0x9E0, $.Int64, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Reset", 
    $sig.make(0x9E3, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Resume", 
    $sig.make(0x9E7, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Step", 
    $sig.make(0x9E4, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Suspend", 
    $sig.make(0x9E6, null, [], [])
  );

  $.Field({Static:false, Public:false}, "baseRealTime", $.Int64); 
  $.Field({Static:false, Public:false}, "lastRealTime", $.Int64); 
  $.Field({Static:false, Public:false}, "lastRealTimeValid", $.Boolean); 
  $.Field({Static:false, Public:false}, "suspendCount", $.Int32); 
  $.Field({Static:false, Public:false}, "suspendStartTime", $.Int64); 
  $.Field({Static:false, Public:false}, "timeLostToSuspension", $.Int64); 
  $.Field({Static:false, Public:false}, "currentTimeOffset", $asm06.TypeRef("System.TimeSpan")); 
  $.Field({Static:false, Public:false}, "currentTimeBase", $asm06.TypeRef("System.TimeSpan")); 
  $.Field({Static:false, Public:false}, "elapsedTime", $asm06.TypeRef("System.TimeSpan")); 
  $.Field({Static:false, Public:false}, "elapsedAdjustedTime", $asm06.TypeRef("System.TimeSpan")); 
  $.Property({Static:false, Public:false}, "CurrentTime", $asm06.TypeRef("System.TimeSpan"));

  $.Property({Static:false, Public:false}, "ElapsedTime", $asm06.TypeRef("System.TimeSpan"));

  $.Property({Static:false, Public:false}, "ElapsedAdjustedTime", $asm06.TypeRef("System.TimeSpan"));

  $.Property({Static:true , Public:false}, "Counter", $.Int64);

  $.Property({Static:true , Public:false}, "Frequency", $.Int64);

});

JSIL.MakeClass($asm06.TypeRef("System.EventArgs"), "Microsoft.Xna.Framework.GameComponentCollectionEventArgs", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x94E, null, [$asm02.TypeRef("Microsoft.Xna.Framework.IGameComponent")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_GameComponent", 
    $sig.make(0x94D, $asm02.TypeRef("Microsoft.Xna.Framework.IGameComponent"), [], [])
  );

  $.Field({Static:false, Public:false}, "gameComponent", $asm02.TypeRef("Microsoft.Xna.Framework.IGameComponent")); 
  $.Property({Static:false, Public:true }, "GameComponent", $asm02.TypeRef("Microsoft.Xna.Framework.IGameComponent"));

});

JSIL.MakeClass($asm06.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm02.TypeRef("Microsoft.Xna.Framework.IGameComponent")]), "Microsoft.Xna.Framework.GameComponentCollection", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x8C3, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "add_ComponentAdded", 
    $sig.make(0x8B8, null, [$asm06.TypeRef("System.EventHandler`1", [$asm02.TypeRef("Microsoft.Xna.Framework.GameComponentCollectionEventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "add_ComponentRemoved", 
    $sig.make(0x8BF, null, [$asm06.TypeRef("System.EventHandler`1", [$asm02.TypeRef("Microsoft.Xna.Framework.GameComponentCollectionEventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ClearItems", 
    $sig.make(0x8CA, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "InsertItem", 
    $sig.make(0x8C5, null, [$.Int32, $asm02.TypeRef("Microsoft.Xna.Framework.IGameComponent")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnComponentAdded", 
    $sig.make(0x8D3, null, [$asm02.TypeRef("Microsoft.Xna.Framework.GameComponentCollectionEventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnComponentRemoved", 
    $sig.make(0x8D4, null, [$asm02.TypeRef("Microsoft.Xna.Framework.GameComponentCollectionEventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "remove_ComponentAdded", 
    $sig.make(0x8BC, null, [$asm06.TypeRef("System.EventHandler`1", [$asm02.TypeRef("Microsoft.Xna.Framework.GameComponentCollectionEventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "remove_ComponentRemoved", 
    $sig.make(0x8C1, null, [$asm06.TypeRef("System.EventHandler`1", [$asm02.TypeRef("Microsoft.Xna.Framework.GameComponentCollectionEventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "RemoveItem", 
    $sig.make(0x8C7, null, [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SetItem", 
    $sig.make(0x8C9, null, [$.Int32, $asm02.TypeRef("Microsoft.Xna.Framework.IGameComponent")], [])
  );

  $.Field({Static:false, Public:false}, "ComponentAdded", $asm06.TypeRef("System.EventHandler`1", [$asm02.TypeRef("Microsoft.Xna.Framework.GameComponentCollectionEventArgs")])); 
  $.Field({Static:false, Public:false}, "ComponentRemoved", $asm06.TypeRef("System.EventHandler`1", [$asm02.TypeRef("Microsoft.Xna.Framework.GameComponentCollectionEventArgs")])); 
});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.GameHost", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x92F, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "add_Activated", 
    $sig.make(0x906, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "add_Deactivated", 
    $sig.make(0x909, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "add_Exiting", 
    $sig.make(0x90F, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "add_Idle", 
    $sig.make(0x90B, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "add_Resume", 
    $sig.make(0x904, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "add_Suspend", 
    $sig.make(0x901, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Exit", 
    $sig.make(0x920, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Window", 
    $sig.make(0x900, $asm02.TypeRef("Microsoft.Xna.Framework.GameWindow"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnActivated", 
    $sig.make(0x929, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnDeactivated", 
    $sig.make(0x92A, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnExiting", 
    $sig.make(0x92C, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnIdle", 
    $sig.make(0x92B, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnResume", 
    $sig.make(0x927, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnSuspend", 
    $sig.make(0x925, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "remove_Activated", 
    $sig.make(0x908, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "remove_Deactivated", 
    $sig.make(0x90A, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "remove_Exiting", 
    $sig.make(0x911, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "remove_Idle", 
    $sig.make(0x90D, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "remove_Resume", 
    $sig.make(0x905, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "remove_Suspend", 
    $sig.make(0x903, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Run", 
    $sig.make(0x919, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "RunOneFrame", 
    $sig.make(0x91B, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ShowMissingRequirementMessage", 
    $sig.make(0x92E, $.Boolean, [$asm06.TypeRef("System.Exception")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "StartGameLoop", 
    $sig.make(0x91D, null, [], [])
  );

  $.Field({Static:false, Public:false}, "Suspend", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Field({Static:false, Public:false}, "Resume", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Field({Static:false, Public:false}, "Activated", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Field({Static:false, Public:false}, "Deactivated", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Field({Static:false, Public:false}, "Idle", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Field({Static:false, Public:false}, "Exiting", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Property({Static:false, Public:false, Virtual:true }, "Window", $asm02.TypeRef("Microsoft.Xna.Framework.GameWindow"));

});

JSIL.DeclareNamespace("Microsoft.Xna.Framework.GamerServices");
JSIL.MakeClass($asm02.TypeRef("Microsoft.Xna.Framework.GameComponent"), "Microsoft.Xna.Framework.GamerServices.GamerServicesComponent", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x6DAB, null, [$asm02.TypeRef("Microsoft.Xna.Framework.Game")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GamerServicesDispatcher_InstallingTitleUpdate", 
    $sig.make(0x6DB2, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Initialize", 
    $sig.make(0x6DAD, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Update", 
    $sig.make(0x6DB0, null, [$asm02.TypeRef("Microsoft.Xna.Framework.GameTime")], [])
  );

});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.GameServiceContainer", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x97C, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "AddService", 
    $sig.make(0x97E, null, [$asm06.TypeRef("System.Type"), $.Object], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetService", 
    $sig.make(0x980, $.Object, [$asm06.TypeRef("System.Type")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "RemoveService", 
    $sig.make(0x97F, null, [$asm06.TypeRef("System.Type")], [])
  );

  $.Field({Static:false, Public:false}, "services", $asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("System.Type"), $.Object])); 
  $.ImplementInterfaces($asm06.TypeRef("System.IServiceProvider"))
});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.GameTime", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x9B, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x9C, null, [
        $asm06.TypeRef("System.TimeSpan"), $asm06.TypeRef("System.TimeSpan"), 
        $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x9D, null, [$asm06.TypeRef("System.TimeSpan"), $asm06.TypeRef("System.TimeSpan")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_ElapsedGameTime", 
    $sig.make(0x96, $asm06.TypeRef("System.TimeSpan"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsRunningSlowly", 
    $sig.make(0x98, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_TotalGameTime", 
    $sig.make(0x94, $asm06.TypeRef("System.TimeSpan"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_ElapsedGameTime", 
    $sig.make(0x97, null, [$asm06.TypeRef("System.TimeSpan")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_IsRunningSlowly", 
    $sig.make(0x99, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_TotalGameTime", 
    $sig.make(0x95, null, [$asm06.TypeRef("System.TimeSpan")], [])
  );

  $.Field({Static:false, Public:false}, "totalGameTime", $asm06.TypeRef("System.TimeSpan")); 
  $.Field({Static:false, Public:false}, "elapsedGameTime", $asm06.TypeRef("System.TimeSpan")); 
  $.Field({Static:false, Public:false}, "isRunningSlowly", $.Boolean); 
  $.Property({Static:false, Public:true }, "TotalGameTime", $asm06.TypeRef("System.TimeSpan"));

  $.Property({Static:false, Public:true }, "ElapsedGameTime", $asm06.TypeRef("System.TimeSpan"));

  $.Property({Static:false, Public:true }, "IsRunningSlowly", $.Boolean);

});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.GameWindow", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xA42, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "add_Activated", 
    $sig.make(0xA21, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "add_ClientSizeChanged", 
    $sig.make(0xA3B, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "add_Deactivated", 
    $sig.make(0xA26, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "add_OrientationChanged", 
    $sig.make(0xA3F, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "add_Paint", 
    $sig.make(0xA31, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "add_ScreenDeviceNameChanged", 
    $sig.make(0xA37, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "BeginScreenDeviceChange", 
    $sig.make(0xA44, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "EndScreenDeviceChange", 
    $sig.make(0xA45, null, [
        $.String, $.Int32, 
        $.Int32
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "EndScreenDeviceChange", 
    $sig.make(0xA46, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_AllowUserResizing", 
    $sig.make(0xA11, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_ClientBounds", 
    $sig.make(0xA1E, $asm01.TypeRef("Microsoft.Xna.Framework.Rectangle"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_CurrentOrientation", 
    $sig.make(0xA20, $asm01.TypeRef("Microsoft.Xna.Framework.DisplayOrientation"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Handle", 
    $sig.make(0xA0F, $asm06.TypeRef("System.IntPtr"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsMinimized", 
    $sig.make(0xA1D, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsMouseVisible", 
    $sig.make(0xA18, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_ScreenDeviceName", 
    $sig.make(0xA1F, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Title", 
    $sig.make(0xA09, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnActivated", 
    $sig.make(0xA4B, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnClientSizeChanged", 
    $sig.make(0xA51, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnDeactivated", 
    $sig.make(0xA4D, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnOrientationChanged", 
    $sig.make(0xA53, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnPaint", 
    $sig.make(0xA4E, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnScreenDeviceNameChanged", 
    $sig.make(0xA50, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "remove_Activated", 
    $sig.make(0xA24, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "remove_ClientSizeChanged", 
    $sig.make(0xA3D, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "remove_Deactivated", 
    $sig.make(0xA2F, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "remove_OrientationChanged", 
    $sig.make(0xA41, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "remove_Paint", 
    $sig.make(0xA33, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "remove_ScreenDeviceNameChanged", 
    $sig.make(0xA39, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_AllowUserResizing", 
    $sig.make(0xA13, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_IsMouseVisible", 
    $sig.make(0xA1A, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_Title", 
    $sig.make(0xA0B, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SetSupportedOrientations", 
    $sig.make(0xA49, null, [$asm01.TypeRef("Microsoft.Xna.Framework.DisplayOrientation")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SetTitle", 
    $sig.make(0xA47, null, [$.String], [])
  );

  $.Field({Static:true , Public:false, ReadOnly:true }, "DefaultClientWidth", $.Int32, 800); 
  $.Field({Static:true , Public:false, ReadOnly:true }, "DefaultClientHeight", $.Int32, 600); 
  $.Field({Static:false, Public:false}, "title", $.String); 
  $.Field({Static:false, Public:false}, "Activated", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Field({Static:false, Public:false}, "Deactivated", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Field({Static:false, Public:false}, "Paint", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Field({Static:false, Public:false}, "ScreenDeviceNameChanged", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Field({Static:false, Public:false}, "ClientSizeChanged", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Field({Static:false, Public:false}, "OrientationChanged", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Property({Static:false, Public:true }, "Title", $.String);

  $.Property({Static:false, Public:true , Virtual:true }, "Handle", $asm06.TypeRef("System.IntPtr"));

  $.Property({Static:false, Public:true , Virtual:true }, "AllowUserResizing", $.Boolean);

  $.Property({Static:false, Public:false, Virtual:true }, "IsMouseVisible", $.Boolean);

  $.Property({Static:false, Public:false, Virtual:true }, "IsMinimized", $.Boolean);

  $.Property({Static:false, Public:true , Virtual:true }, "ClientBounds", $asm01.TypeRef("Microsoft.Xna.Framework.Rectangle"));

  $.Property({Static:false, Public:true , Virtual:true }, "ScreenDeviceName", $.String);

  $.Property({Static:false, Public:true , Virtual:true }, "CurrentOrientation", $asm01.TypeRef("Microsoft.Xna.Framework.DisplayOrientation"));

});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.GraphicsDeviceInformation", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x1F37, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Clone", 
    $sig.make(0x1F35, $.Type, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Object.Equals", 
    $sig.make(0x1F32, $.Boolean, [$.Object], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Adapter", 
    $sig.make(0x1F2A, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsAdapter"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_GraphicsProfile", 
    $sig.make(0x1F2D, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsProfile"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_PresentationParameters", 
    $sig.make(0x1F2F, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PresentationParameters"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetHashCode", 
    $sig.make(0x1F34, $.Int32, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_Adapter", 
    $sig.make(0x1F2C, null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsAdapter")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_GraphicsProfile", 
    $sig.make(0x1F2E, null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsProfile")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_PresentationParameters", 
    $sig.make(0x1F30, null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PresentationParameters")], [])
  );

  $.Field({Static:false, Public:false}, "presentationParameters", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PresentationParameters")); 
  $.Field({Static:false, Public:false}, "adapter", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsAdapter")); 
  $.Field({Static:false, Public:false}, "graphicsProfile", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsProfile")); 
  $.Property({Static:false, Public:true }, "Adapter", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsAdapter"));

  $.Property({Static:false, Public:true }, "GraphicsProfile", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsProfile"));

  $.Property({Static:false, Public:true }, "PresentationParameters", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PresentationParameters"));

});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.GraphicsDeviceInformationComparer", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x6D82, null, [$asm02.TypeRef("Microsoft.Xna.Framework.GraphicsDeviceManager")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Compare", 
    $sig.make(0x6D84, $.Int32, [$asm02.TypeRef("Microsoft.Xna.Framework.GraphicsDeviceInformation"), $asm02.TypeRef("Microsoft.Xna.Framework.GraphicsDeviceInformation")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "RankFormat", 
    $sig.make(0x6D85, $.Int32, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "SurfaceFormatBitDepth", 
    $sig.make(0x6D86, $.Int32, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")], [])
  );

  $.Field({Static:false, Public:false}, "graphics", $asm02.TypeRef("Microsoft.Xna.Framework.GraphicsDeviceManager")); 
  $.ImplementInterfaces($asm06.TypeRef("System.Collections.Generic.IComparer`1", [$asm02.TypeRef("Microsoft.Xna.Framework.GraphicsDeviceInformation")]))
});

JSIL.MakeInterface(
  "Microsoft.Xna.Framework.IGraphicsDeviceManager", true, [], function ($) {
    $.Method({}, "CreateDevice", $sig.make(0x948, null, [], []));
    $.Method({}, "BeginDraw", $sig.make(0x94A, $.Boolean, [], []));
    $.Method({}, "EndDraw", $sig.make(0x94B, null, [], []));
  }, []);

JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.GraphicsDeviceManager", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0xBFC, null, [$asm02.TypeRef("Microsoft.Xna.Framework.Game")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "add_DeviceCreated", 
    $sig.make(0xBEB, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "add_DeviceDisposing", 
    $sig.make(0xBF1, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "add_DeviceReset", 
    $sig.make(0xBEF, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "add_DeviceResetting", 
    $sig.make(0xBED, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "add_Disposed", 
    $sig.make(0xBF7, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "add_PreparingDeviceSettings", 
    $sig.make(0xBF5, null, [$asm06.TypeRef("System.EventHandler`1", [$asm02.TypeRef("Microsoft.Xna.Framework.PreparingDeviceSettingsEventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AddDevices", 
    $sig.make(0xC2D, null, [$.Boolean, $asm06.TypeRef("System.Collections.Generic.List`1", [$asm02.TypeRef("Microsoft.Xna.Framework.GraphicsDeviceInformation")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AddDevices", 
    $sig.make(0xC38, null, [
        $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsAdapter"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DisplayMode"), 
        $asm02.TypeRef("Microsoft.Xna.Framework.GraphicsDeviceInformation"), $asm06.TypeRef("System.Collections.Generic.List`1", [$asm02.TypeRef("Microsoft.Xna.Framework.GraphicsDeviceInformation")])
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "ApplyChanges", 
    $sig.make(0xBFD, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CanResetDevice", 
    $sig.make(0xC0A, $.Boolean, [$asm02.TypeRef("Microsoft.Xna.Framework.GraphicsDeviceInformation")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ChangeDevice", 
    $sig.make(0xC05, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "ConfigureTouchInput", 
    $sig.make(0xC07, null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PresentationParameters")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CreateDevice", 
    $sig.make(0xC04, null, [$asm02.TypeRef("Microsoft.Xna.Framework.GraphicsDeviceInformation")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Dispose", 
    $sig.make(0xC1D, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "EnsureDevice", 
    $sig.make(0xC03, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "EnsureDevicePlatform", 
    $sig.make(0xC40, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "FindBestDevice", 
    $sig.make(0xC08, $asm02.TypeRef("Microsoft.Xna.Framework.GraphicsDeviceInformation"), [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "FindBestPlatformDevice", 
    $sig.make(0xC2A, $asm02.TypeRef("Microsoft.Xna.Framework.GraphicsDeviceInformation"), [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GameWindowClientSizeChanged", 
    $sig.make(0xC00, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GameWindowOrientationChanged", 
    $sig.make(0xC01, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GameWindowScreenDeviceNameChanged", 
    $sig.make(0xBFF, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_GraphicsDevice", 
    $sig.make(0xBEA, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_GraphicsProfile", 
    $sig.make(0xBD4, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsProfile"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsFullScreen", 
    $sig.make(0xBDF, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_PreferMultiSampling", 
    $sig.make(0xBE6, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_PreferredBackBufferFormat", 
    $sig.make(0xBD8, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_PreferredBackBufferHeight", 
    $sig.make(0xBDD, $.Int32, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_PreferredBackBufferWidth", 
    $sig.make(0xBDB, $.Int32, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_PreferredDepthStencilFormat", 
    $sig.make(0xBD6, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthFormat"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_SupportedOrientations", 
    $sig.make(0xBE8, $asm01.TypeRef("Microsoft.Xna.Framework.DisplayOrientation"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_SynchronizeWithVerticalRetrace", 
    $sig.make(0xBE2, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "HandleDeviceLost", 
    $sig.make(0xC0F, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "HandleDeviceReset", 
    $sig.make(0xC11, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "HandleDeviceResetting", 
    $sig.make(0xC13, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "HandleDisposing", 
    $sig.make(0xC0D, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IsWindowOnAdapter", 
    $sig.make(0xC3E, $.Boolean, [$asm06.TypeRef("System.IntPtr"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsAdapter")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "MassagePresentParameters", 
    $sig.make(0xC06, null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PresentationParameters")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IGraphicsDeviceManager.BeginDraw", 
    $sig.make(0xC25, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IGraphicsDeviceManager.CreateDevice", 
    $sig.make(0xC22, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IGraphicsDeviceManager.EndDraw", 
    $sig.make(0xC26, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnDeviceCreated", 
    $sig.make(0xC16, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnDeviceDisposing", 
    $sig.make(0xC17, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnDeviceReset", 
    $sig.make(0xC1A, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnDeviceResetting", 
    $sig.make(0xC1B, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnPreparingDeviceSettings", 
    $sig.make(0xC1E, null, [$.Object, $asm02.TypeRef("Microsoft.Xna.Framework.PreparingDeviceSettingsEventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "RankDevices", 
    $sig.make(0xC0B, null, [$asm06.TypeRef("System.Collections.Generic.List`1", [$asm02.TypeRef("Microsoft.Xna.Framework.GraphicsDeviceInformation")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "RankDevicesPlatform", 
    $sig.make(0xC29, null, [$asm06.TypeRef("System.Collections.Generic.List`1", [$asm02.TypeRef("Microsoft.Xna.Framework.GraphicsDeviceInformation")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ReadDefaultGraphicsProfile", 
    $sig.make(0xC28, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsProfile"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "remove_DeviceCreated", 
    $sig.make(0xBEC, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "remove_DeviceDisposing", 
    $sig.make(0xBF3, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "remove_DeviceReset", 
    $sig.make(0xBF0, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "remove_DeviceResetting", 
    $sig.make(0xBEE, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "remove_Disposed", 
    $sig.make(0xBF8, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "remove_PreparingDeviceSettings", 
    $sig.make(0xBF6, null, [$asm06.TypeRef("System.EventHandler`1", [$asm02.TypeRef("Microsoft.Xna.Framework.PreparingDeviceSettingsEventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_GraphicsProfile", 
    $sig.make(0xBD5, null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsProfile")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_IsFullScreen", 
    $sig.make(0xBE0, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_PreferMultiSampling", 
    $sig.make(0xBE7, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_PreferredBackBufferFormat", 
    $sig.make(0xBD9, null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_PreferredBackBufferHeight", 
    $sig.make(0xBDE, null, [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_PreferredBackBufferWidth", 
    $sig.make(0xBDC, null, [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_PreferredDepthStencilFormat", 
    $sig.make(0xBD7, null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthFormat")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_SupportedOrientations", 
    $sig.make(0xBE9, null, [$asm01.TypeRef("Microsoft.Xna.Framework.DisplayOrientation")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_SynchronizeWithVerticalRetrace", 
    $sig.make(0xBE5, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IDisposable.Dispose", 
    $sig.make(0xC20, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "ToggleFullScreen", 
    $sig.make(0xBFE, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ValidateGraphicsDeviceInformation", 
    $sig.make(0xC42, null, [$asm02.TypeRef("Microsoft.Xna.Framework.GraphicsDeviceInformation")], [])
  );

  $.Field({Static:true , Public:true , ReadOnly:true }, "DefaultBackBufferWidth", $.Int32, 800); 
  $.Field({Static:true , Public:true , ReadOnly:true }, "DefaultBackBufferHeight", $.Int32, 480); 
  $.Field({Static:true , Public:false, ReadOnly:true }, "deviceLostSleepTime", $asm06.TypeRef("System.TimeSpan")); 
  $.Field({Static:false, Public:false}, "game", $asm02.TypeRef("Microsoft.Xna.Framework.Game")); 
  $.Field({Static:false, Public:false}, "isReallyFullScreen", $.Boolean); 
  $.Field({Static:false, Public:false}, "isDeviceDirty", $.Boolean); 
  $.Field({Static:false, Public:false}, "inDeviceTransition", $.Boolean); 
  $.Field({Static:false, Public:false}, "device", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice")); 
  $.Field({Static:false, Public:false}, "synchronizeWithVerticalRetrace", $.Boolean); 
  $.Field({Static:false, Public:false}, "isFullScreen", $.Boolean); 
  $.Field({Static:false, Public:false}, "graphicsProfile", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsProfile")); 
  $.Field({Static:false, Public:false}, "backBufferFormat", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")); 
  $.Field({Static:false, Public:false}, "depthStencilFormat", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthFormat")); 
  $.Field({Static:false, Public:false}, "backBufferWidth", $.Int32); 
  $.Field({Static:false, Public:false}, "backBufferHeight", $.Int32); 
  $.Field({Static:false, Public:false}, "allowMultiSampling", $.Boolean); 
  $.Field({Static:false, Public:false}, "supportedOrientations", $asm01.TypeRef("Microsoft.Xna.Framework.DisplayOrientation")); 
  $.Field({Static:false, Public:false}, "currentWindowOrientation", $asm01.TypeRef("Microsoft.Xna.Framework.DisplayOrientation")); 
  $.Field({Static:false, Public:false}, "resizedBackBufferWidth", $.Int32); 
  $.Field({Static:false, Public:false}, "resizedBackBufferHeight", $.Int32); 
  $.Field({Static:false, Public:false}, "useResizedBackBuffer", $.Boolean); 
  $.Field({Static:false, Public:false}, "deviceCreated", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Field({Static:false, Public:false}, "deviceResetting", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Field({Static:false, Public:false}, "deviceReset", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Field({Static:false, Public:false}, "deviceDisposing", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Field({Static:false, Public:false}, "PreparingDeviceSettings", $asm06.TypeRef("System.EventHandler`1", [$asm02.TypeRef("Microsoft.Xna.Framework.PreparingDeviceSettingsEventArgs")])); 
  $.Field({Static:false, Public:false}, "Disposed", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Field({Static:false, Public:false}, "beginDrawOk", $.Boolean); 
  $.Method({Static:true , Public:false}, ".cctor", 
    $sig.make(0x2AA5D, null, [], []), 
    function GraphicsDeviceManager__cctor () {
      $thisType.deviceLostSleepTime = new $asm06.System.TimeSpan();
    }
  );

  $.Property({Static:false, Public:true }, "GraphicsProfile", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsProfile"));

  $.Property({Static:false, Public:true }, "PreferredDepthStencilFormat", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthFormat"));

  $.Property({Static:false, Public:true }, "PreferredBackBufferFormat", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat"));

  $.Property({Static:false, Public:true }, "PreferredBackBufferWidth", $.Int32);

  $.Property({Static:false, Public:true }, "PreferredBackBufferHeight", $.Int32);

  $.Property({Static:false, Public:true }, "IsFullScreen", $.Boolean);

  $.Property({Static:false, Public:true }, "SynchronizeWithVerticalRetrace", $.Boolean);

  $.Property({Static:false, Public:true }, "PreferMultiSampling", $.Boolean);

  $.Property({Static:false, Public:true }, "SupportedOrientations", $asm01.TypeRef("Microsoft.Xna.Framework.DisplayOrientation"));

  $.Property({Static:false, Public:true , Virtual:true }, "GraphicsDevice", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"));

  $.ImplementInterfaces(
      $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IGraphicsDeviceService"), $asm06.TypeRef("System.IDisposable"), 
      $asm02.TypeRef("Microsoft.Xna.Framework.IGraphicsDeviceManager")
  )
});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.DrawOrderComparer", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x6D95, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Compare", 
    $sig.make(0x6D94, $.Int32, [$asm02.TypeRef("Microsoft.Xna.Framework.IDrawable"), $asm02.TypeRef("Microsoft.Xna.Framework.IDrawable")], [])
  );

  $.Field({Static:true , Public:true , ReadOnly:true }, "Default", $.Type); 
  $.ImplementInterfaces($asm06.TypeRef("System.Collections.Generic.IComparer`1", [$asm02.TypeRef("Microsoft.Xna.Framework.IDrawable")]))
});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.UpdateOrderComparer", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x6D48, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Compare", 
    $sig.make(0x6D47, $.Int32, [$asm02.TypeRef("Microsoft.Xna.Framework.IUpdateable"), $asm02.TypeRef("Microsoft.Xna.Framework.IUpdateable")], [])
  );

  $.Field({Static:true , Public:true , ReadOnly:true }, "Default", $.Type); 
  $.ImplementInterfaces($asm06.TypeRef("System.Collections.Generic.IComparer`1", [$asm02.TypeRef("Microsoft.Xna.Framework.IUpdateable")]))
});

JSIL.MakeClass($asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("System.String"), $asm06.TypeRef("System.String")]), "Microsoft.Xna.Framework.LaunchParameters", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x7EA, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ParseCommandLineArguments", 
    $sig.make(0x7EB, null, [$jsilcore.TypeRef("System.Array", [$.String])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ParseKeyValuePair", 
    $sig.make(0x7EC, null, [
        $.String, $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
        $jsilcore.TypeRef("JSIL.Reference", [$.String])
      ], [])
  );

});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Resources", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x6DE9, null, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_BackBufferDimMustBePositive", 
    $sig.make(0x6DA3, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_CannotAddSameComponentMultipleTimes", 
    $sig.make(0x6DA5, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_CannotCreateGameType", 
    $sig.make(0x6DC6, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_CannotSetItemsIntoGameComponentCollection", 
    $sig.make(0x6DA6, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_Culture", 
    $sig.make(0x6DA1, $asm06.TypeRef("System.Globalization.CultureInfo"), [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_DefaultTitleName", 
    $sig.make(0x6DA7, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_Direct3DCreateError", 
    $sig.make(0x6DA8, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_Direct3DInvalidCreateParameters", 
    $sig.make(0x6DAE, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_GameCannotBeNull", 
    $sig.make(0x6DB9, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_GameNotDerivedFromValidGameType", 
    $sig.make(0x6DBD, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_GraphicsComponentNotAttachedToGame", 
    $sig.make(0x6DCF, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_GraphicsDeviceManagerAlreadyPresent", 
    $sig.make(0x6DD0, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_InactiveSleepTimeCannotBeZero", 
    $sig.make(0x6DD1, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_InvalidScreenAdapter", 
    $sig.make(0x6DD2, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_InvalidScreenDeviceName", 
    $sig.make(0x6DD3, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_MissingGraphicsDeviceService", 
    $sig.make(0x6DD4, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_MustCallBeginDeviceChange", 
    $sig.make(0x6DD5, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_NoAudioHardware", 
    $sig.make(0x6DD6, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_NoCompatibleDevices", 
    $sig.make(0x6DD7, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_NoCompatibleDevicesAfterRanking", 
    $sig.make(0x6DD8, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_NoGraphicsDeviceService", 
    $sig.make(0x6DD9, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_NoHighResolutionTimer", 
    $sig.make(0x6DDA, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_NoMultipleRuns", 
    $sig.make(0x6DDB, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_NoNullUseDefaultAdapter", 
    $sig.make(0x6DDC, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_NoSuitableGraphicsDevice", 
    $sig.make(0x6DDD, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_NullOrEmptyScreenDeviceName", 
    $sig.make(0x6DDE, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_PreviousDrawThrew", 
    $sig.make(0x6DDF, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_PropertyCannotBeCalledBeforeInitialize", 
    $sig.make(0x6DE0, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_ResourceManager", 
    $sig.make(0x6DA0, $asm06.TypeRef("System.Resources.ResourceManager"), [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_RunNotSupported", 
    $sig.make(0x6DCC, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_ServiceAlreadyPresent", 
    $sig.make(0x6DE1, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_ServiceMustBeAssignable", 
    $sig.make(0x6DE2, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_ServiceProviderCannotBeNull", 
    $sig.make(0x6DE3, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_ServiceTypeCannotBeNull", 
    $sig.make(0x6DE4, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_TargetElaspedCannotBeZero", 
    $sig.make(0x6DE5, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_TitleCannotBeNull", 
    $sig.make(0x6DE6, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_ValidateBackBufferDimsFullScreen", 
    $sig.make(0x6DE7, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_ValidateBackBufferDimsModeFullScreen", 
    $sig.make(0x6DE8, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "set_Culture", 
    $sig.make(0x6DA2, null, [$asm06.TypeRef("System.Globalization.CultureInfo")], [])
  );

  $.Field({Static:true , Public:false}, "resourceMan", $asm06.TypeRef("System.Resources.ResourceManager")); 
  $.Field({Static:true , Public:false}, "resourceCulture", $asm06.TypeRef("System.Globalization.CultureInfo")); 
  $.Property({Static:true , Public:false}, "ResourceManager", $asm06.TypeRef("System.Resources.ResourceManager"))
    .Attribute($asm07.TypeRef("System.ComponentModel.EditorBrowsableAttribute"), function () { return [$asm07.System.ComponentModel.EditorBrowsableState.Advanced]; });

  $.Property({Static:true , Public:false}, "Culture", $asm06.TypeRef("System.Globalization.CultureInfo"))
    .Attribute($asm07.TypeRef("System.ComponentModel.EditorBrowsableAttribute"), function () { return [$asm07.System.ComponentModel.EditorBrowsableState.Advanced]; });

  $.Property({Static:true , Public:false}, "BackBufferDimMustBePositive", $.String);

  $.Property({Static:true , Public:false}, "CannotAddSameComponentMultipleTimes", $.String);

  $.Property({Static:true , Public:false}, "CannotSetItemsIntoGameComponentCollection", $.String);

  $.Property({Static:true , Public:false}, "DefaultTitleName", $.String);

  $.Property({Static:true , Public:false}, "Direct3DCreateError", $.String);

  $.Property({Static:true , Public:false}, "Direct3DInvalidCreateParameters", $.String);

  $.Property({Static:true , Public:false}, "GameCannotBeNull", $.String);

  $.Property({Static:true , Public:false}, "GameNotDerivedFromValidGameType", $.String);

  $.Property({Static:true , Public:false}, "CannotCreateGameType", $.String);

  $.Property({Static:true , Public:false}, "RunNotSupported", $.String);

  $.Property({Static:true , Public:false}, "GraphicsComponentNotAttachedToGame", $.String);

  $.Property({Static:true , Public:false}, "GraphicsDeviceManagerAlreadyPresent", $.String);

  $.Property({Static:true , Public:false}, "InactiveSleepTimeCannotBeZero", $.String);

  $.Property({Static:true , Public:false}, "InvalidScreenAdapter", $.String);

  $.Property({Static:true , Public:false}, "InvalidScreenDeviceName", $.String);

  $.Property({Static:true , Public:false}, "MissingGraphicsDeviceService", $.String);

  $.Property({Static:true , Public:false}, "MustCallBeginDeviceChange", $.String);

  $.Property({Static:true , Public:false}, "NoAudioHardware", $.String);

  $.Property({Static:true , Public:false}, "NoCompatibleDevices", $.String);

  $.Property({Static:true , Public:false}, "NoCompatibleDevicesAfterRanking", $.String);

  $.Property({Static:true , Public:false}, "NoGraphicsDeviceService", $.String);

  $.Property({Static:true , Public:false}, "NoHighResolutionTimer", $.String);

  $.Property({Static:true , Public:false}, "NoMultipleRuns", $.String);

  $.Property({Static:true , Public:false}, "NoNullUseDefaultAdapter", $.String);

  $.Property({Static:true , Public:false}, "NoSuitableGraphicsDevice", $.String);

  $.Property({Static:true , Public:false}, "NullOrEmptyScreenDeviceName", $.String);

  $.Property({Static:true , Public:false}, "PreviousDrawThrew", $.String);

  $.Property({Static:true , Public:false}, "PropertyCannotBeCalledBeforeInitialize", $.String);

  $.Property({Static:true , Public:false}, "ServiceAlreadyPresent", $.String);

  $.Property({Static:true , Public:false}, "ServiceMustBeAssignable", $.String);

  $.Property({Static:true , Public:false}, "ServiceProviderCannotBeNull", $.String);

  $.Property({Static:true , Public:false}, "ServiceTypeCannotBeNull", $.String);

  $.Property({Static:true , Public:false}, "TargetElaspedCannotBeZero", $.String);

  $.Property({Static:true , Public:false}, "TitleCannotBeNull", $.String);

  $.Property({Static:true , Public:false}, "ValidateBackBufferDimsFullScreen", $.String);

  $.Property({Static:true , Public:false}, "ValidateBackBufferDimsModeFullScreen", $.String);

})
  .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"))
  .Attribute($asm07.TypeRef("System.CodeDom.Compiler.GeneratedCodeAttribute"), function () { return ["System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0"]; })
  .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerNonUserCodeAttribute"));

JSIL.MakeClass($asm02.TypeRef("Microsoft.Xna.Framework.GameHost"), "Microsoft.Xna.Framework.WindowsGameHost", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x6DF1, null, [$asm02.TypeRef("Microsoft.Xna.Framework.Game")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ApplicationIdle", 
    $sig.make(0x6DF6, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Exit", 
    $sig.make(0x6DFA, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GameWindowActivated", 
    $sig.make(0x6DF5, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GameWindowDeactivated", 
    $sig.make(0x6DF4, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GameWindowResume", 
    $sig.make(0x6DF3, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GameWindowSuspend", 
    $sig.make(0x6DF2, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Window", 
    $sig.make(0x6DF0, $asm02.TypeRef("Microsoft.Xna.Framework.GameWindow"), [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetCurrentProcess", 
    $sig.make(0x6DFD, $asm06.TypeRef("System.IntPtr"), [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetCurrentThread", 
    $sig.make(0x6DFC, $asm06.TypeRef("System.IntPtr"), [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetProcessAffinityMask", 
    $sig.make(0x6DFF, $.Boolean, [
        $asm06.TypeRef("System.IntPtr"), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.UIntPtr")]), 
        $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.UIntPtr")])
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "LockThreadToProcessor", 
    $sig.make(0x6DFB, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Run", 
    $sig.make(0x6DF7, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "RunOneFrame", 
    $sig.make(0x6DF8, null, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "SetThreadAffinityMask", 
    $sig.make(0x6DFE, $asm06.TypeRef("System.UIntPtr"), [$asm06.TypeRef("System.IntPtr"), $asm06.TypeRef("System.UIntPtr")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ShowMissingRequirementMessage", 
    $sig.make(0x6E00, $.Boolean, [$asm06.TypeRef("System.Exception")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "StartGameLoop", 
    $sig.make(0x6DF9, null, [], [])
  );

  $.Field({Static:false, Public:false}, "game", $asm02.TypeRef("Microsoft.Xna.Framework.Game")); 
  $.Field({Static:false, Public:false}, "gameWindow", $asm02.TypeRef("Microsoft.Xna.Framework.WindowsGameWindow")); 
  $.Field({Static:false, Public:false}, "doneRun", $.Boolean); 
  $.Field({Static:false, Public:false}, "exitRequested", $.Boolean); 
  $.Property({Static:false, Public:false, Virtual:true }, "Window", $asm02.TypeRef("Microsoft.Xna.Framework.GameWindow"));

});

JSIL.MakeClass($asm02.TypeRef("Microsoft.Xna.Framework.GameWindow"), "Microsoft.Xna.Framework.WindowsGameWindow", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x6E35, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "add_Resume", 
    $sig.make(0x6E30, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "add_Suspend", 
    $sig.make(0x6E2C, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "BeginScreenDeviceChange", 
    $sig.make(0x6E39, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Close", 
    $sig.make(0x6E37, null, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "DeviceNameFromScreen", 
    $sig.make(0x6E4D, $.String, [$asm0D.TypeRef("System.Windows.Forms.Screen")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "EndScreenDeviceChange", 
    $sig.make(0x6E3A, null, [
        $.String, $.Int32, 
        $.Int32
      ], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "FindFirstIcon", 
    $sig.make(0x6E55, $asm0B.TypeRef("System.Drawing.Icon"), [$asm06.TypeRef("System.Reflection.Assembly")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_AllowUserResizing", 
    $sig.make(0x6E18, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_ClientBounds", 
    $sig.make(0x6E22, $asm01.TypeRef("Microsoft.Xna.Framework.Rectangle"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_CurrentOrientation", 
    $sig.make(0x6E24, $asm01.TypeRef("Microsoft.Xna.Framework.DisplayOrientation"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Form", 
    $sig.make(0x6E2A, $asm0D.TypeRef("System.Windows.Forms.Form"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Handle", 
    $sig.make(0x6E16, $asm06.TypeRef("System.IntPtr"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsMinimized", 
    $sig.make(0x6E28, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsMouseVisible", 
    $sig.make(0x6E1B, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_ScreenDeviceName", 
    $sig.make(0x6E26, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetAssemblyTitle", 
    $sig.make(0x6E53, $.String, [$asm06.TypeRef("System.Reflection.Assembly")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetDefaultIcon", 
    $sig.make(0x6E57, $asm0B.TypeRef("System.Drawing.Icon"), [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetDefaultTitleName", 
    $sig.make(0x6E54, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "mainForm_ApplicationActivated", 
    $sig.make(0x6E3F, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "mainForm_ApplicationDeactivated", 
    $sig.make(0x6E40, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "mainForm_Closing", 
    $sig.make(0x6E47, null, [$.Object, $asm07.TypeRef("System.ComponentModel.CancelEventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "mainForm_Paint", 
    $sig.make(0x6E46, null, [$.Object, $asm0D.TypeRef("System.Windows.Forms.PaintEventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "mainForm_Resume", 
    $sig.make(0x6E49, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "mainForm_ScreenChanged", 
    $sig.make(0x6E42, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "mainForm_Suspend", 
    $sig.make(0x6E4A, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "mainForm_UserResized", 
    $sig.make(0x6E44, null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnResume", 
    $sig.make(0x6E3E, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnSuspend", 
    $sig.make(0x6E3D, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "remove_Resume", 
    $sig.make(0x6E32, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "remove_Suspend", 
    $sig.make(0x6E2E, null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "ScreenFromAdapter", 
    $sig.make(0x6E52, $asm0D.TypeRef("System.Windows.Forms.Screen"), [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsAdapter")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "ScreenFromDeviceName", 
    $sig.make(0x6E51, $asm0D.TypeRef("System.Windows.Forms.Screen"), [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "ScreenFromHandle", 
    $sig.make(0x6E4C, $asm0D.TypeRef("System.Windows.Forms.Screen"), [$asm06.TypeRef("System.IntPtr")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_AllowUserResizing", 
    $sig.make(0x6E19, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_IsGuideVisible", 
    $sig.make(0x6E1F, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_IsMouseVisible", 
    $sig.make(0x6E1C, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SetSupportedOrientations", 
    $sig.make(0x6E3C, null, [$asm01.TypeRef("Microsoft.Xna.Framework.DisplayOrientation")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SetTitle", 
    $sig.make(0x6E3B, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Tick", 
    $sig.make(0x6E4B, null, [], [])
  );

  $.Field({Static:false, Public:false}, "isMouseVisible", $.Boolean); 
  $.Field({Static:false, Public:false}, "isGuideVisible", $.Boolean); 
  $.Field({Static:false, Public:false}, "inDeviceTransition", $.Boolean); 
  $.Field({Static:false, Public:false}, "pendingException", $asm06.TypeRef("System.Exception")); 
  $.Field({Static:false, Public:false}, "Suspend", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Field({Static:false, Public:false}, "Resume", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
  $.Property({Static:false, Public:true , Virtual:true }, "Handle", $asm06.TypeRef("System.IntPtr"));

  $.Property({Static:false, Public:true , Virtual:true }, "AllowUserResizing", $.Boolean);

  $.Property({Static:false, Public:false, Virtual:true }, "IsMouseVisible", $.Boolean);

  $.Property({Static:false, Public:false}, "IsGuideVisible", $.Boolean);

  $.Property({Static:false, Public:true , Virtual:true }, "ClientBounds", $asm01.TypeRef("Microsoft.Xna.Framework.Rectangle"));

  $.Property({Static:false, Public:true , Virtual:true }, "CurrentOrientation", $asm01.TypeRef("Microsoft.Xna.Framework.DisplayOrientation"));

  $.Property({Static:false, Public:true , Virtual:true }, "ScreenDeviceName", $.String);

  $.Property({Static:false, Public:false, Virtual:true }, "IsMinimized", $.Boolean);

  $.Property({Static:false, Public:false}, "Form", $asm0D.TypeRef("System.Windows.Forms.Form"));

});

