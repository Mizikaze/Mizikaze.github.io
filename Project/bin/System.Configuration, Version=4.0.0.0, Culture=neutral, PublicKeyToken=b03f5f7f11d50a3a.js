/* Generated by JSIL v0.6.0 build 23610. See http://jsil.org/ for more information. */ 
/* Generating type stubs only */ 
var $asm08 = JSIL.DeclareAssembly("System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

JSIL.DeclareNamespace("System");
JSIL.DeclareNamespace("System.Configuration");
JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.ConfigurationElement", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x8C56, null, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "ApplyInstanceAttributes", 
    $sig.make(0x8C7F, null, [$.Object], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "ApplyValidator", 
    $sig.make(0x8C85, null, [$.Type], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "ApplyValidatorsRecursive", 
    $sig.make(0x8C84, null, [$.Type], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AssociateContext", 
    $sig.make(0x8C5D, null, [$asm08.TypeRef("System.Configuration.BaseConfigurationRecord")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "CachePerTypeValidator", 
    $sig.make(0x8C83, null, [$asm06.TypeRef("System.Type"), $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CallInit", 
    $sig.make(0x8C76, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CheckLockedElement", 
    $sig.make(0x8C7C, null, [$.String, $asm0E.TypeRef("System.Xml.XmlReader")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "CreateConfigurationPropertyFromAttributes", 
    $sig.make(0x8C82, $asm08.TypeRef("System.Configuration.ConfigurationProperty"), [$asm06.TypeRef("System.Reflection.PropertyInfo")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "CreateElement", 
    $sig.make(0x8C75, $.Type, [$asm06.TypeRef("System.Type")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "CreatePropertyBagFromType", 
    $sig.make(0x8C81, $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"), [$asm06.TypeRef("System.Type")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "DeserializeElement", 
    $sig.make(0x8C6D, null, [$asm0E.TypeRef("System.Xml.XmlReader"), $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "DeserializePropertyValue", 
    $sig.make(0x8C8D, $.Object, [$asm08.TypeRef("System.Configuration.ConfigurationProperty"), $asm0E.TypeRef("System.Xml.XmlReader")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Dump", 
    $sig.make(0x8C69, null, [$asm06.TypeRef("System.IO.TextWriter")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "EnsureRequiredProperties", 
    $sig.make(0x8C8F, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Object.Equals", 
    $sig.make(0x8C66, $.Boolean, [$.Object], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_CurrentConfiguration", 
    $sig.make(0x8C54, $asm08.TypeRef("System.Configuration.Configuration"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_DataToWriteInternal", 
    $sig.make(0x8C23, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_ElementInformation", 
    $sig.make(0x8C50, $asm08.TypeRef("System.Configuration.ElementInformation"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ElementPresent", 
    $sig.make(0x8C29, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ElementProperty", 
    $sig.make(0x8C52, $asm08.TypeRef("System.Configuration.ConfigurationElementProperty"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "get_ElementTagName", 
    $sig.make(0x8C2F, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_EvaluationContext", 
    $sig.make(0x8C51, $asm08.TypeRef("System.Configuration.ContextInformation"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Item", 
    $sig.make(0x8C42, $.Object, [$asm08.TypeRef("System.Configuration.ConfigurationProperty")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Item", 
    $sig.make(0x8C49, $.Object, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ItemLocked", 
    $sig.make(0x8C34, $asm08.TypeRef("System.Configuration.ConfigurationValueFlags"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_LockAllAttributesExcept", 
    $sig.make(0x8C38, $asm08.TypeRef("System.Configuration.ConfigurationLockCollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_LockAllElementsExcept", 
    $sig.make(0x8C3C, $asm08.TypeRef("System.Configuration.ConfigurationLockCollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_LockAttributes", 
    $sig.make(0x8C36, $asm08.TypeRef("System.Configuration.ConfigurationLockCollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_LockedAllExceptAttributesList", 
    $sig.make(0x8C33, $asm08.TypeRef("System.Configuration.ConfigurationLockCollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_LockedAttributesList", 
    $sig.make(0x8C31, $asm08.TypeRef("System.Configuration.ConfigurationLockCollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_LockElements", 
    $sig.make(0x8C3A, $asm08.TypeRef("System.Configuration.ConfigurationLockCollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_LockItem", 
    $sig.make(0x8C3E, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Properties", 
    $sig.make(0x8C4D, $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Values", 
    $sig.make(0x8C4F, $asm08.TypeRef("System.Configuration.ConfigurationValues"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetErrors", 
    $sig.make(0x8C7B, $asm08.TypeRef("System.Configuration.ConfigurationErrorsException"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetErrorsList", 
    $sig.make(0x8C7A, $asm06.TypeRef("System.Collections.ArrayList"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetHashCode", 
    $sig.make(0x8C67, $.Int32, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetTransformedAssemblyString", 
    $sig.make(0x8C74, $.String, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetTransformedTypeString", 
    $sig.make(0x8C73, $.String, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "HandleLockedAttributes", 
    $sig.make(0x8C78, null, [$.Type], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Init", 
    $sig.make(0x8C58, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "InitializeDefault", 
    $sig.make(0x8C64, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IntersectLockCollections", 
    $sig.make(0x8C8C, $asm07.TypeRef("System.Collections.Specialized.StringCollection"), [$asm08.TypeRef("System.Configuration.ConfigurationLockCollection"), $asm08.TypeRef("System.Configuration.ConfigurationLockCollection")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "IsLockAttributeName", 
    $sig.make(0x8C91, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IsModified", 
    $sig.make(0x8C5F, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "IsReadOnly", 
    $sig.make(0x8C61, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ListErrors", 
    $sig.make(0x8C63, null, [$asm06.TypeRef("System.Collections.IList")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "MergeLocks", 
    $sig.make(0x8C77, null, [$.Type], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnDeserializeUnrecognizedAttribute", 
    $sig.make(0x8C71, $.Boolean, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnDeserializeUnrecognizedElement", 
    $sig.make(0x8C72, $.Boolean, [$.String, $asm0E.TypeRef("System.Xml.XmlReader")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnRequiredPropertyNotFound", 
    $sig.make(0x8C6E, $.Object, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ParseLockedAttributes", 
    $sig.make(0x8C8B, $asm08.TypeRef("System.Configuration.ConfigurationLockCollection"), [$asm08.TypeRef("System.Configuration.ConfigurationValue"), $asm08.TypeRef("System.Configuration.ConfigurationLockCollectionType")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "PostDeserialize", 
    $sig.make(0x8C6F, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "PreSerialize", 
    $sig.make(0x8C70, null, [$asm0E.TypeRef("System.Xml.XmlWriter")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "PropertiesFromType", 
    $sig.make(0x8C80, $.Boolean, [$asm06.TypeRef("System.Type"), $jsilcore.TypeRef("JSIL.Reference", [$asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "PropertyFileName", 
    $sig.make(0x8C87, $.String, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "PropertyInfoInternal", 
    $sig.make(0x8C86, $asm08.TypeRef("System.Configuration.PropertySourceInfo"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "PropertyLineNumber", 
    $sig.make(0x8C88, $.Int32, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "RemoveAllInheritedLocks", 
    $sig.make(0x8C7D, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ReportInvalidLock", 
    $sig.make(0x8C8A, null, [
        $.String, $asm08.TypeRef("System.Configuration.ConfigurationLockCollectionType"), 
        $asm08.TypeRef("System.Configuration.ConfigurationValue"), $.String
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Reset", 
    $sig.make(0x8C65, null, [$.Type], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ResetLockLists", 
    $sig.make(0x8C7E, null, [$.Type], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ResetModified", 
    $sig.make(0x8C60, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SerializeElement", 
    $sig.make(0x8C6C, $.Boolean, [$asm0E.TypeRef("System.Xml.XmlWriter"), $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SerializeLockList", 
    $sig.make(0x8C89, $.Boolean, [
        $asm08.TypeRef("System.Configuration.ConfigurationLockCollection"), $.String, 
        $asm0E.TypeRef("System.Xml.XmlWriter")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SerializeToXmlElement", 
    $sig.make(0x8C6B, $.Boolean, [$asm0E.TypeRef("System.Xml.XmlWriter"), $.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_DataToWriteInternal", 
    $sig.make(0x8C24, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_ElementPresent", 
    $sig.make(0x8C2B, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_Item", 
    $sig.make(0x8C45, null, [$asm08.TypeRef("System.Configuration.ConfigurationProperty"), $.Object], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "set_Item", 
    $sig.make(0x8C4B, null, [$.String, $.Object], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_LockItem", 
    $sig.make(0x8C40, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SetLocked", 
    $sig.make(0x8C79, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SetPropertyValue", 
    $sig.make(0x8C68, null, [
        $asm08.TypeRef("System.Configuration.ConfigurationProperty"), $.Object, 
        $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SetReadOnly", 
    $sig.make(0x8C62, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Unmerge", 
    $sig.make(0x8C6A, null, [
        $.Type, $.Type, 
        $asm08.TypeRef("System.Configuration.ConfigurationSaveMode")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "UnMergeLockList", 
    $sig.make(0x8C90, $asm08.TypeRef("System.Configuration.ConfigurationLockCollection"), [
        $asm08.TypeRef("System.Configuration.ConfigurationLockCollection"), $asm08.TypeRef("System.Configuration.ConfigurationLockCollection"), 
        $asm08.TypeRef("System.Configuration.ConfigurationSaveMode")
      ], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "ValidateElement", 
    $sig.make(0x8C8E, null, [
        $.Type, $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"), 
        $.Boolean
      ], [])
  );

  $.Field({Static:true , Public:false}, "s_lockAttributeNames", $jsilcore.TypeRef("System.Array", [$.String])); 
  $.Field({Static:true , Public:false}, "s_propertyBags", $asm06.TypeRef("System.Collections.Hashtable")); 
  $.Field({Static:true , Public:false}, "s_perTypeValidators", $asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("System.Type"), $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase")])); 
  $.Field({Static:true , Public:false, ReadOnly:true }, "s_nullPropertyValue", $.Object); 
  $.Field({Static:true , Public:false}, "s_ElementProperty", $asm08.TypeRef("System.Configuration.ConfigurationElementProperty")); 
  $.Field({Static:false, Public:false}, "_bDataToWrite", $.Boolean); 
  $.Field({Static:false, Public:false}, "_bModified", $.Boolean); 
  $.Field({Static:false, Public:false}, "_bReadOnly", $.Boolean); 
  $.Field({Static:false, Public:false}, "_bElementPresent", $.Boolean); 
  $.Field({Static:false, Public:false}, "_bInited", $.Boolean); 
  $.Field({Static:false, Public:false}, "_lockedAttributesList", $asm08.TypeRef("System.Configuration.ConfigurationLockCollection")); 
  $.Field({Static:false, Public:false}, "_lockedAllExceptAttributesList", $asm08.TypeRef("System.Configuration.ConfigurationLockCollection")); 
  $.Field({Static:false, Public:false}, "_lockedElementsList", $asm08.TypeRef("System.Configuration.ConfigurationLockCollection")); 
  $.Field({Static:false, Public:false}, "_lockedAllExceptElementsList", $asm08.TypeRef("System.Configuration.ConfigurationLockCollection")); 
  $.Field({Static:false, Public:false}, "_values", $asm08.TypeRef("System.Configuration.ConfigurationValues")); 
  $.Field({Static:false, Public:false}, "_elementTagName", $.String); 
  $.Field({Static:false, Public:false}, "_evaluationElement", $asm08.TypeRef("System.Configuration.ElementInformation")); 
  $.Field({Static:false, Public:false}, "_elementProperty", $asm08.TypeRef("System.Configuration.ConfigurationElementProperty")); 
  $.Field({Static:false, Public:false}, "_fItemLocked", $asm08.TypeRef("System.Configuration.ConfigurationValueFlags")); 
  $.Field({Static:false, Public:false}, "_evalContext", $asm08.TypeRef("System.Configuration.ContextInformation")); 
  $.Field({Static:false, Public:false}, "_configRecord", $asm08.TypeRef("System.Configuration.BaseConfigurationRecord")); 
  $.Constant({Static:true , Public:false}, "LockAttributesKey", "lockAttributes"); 
  $.Constant({Static:true , Public:false}, "LockAllAttributesExceptKey", "lockAllAttributesExcept"); 
  $.Constant({Static:true , Public:false}, "LockElementsKey", "lockElements"); 
  $.Constant({Static:true , Public:false}, "LockAll", "*"); 
  $.Constant({Static:true , Public:false}, "LockAllElementsExceptKey", "lockAllElementsExcept"); 
  $.Constant({Static:true , Public:false}, "LockItemKey", "lockItem"); 
  $.Constant({Static:true , Public:false}, "DefaultCollectionPropertyName", ""); 
  $.Property({Static:false, Public:false}, "DataToWriteInternal", $.Boolean);

  $.Property({Static:false, Public:false}, "ElementPresent", $.Boolean);

  $.Property({Static:false, Public:false}, "ElementTagName", $.String);

  $.Property({Static:false, Public:false}, "LockedAttributesList", $asm08.TypeRef("System.Configuration.ConfigurationLockCollection"));

  $.Property({Static:false, Public:false}, "LockedAllExceptAttributesList", $asm08.TypeRef("System.Configuration.ConfigurationLockCollection"));

  $.Property({Static:false, Public:false}, "ItemLocked", $asm08.TypeRef("System.Configuration.ConfigurationValueFlags"));

  $.Property({Static:false, Public:true }, "LockAttributes", $asm08.TypeRef("System.Configuration.ConfigurationLockCollection"));

  $.Property({Static:false, Public:true }, "LockAllAttributesExcept", $asm08.TypeRef("System.Configuration.ConfigurationLockCollection"));

  $.Property({Static:false, Public:true }, "LockElements", $asm08.TypeRef("System.Configuration.ConfigurationLockCollection"));

  $.Property({Static:false, Public:true }, "LockAllElementsExcept", $asm08.TypeRef("System.Configuration.ConfigurationLockCollection"));

  $.Property({Static:false, Public:true }, "LockItem", $.Boolean);

  $.Property({Static:false, Public:false}, "Item", $.Object);

  $.Property({Static:false, Public:false}, "Item", $.Object);

  $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

  $.Property({Static:false, Public:false}, "Values", $asm08.TypeRef("System.Configuration.ConfigurationValues"));

  $.Property({Static:false, Public:true }, "ElementInformation", $asm08.TypeRef("System.Configuration.ElementInformation"));

  $.Property({Static:false, Public:false}, "EvaluationContext", $asm08.TypeRef("System.Configuration.ContextInformation"));

  $.Property({Static:false, Public:false, Virtual:true }, "ElementProperty", $asm08.TypeRef("System.Configuration.ConfigurationElementProperty"));

  $.Property({Static:false, Public:true }, "CurrentConfiguration", $asm08.TypeRef("System.Configuration.Configuration"));

})
  .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationElement"), "System.Configuration.ConfigurationSection", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xA468, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "DeserializeSection", 
    $sig.make(0xA46E, null, [$asm0E.TypeRef("System.Xml.XmlReader")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_SectionInformation", 
    $sig.make(0xA465, $asm08.TypeRef("System.Configuration.SectionInformation"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "GetRuntimeObject", 
    $sig.make(0xA469, $.Object, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IsModified", 
    $sig.make(0xA46B, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ResetModified", 
    $sig.make(0xA46C, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SerializeSection", 
    $sig.make(0xA470, $.String, [
        $asm08.TypeRef("System.Configuration.ConfigurationElement"), $.String, 
        $asm08.TypeRef("System.Configuration.ConfigurationSaveMode")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ShouldSerializeElementInTargetVersion", 
    $sig.make(0xA472, $.Boolean, [
        $asm08.TypeRef("System.Configuration.ConfigurationElement"), $.String, 
        $asm07.TypeRef("System.Runtime.Versioning.FrameworkName")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ShouldSerializePropertyInTargetVersion", 
    $sig.make(0xA471, $.Boolean, [
        $asm08.TypeRef("System.Configuration.ConfigurationProperty"), $.String, 
        $asm07.TypeRef("System.Runtime.Versioning.FrameworkName"), $asm08.TypeRef("System.Configuration.ConfigurationElement")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ShouldSerializeSectionInTargetVersion", 
    $sig.make(0xA473, $.Boolean, [$asm07.TypeRef("System.Runtime.Versioning.FrameworkName")], [])
  );

  $.Field({Static:false, Public:false}, "_section", $asm08.TypeRef("System.Configuration.SectionInformation")); 
  $.Property({Static:false, Public:true }, "SectionInformation", $asm08.TypeRef("System.Configuration.SectionInformation"));

});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationSection"), "System.Configuration.AppSettingsSection", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0xAB18, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "DeserializeElement", 
    $sig.make(0xAB1D, null, [$asm0E.TypeRef("System.Xml.XmlReader"), $.Boolean], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "EnsureStaticPropertyBag", 
    $sig.make(0xAB17, $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_File", 
    $sig.make(0xAB15, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_InternalSettings", 
    $sig.make(0xAB13, $asm07.TypeRef("System.Collections.Specialized.NameValueCollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Properties", 
    $sig.make(0xAB12, $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_Settings", 
    $sig.make(0xAB14, $asm08.TypeRef("System.Configuration.KeyValueConfigurationCollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetRuntimeObject", 
    $sig.make(0xAB19, $.Object, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IsModified", 
    $sig.make(0xAB1B, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Reset", 
    $sig.make(0xAB1A, null, [$asm08.TypeRef("System.Configuration.ConfigurationElement")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SerializeSection", 
    $sig.make(0xAB1C, $.String, [
        $asm08.TypeRef("System.Configuration.ConfigurationElement"), $.String, 
        $asm08.TypeRef("System.Configuration.ConfigurationSaveMode")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_File", 
    $sig.make(0xAB16, null, [$.String], [])
  );

  $.Field({Static:true , Public:false}, "s_properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection")); 
  $.Field({Static:true , Public:false}, "s_propAppSettings", $asm08.TypeRef("System.Configuration.ConfigurationProperty")); 
  $.Field({Static:true , Public:false}, "s_propFile", $asm08.TypeRef("System.Configuration.ConfigurationProperty")); 
  $.Field({Static:false, Public:false}, "_KeyValueCollection", $asm08.TypeRef("System.Configuration.KeyValueInternalCollection")); 
  $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

  $.Property({Static:false, Public:false}, "InternalSettings", $asm07.TypeRef("System.Collections.Specialized.NameValueCollection"));

  $.Property({Static:false, Public:true }, "Settings", $asm08.TypeRef("System.Configuration.KeyValueConfigurationCollection"))
    .Attribute($asm08.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return [""]; });

  $.Property({Static:false, Public:true }, "File", $.String)
    .Attribute($asm08.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["file"]; });

});

JSIL.DeclareNamespace("System.Configuration.Internal");
JSIL.MakeInterface(
  "System.Configuration.Internal.IInternalConfigRecord", true, [], function ($) {
    $.Method({}, "get_ConfigPath", $sig.make(0x9911, $.String, [], []));
    $.Method({}, "get_StreamName", $sig.make(0x9913, $.String, [], []));
    $.Method({}, "get_HasInitErrors", $sig.make(0x9915, $.Boolean, [], []));
    $.Method({}, "ThrowIfInitErrors", $sig.make(0x9916, null, [], []));
    $.Method({}, "GetSection", $sig.make(0x9917, $.Object, [$.String], []));
    $.Method({}, "GetLkgSection", $sig.make(0x9918, $.Object, [$.String], []));
    $.Method({}, "RefreshSection", $sig.make(0x9919, null, [$.String], []));
    $.Method({}, "Remove", $sig.make(0x991A, null, [], []));
    $.Property({}, "ConfigPath");
    $.Property({}, "StreamName");
    $.Property({}, "HasInitErrors");
  }, []);

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.BaseConfigurationRecord", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x994C, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AddImplicitSections", 
    $sig.make(0x9990, null, [$asm06.TypeRef("System.Collections.Hashtable")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AddLocation", 
    $sig.make(0x994A, null, [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "AllowDefinitionToEnum", 
    $sig.make(0x9968, $asm08.TypeRef("System.Configuration.ConfigurationAllowDefinition"), [$.String, $asm08.TypeRef("System.Configuration.XmlUtil")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "AllowExeDefinitionToEnum", 
    $sig.make(0x9967, $asm08.TypeRef("System.Configuration.ConfigurationAllowExeDefinition"), [$.String, $asm08.TypeRef("System.Configuration.XmlUtil")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CallCreateSection", 
    $sig.make(0x9960, $.Object, [
        $.Boolean, $asm08.TypeRef("System.Configuration.FactoryRecord"), 
        $asm08.TypeRef("System.Configuration.SectionRecord"), $.Object, 
        $asm08.TypeRef("System.Configuration.ConfigXmlReader"), $.String, 
        $.Int32
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CallHostDecryptSection", 
    $sig.make(0x994B, $.String, [
        $.String, $asm08.TypeRef("System.Configuration.ProtectedConfigurationProvider"), 
        $asm08.TypeRef("System.Configuration.ProtectedConfigurationSection")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CheckPermissionAllowed", 
    $sig.make(0x9959, null, [
        $.String, $.Boolean, 
        $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CloseRecursive", 
    $sig.make(0x9989, null, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "CombineConfigKey", 
    $sig.make(0x9969, $.String, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CreateSection", 
    $sig.make(0x9941, $.Object, [
        $.Boolean, $asm08.TypeRef("System.Configuration.FactoryRecord"), 
        $asm08.TypeRef("System.Configuration.SectionRecord"), $.Object, 
        $asm08.TypeRef("System.Configuration.ConfigXmlReader")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CreateSectionDefault", 
    $sig.make(0x9954, null, [
        $.String, $.Boolean, 
        $asm08.TypeRef("System.Configuration.FactoryRecord"), $asm08.TypeRef("System.Configuration.SectionRecord"), 
        $jsilcore.TypeRef("JSIL.Reference", [$.Object]), $jsilcore.TypeRef("JSIL.Reference", [$.Object])
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CreateSectionFactory", 
    $sig.make(0x9940, $.Object, [$asm08.TypeRef("System.Configuration.FactoryRecord")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "DebugValidateIndirectInputs", 
    $sig.make(0x996B, null, [$asm08.TypeRef("System.Configuration.SectionRecord")], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["DBG"]; });

  $.ExternalMethod({Static:false, Public:false}, "DecryptConfigSection", 
    $sig.make(0x998D, $asm08.TypeRef("System.Configuration.ConfigXmlReader"), [$asm08.TypeRef("System.Configuration.ConfigXmlReader"), $asm08.TypeRef("System.Configuration.ProtectedConfigurationProvider")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "EnsureFactories", 
    $sig.make(0x997D, $asm06.TypeRef("System.Collections.Hashtable"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "EnsureLocationSections", 
    $sig.make(0x997E, $asm06.TypeRef("System.Collections.ArrayList"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "EnsureSectionRecord", 
    $sig.make(0x9979, $asm08.TypeRef("System.Configuration.SectionRecord"), [$.String, $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "EnsureSectionRecordImpl", 
    $sig.make(0x997B, $asm08.TypeRef("System.Configuration.SectionRecord"), [
        $.String, $.Boolean, 
        $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "EnsureSectionRecordUnsafe", 
    $sig.make(0x997A, $asm08.TypeRef("System.Configuration.SectionRecord"), [$.String, $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Evaluate", 
    $sig.make(0x9957, $.Boolean, [
        $asm08.TypeRef("System.Configuration.FactoryRecord"), $asm08.TypeRef("System.Configuration.SectionRecord"), 
        $.Object, $.Boolean, 
        $.Boolean, $jsilcore.TypeRef("JSIL.Reference", [$.Object]), 
        $jsilcore.TypeRef("JSIL.Reference", [$.Object])
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "EvaluateOne", 
    $sig.make(0x9958, $.Object, [
        $jsilcore.TypeRef("System.Array", [$.String]), $asm08.TypeRef("System.Configuration.SectionInput"), 
        $.Boolean, $asm08.TypeRef("System.Configuration.FactoryRecord"), 
        $asm08.TypeRef("System.Configuration.SectionRecord"), $.Object
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "FindAndEnsureFactoryRecord", 
    $sig.make(0x9964, $asm08.TypeRef("System.Configuration.FactoryRecord"), [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "FindChangedConfigurationStream", 
    $sig.make(0x998A, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "FindFactoryRecord", 
    $sig.make(0x9962, $asm08.TypeRef("System.Configuration.FactoryRecord"), [
        $.String, $.Boolean, 
        $jsilcore.TypeRef("JSIL.Reference", [$.Type])
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "FindFactoryRecord", 
    $sig.make(0x9963, $asm08.TypeRef("System.Configuration.FactoryRecord"), [$.String, $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "FindSection", 
    $sig.make(0x995A, $asm08.TypeRef("System.Configuration.ConfigXmlReader"), [
        $jsilcore.TypeRef("System.Array", [$.String]), $asm08.TypeRef("System.Configuration.SectionXmlInfo"), 
        $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "FindSectionRecursive", 
    $sig.make(0x995B, $asm08.TypeRef("System.Configuration.ConfigXmlReader"), [
        $jsilcore.TypeRef("System.Array", [$.String]), $.Int32, 
        $asm08.TypeRef("System.Configuration.XmlUtil"), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_AssemblyStringTransformer", 
    $sig.make(0x993D, $asm06.TypeRef("System.Func`2", [$.String, $.String]), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_AssemblyStringTransformerIsSet", 
    $sig.make(0x993B, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ClassFlags", 
    $sig.make(0x991B, $asm08.TypeRef("System.Configuration.SimpleBitVector32"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ConfigContext", 
    $sig.make(0x9937, $.Object, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_ConfigPath", 
    $sig.make(0x991C, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "get_ConfigStreamInfo", 
    $sig.make(0x9931, $asm08.TypeRef("System.Configuration.BaseConfigurationRecord/ConfigRecordStreamInfo"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_CurrentConfiguration", 
    $sig.make(0x9939, $asm08.TypeRef("System.Configuration.Configuration"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_DefaultProviderName", 
    $sig.make(0x9933, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_HasFactoryRecords", 
    $sig.make(0x9935, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_HasInitErrors", 
    $sig.make(0x991E, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_HasStream", 
    $sig.make(0x991F, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Host", 
    $sig.make(0x9921, $asm08.TypeRef("System.Configuration.Internal.IInternalConfigHost"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsEmpty", 
    $sig.make(0x9936, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsInitDelayed", 
    $sig.make(0x9920, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsLocationConfig", 
    $sig.make(0x9930, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsMachineConfig", 
    $sig.make(0x992C, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsRootConfig", 
    $sig.make(0x992A, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_LocationSubPath", 
    $sig.make(0x992E, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Parent", 
    $sig.make(0x9923, $.Type, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ProtectedConfig", 
    $sig.make(0x9934, $asm08.TypeRef("System.Configuration.ProtectedConfigurationSection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_RecordSupportsLocation", 
    $sig.make(0x9938, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_SectionsStack", 
    $sig.make(0x993F, $asm06.TypeRef("System.Collections.Stack"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_StreamName", 
    $sig.make(0x991D, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_TargetFramework", 
    $sig.make(0x993E, $asm07.TypeRef("System.Runtime.Versioning.FrameworkName"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_TypeStringTransformer", 
    $sig.make(0x993C, $asm06.TypeRef("System.Func`2", [$.String, $.String]), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_TypeStringTransformerIsSet", 
    $sig.make(0x993A, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_UnrestrictedConfigPermission", 
    $sig.make(0x9932, $asm08.TypeRef("System.Configuration.ConfigurationPermission"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetFactoryRecord", 
    $sig.make(0x997C, $asm08.TypeRef("System.Configuration.FactoryRecord"), [$.String, $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetLkgSection", 
    $sig.make(0x9946, $.Object, [$.String], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "GetProtectionProviderFromName", 
    $sig.make(0x995E, $asm08.TypeRef("System.Configuration.ProtectedConfigurationProvider"), [$.String, $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetRestrictedPermissions", 
    $sig.make(0x994F, $asm06.TypeRef("System.Security.PermissionSet"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetRuntimeObject", 
    $sig.make(0x9943, $.Object, [$.Object], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetSection", 
    $sig.make(0x9945, $.Object, [$.String], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "GetSection", 
    $sig.make(0x9949, $.Object, [
        $.String, $.Boolean, 
        $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetSectionLockedMode", 
    $sig.make(0x996D, $asm08.TypeRef("System.Configuration.OverrideMode"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetSectionLockedMode", 
    $sig.make(0x996E, $asm08.TypeRef("System.Configuration.OverrideMode"), [$.String, $jsilcore.TypeRef("JSIL.Reference", [$asm08.TypeRef("System.Configuration.OverrideMode")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetSectionRecord", 
    $sig.make(0x9978, $asm08.TypeRef("System.Configuration.SectionRecord"), [$.String, $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetSectionRecursive", 
    $sig.make(0x9953, null, [
        $.String, $.Boolean, 
        $.Boolean, $.Boolean, 
        $.Boolean, $jsilcore.TypeRef("JSIL.Reference", [$.Object]), 
        $jsilcore.TypeRef("JSIL.Reference", [$.Object])
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetSectionXmlReader", 
    $sig.make(0x995D, $asm08.TypeRef("System.Configuration.ConfigXmlReader"), [$jsilcore.TypeRef("System.Array", [$.String]), $asm08.TypeRef("System.Configuration.SectionInput")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "HasStreamChanged", 
    $sig.make(0x998B, $.Boolean, [$.String, $.Object], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "hlAddChild", 
    $sig.make(0x9986, null, [$.String, $.Type], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "hlClearResultRecursive", 
    $sig.make(0x9984, null, [$.String, $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "hlGetChild", 
    $sig.make(0x9985, $.Type, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "hlNeedsChildFor", 
    $sig.make(0x9988, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "hlRemoveChild", 
    $sig.make(0x9987, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Impersonate", 
    $sig.make(0x994E, $asm06.TypeRef("System.IDisposable"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Init", 
    $sig.make(0x9950, null, [
        $asm08.TypeRef("System.Configuration.Internal.IInternalConfigRoot"), $.Type, 
        $.String, $.String
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "InitConfigFromFile", 
    $sig.make(0x9951, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "InitProtectedConfigurationSection", 
    $sig.make(0x995F, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IsDefinitionAllowed", 
    $sig.make(0x9974, $.Boolean, [$asm08.TypeRef("System.Configuration.ConfigurationAllowDefinition"), $asm08.TypeRef("System.Configuration.ConfigurationAllowExeDefinition")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "IsImplicitSection", 
    $sig.make(0x998F, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "IsReservedAttributeName", 
    $sig.make(0x9991, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IsRootDeclaration", 
    $sig.make(0x9961, $.Boolean, [$.String, $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "LoadConfigSource", 
    $sig.make(0x995C, $asm08.TypeRef("System.Configuration.ConfigXmlReader"), [$.String, $asm08.TypeRef("System.Configuration.SectionXmlInfo")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "MonitorStream", 
    $sig.make(0x9980, $.Object, [
        $.String, $.String, 
        $.String
      ], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "NormalizeConfigSource", 
    $sig.make(0x997F, $.String, [$.String, $asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "NormalizeLocationSubPath", 
    $sig.make(0x9977, $.String, [$.String, $asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnStreamChanged", 
    $sig.make(0x9981, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "RefreshFactoryRecord", 
    $sig.make(0x9952, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "RefreshSection", 
    $sig.make(0x9947, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Remove", 
    $sig.make(0x9948, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ResolveLocationSections", 
    $sig.make(0x9972, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ResolveOverrideModeFromParent", 
    $sig.make(0x996C, $asm08.TypeRef("System.Configuration.OverrideMode"), [$.String, $jsilcore.TypeRef("JSIL.Reference", [$asm08.TypeRef("System.Configuration.OverrideMode")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ScanFactories", 
    $sig.make(0x9965, $asm06.TypeRef("System.Collections.Hashtable"), [$asm08.TypeRef("System.Configuration.XmlUtil")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ScanFactoriesRecursive", 
    $sig.make(0x9966, null, [
        $asm08.TypeRef("System.Configuration.XmlUtil"), $.String, 
        $asm06.TypeRef("System.Collections.Hashtable")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ScanLocationSection", 
    $sig.make(0x9971, null, [$asm08.TypeRef("System.Configuration.XmlUtil")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ScanSections", 
    $sig.make(0x996F, null, [$asm08.TypeRef("System.Configuration.XmlUtil")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ScanSectionsRecursive", 
    $sig.make(0x9970, null, [
        $asm08.TypeRef("System.Configuration.XmlUtil"), $.String, 
        $.Boolean, $.String, 
        $asm08.TypeRef("System.Configuration.OverrideModeSetting"), $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ShouldPrefetchRawXml", 
    $sig.make(0x994D, $.Boolean, [$asm08.TypeRef("System.Configuration.FactoryRecord")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ShouldSkipDueToInheritInChildApplications", 
    $sig.make(0x9955, $.Boolean, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ShouldSkipDueToInheritInChildApplications", 
    $sig.make(0x9956, $.Boolean, [$.Boolean, $.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "SplitConfigKey", 
    $sig.make(0x996A, null, [
        $.String, $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
        $jsilcore.TypeRef("JSIL.Reference", [$.String])
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "ThrowIfInitErrors", 
    $sig.make(0x9944, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ThrowIfParseErrors", 
    $sig.make(0x998E, null, [$asm08.TypeRef("System.Configuration.ConfigurationSchemaErrors")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "UseParentResult", 
    $sig.make(0x9942, $.Object, [
        $.String, $.Object, 
        $asm08.TypeRef("System.Configuration.SectionRecord")
      ], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "ValidateProtectionProviderAttribute", 
    $sig.make(0x998C, $.String, [$.String, $asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ValidateUniqueChildConfigSource", 
    $sig.make(0x9983, null, [
        $.String, $.String, 
        $.String, $asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ValidateUniqueConfigSource", 
    $sig.make(0x9982, null, [
        $.String, $.String, 
        $.String, $asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "VerifyDefinitionAllowed", 
    $sig.make(0x9973, null, [
        $asm08.TypeRef("System.Configuration.FactoryRecord"), $.String, 
        $asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo")
      ], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "VerifySectionName", 
    $sig.make(0x9975, null, [
        $.String, $asm08.TypeRef("System.Configuration.XmlUtil"), 
        $asm08.TypeRef("System.Configuration.ExceptionAction"), $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "VerifySectionName", 
    $sig.make(0x9976, null, [
        $.String, $asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo"), 
        $.Boolean
      ], [])
  );

  $.Field({Static:true , Public:false, ReadOnly:true }, "ConfigPathSeparatorParams", $jsilcore.TypeRef("System.Array", [$.Char])); 
  $.Field({Static:true , Public:false}, "s_unrestrictedConfigPermission", $asm08.TypeRef("System.Configuration.ConfigurationPermission")); 
  $.Field({Static:false, Public:false}, "_flags", $asm08.TypeRef("System.Configuration.SafeBitVector32")); 
  $.Field({Static:false, Public:false}, "_parent", $.Type); 
  $.Field({Static:false, Public:false}, "_children", $asm06.TypeRef("System.Collections.Hashtable")); 
  $.Field({Static:false, Public:false}, "_configRoot", $asm08.TypeRef("System.Configuration.Internal.InternalConfigRoot")); 
  $.Field({Static:false, Public:false}, "_configName", $.String); 
  $.Field({Static:false, Public:false}, "_configPath", $.String); 
  $.Field({Static:false, Public:false}, "_locationSubPath", $.String); 
  $.Field({Static:false, Public:false}, "_configStreamInfo", $asm08.TypeRef("System.Configuration.BaseConfigurationRecord/ConfigRecordStreamInfo")); 
  $.Field({Static:false, Public:false}, "_configContext", $.Object); 
  $.Field({Static:false, Public:false}, "_protectedConfig", $asm08.TypeRef("System.Configuration.ProtectedConfigurationSection")); 
  $.Field({Static:false, Public:false}, "_restrictedPermissions", $asm06.TypeRef("System.Security.PermissionSet")); 
  $.Field({Static:false, Public:false}, "_initErrors", $asm08.TypeRef("System.Configuration.ConfigurationSchemaErrors")); 
  $.Field({Static:false, Public:false}, "_initDelayedRoot", $.Type); 
  $.Field({Static:false, Public:false}, "_factoryRecords", $asm06.TypeRef("System.Collections.Hashtable")); 
  $.Field({Static:false, Public:false}, "_sectionRecords", $asm06.TypeRef("System.Collections.Hashtable")); 
  $.Field({Static:false, Public:false}, "_locationSections", $asm06.TypeRef("System.Collections.ArrayList")); 
  $.Field({Static:true , Public:false}, "s_appConfigPath", $.String); 
  $.Field({Static:true , Public:false}, "s_indirectInputsComparer", $asm06.TypeRef("System.Collections.Generic.IComparer`1", [$asm08.TypeRef("System.Configuration.SectionInput")])); 
  $.Field({Static:true , Public:false}, "s_invalidSubPathCharactersArray", $jsilcore.TypeRef("System.Array", [$.Char])); 
  $.Constant({Static:true , Public:false}, "NL", "\r\n"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_TRUE", "true"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_FALSE", "false"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_CONFIGURATION", "configuration"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_CONFIGURATION_NAMESPACE", "http://schemas.microsoft.com/.NetConfiguration/v2.0"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_CONFIGSECTIONS", "configSections"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_SECTION", "section"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_SECTION_NAME", "name"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_SECTION_TYPE", "type"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_SECTION_ALLOWLOCATION", "allowLocation"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_SECTION_ALLOWDEFINITION", "allowDefinition"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_SECTION_ALLOWDEFINITION_EVERYWHERE", "Everywhere"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_SECTION_ALLOWDEFINITION_MACHINEONLY", "MachineOnly"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_SECTION_ALLOWDEFINITION_MACHINETOAPPLICATION", "MachineToApplication"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_SECTION_ALLOWDEFINITION_MACHINETOWEBROOT", "MachineToWebRoot"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_SECTION_ALLOWEXEDEFINITION", "allowExeDefinition"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_SECTION_ALLOWEXEDEFINITION_MACHTOROAMING", "MachineToRoamingUser"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_SECTION_ALLOWEXEDEFINITION_MACHTOLOCAL", "MachineToLocalUser"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_SECTION_RESTARTONEXTERNALCHANGES", "restartOnExternalChanges"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_SECTION_REQUIREPERMISSION", "requirePermission"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_SECTIONGROUP", "sectionGroup"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_SECTIONGROUP_NAME", "name"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_SECTIONGROUP_TYPE", "type"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_REMOVE", "remove"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_CLEAR", "clear"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_LOCATION", "location"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_LOCATION_PATH", "path"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_LOCATION_ALLOWOVERRIDE", "allowOverride"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_LOCATION_INHERITINCHILDAPPLICATIONS", "inheritInChildApplications"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_CONFIGSOURCE", "configSource"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_XMLNS", "xmlns"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_PROTECTION_PROVIDER", "configProtectionProvider"); 
  $.Constant({Static:true , Public:false}, "FORMAT_NEWCONFIGFILE", "<?xml version=\"1.0\" encoding=\"{0}\"?>\r\n"); 
  $.Constant({Static:true , Public:false}, "FORMAT_CONFIGURATION", "<configuration>\r\n"); 
  $.Constant({Static:true , Public:false}, "FORMAT_CONFIGURATION_NAMESPACE", "<configuration xmlns=\"{0}\">\r\n"); 
  $.Constant({Static:true , Public:false}, "FORMAT_CONFIGURATION_ENDELEMENT", "</configuration>"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_SECTION_OVERRIDEMODEDEFAULT", "overrideModeDefault"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_LOCATION_OVERRIDEMODE", "overrideMode"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_OVERRIDEMODE_INHERIT", "Inherit"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_OVERRIDEMODE_ALLOW", "Allow"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_OVERRIDEMODE_DENY", "Deny"); 
  $.Constant({Static:true , Public:false}, "FORMAT_LOCATION_NOPATH", "<location {0} inheritInChildApplications=\"{1}\">\r\n"); 
  $.Constant({Static:true , Public:false}, "FORMAT_LOCATION_PATH", "<location path=\"{2}\" {0} inheritInChildApplications=\"{1}\">\r\n"); 
  $.Constant({Static:true , Public:false}, "FORMAT_LOCATION_ENDELEMENT", "</location>"); 
  $.Constant({Static:true , Public:false}, "KEYWORD_LOCATION_OVERRIDEMODE_STRING", "{0}=\"{1}\""); 
  $.Constant({Static:true , Public:false}, "FORMAT_SECTION_CONFIGSOURCE", "<{0} configSource=\"{1}\" />"); 
  $.Constant({Static:true , Public:false}, "FORMAT_CONFIGSOURCE_FILE", "<?xml version=\"1.0\" encoding=\"{0}\"?>\r\n"); 
  $.Constant({Static:true , Public:false}, "FORMAT_SECTIONGROUP_ENDELEMENT", "</sectionGroup>"); 
  $.Constant({Static:true , Public:false}, "ClassSupportsChangeNotifications", 1); 
  $.Constant({Static:true , Public:false}, "ClassSupportsRefresh", 2); 
  $.Constant({Static:true , Public:false}, "ClassSupportsImpersonation", 4); 
  $.Constant({Static:true , Public:false}, "ClassSupportsRestrictedPermissions", 8); 
  $.Constant({Static:true , Public:false}, "ClassSupportsKeepInputs", 16); 
  $.Constant({Static:true , Public:false}, "ClassSupportsDelayedInit", 32); 
  $.Constant({Static:true , Public:false}, "ClassIgnoreLocalErrors", 64); 
  $.Constant({Static:true , Public:false}, "ProtectedDataInitialized", 1); 
  $.Constant({Static:true , Public:false}, "Closed", 2); 
  $.Constant({Static:true , Public:false}, "PrefetchAll", 8); 
  $.Constant({Static:true , Public:false}, "IsAboveApplication", 32); 
  $.Constant({Static:true , Public:false}, "ContextEvaluated", 128); 
  $.Constant({Static:true , Public:false}, "IsLocationListResolved", 256); 
  $.Constant({Static:true , Public:false}, "NamespacePresentInFile", 512); 
  $.Constant({Static:true , Public:false}, "RestrictedPermissionsResolved", 2048); 
  $.Constant({Static:true , Public:false}, "IsTrusted", 8192); 
  $.Constant({Static:true , Public:false}, "SupportsChangeNotifications", 65536); 
  $.Constant({Static:true , Public:false}, "SupportsRefresh", 131072); 
  $.Constant({Static:true , Public:false}, "SupportsPath", 262144); 
  $.Constant({Static:true , Public:false}, "SupportsKeepInputs", 524288); 
  $.Constant({Static:true , Public:false}, "SupportsLocation", 1048576); 
  $.Constant({Static:true , Public:false}, "ForceLocationWritten", 16777216); 
  $.Constant({Static:true , Public:false}, "SuggestLocationRemoval", 33554432); 
  $.Constant({Static:true , Public:false}, "NamespacePresentCurrent", 67108864); 
  $.Constant({Static:true , Public:false}, "ConfigPathSeparatorChar", "/"); 
  $.Constant({Static:true , Public:false}, "ConfigPathSeparatorString", "/"); 
  $.Constant({Static:true , Public:false}, "invalidFirstSubPathCharacters", "\\./"); 
  $.Constant({Static:true , Public:false}, "invalidLastSubPathCharacters", "\\./"); 
  $.Constant({Static:true , Public:false}, "invalidSubPathCharactersString", "\\?:*\"<>|"); 
  $.Constant({Static:true , Public:false}, "ProtectedConfigurationSectionTypeName", "System.Configuration.ProtectedConfigurationSection, System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
  $.Constant({Static:true , Public:false}, "RESERVED_SECTION_PROTECTED_CONFIGURATION", "configProtectedData"); 
  $.Property({Static:false, Public:false, Virtual:true }, "ClassFlags", $asm08.TypeRef("System.Configuration.SimpleBitVector32"));

  $.Property({Static:false, Public:true , Virtual:true }, "ConfigPath", $.String);

  $.Property({Static:false, Public:true , Virtual:true }, "StreamName", $.String);

  $.Property({Static:false, Public:true , Virtual:true }, "HasInitErrors", $.Boolean);

  $.Property({Static:false, Public:false}, "HasStream", $.Boolean);

  $.Property({Static:false, Public:false}, "IsInitDelayed", $.Boolean);

  $.Property({Static:false, Public:false}, "Host", $asm08.TypeRef("System.Configuration.Internal.IInternalConfigHost"));

  $.Property({Static:false, Public:false}, "Parent", $.Type);

  $.Property({Static:false, Public:false}, "IsRootConfig", $.Boolean);

  $.Property({Static:false, Public:false}, "IsMachineConfig", $.Boolean);

  $.Property({Static:false, Public:false}, "LocationSubPath", $.String);

  $.Property({Static:false, Public:false}, "IsLocationConfig", $.Boolean);

  $.Property({Static:false, Public:false}, "ConfigStreamInfo", $asm08.TypeRef("System.Configuration.BaseConfigurationRecord/ConfigRecordStreamInfo"));

  $.Property({Static:true , Public:false}, "UnrestrictedConfigPermission", $asm08.TypeRef("System.Configuration.ConfigurationPermission"));

  $.Property({Static:false, Public:false}, "DefaultProviderName", $.String);

  $.Property({Static:false, Public:false}, "ProtectedConfig", $asm08.TypeRef("System.Configuration.ProtectedConfigurationSection"));

  $.Property({Static:false, Public:false}, "HasFactoryRecords", $.Boolean);

  $.Property({Static:false, Public:false}, "IsEmpty", $.Boolean);

  $.Property({Static:false, Public:false}, "ConfigContext", $.Object);

  $.Property({Static:false, Public:false}, "RecordSupportsLocation", $.Boolean);

  $.Property({Static:false, Public:false}, "CurrentConfiguration", $asm08.TypeRef("System.Configuration.Configuration"));

  $.Property({Static:false, Public:false}, "TypeStringTransformerIsSet", $.Boolean);

  $.Property({Static:false, Public:false}, "AssemblyStringTransformerIsSet", $.Boolean);

  $.Property({Static:false, Public:false}, "TypeStringTransformer", $asm06.TypeRef("System.Func`2", [$.String, $.String]));

  $.Property({Static:false, Public:false}, "AssemblyStringTransformer", $asm06.TypeRef("System.Func`2", [$.String, $.String]));

  $.Property({Static:false, Public:false}, "TargetFramework", $asm07.TypeRef("System.Runtime.Versioning.FrameworkName"));

  $.Property({Static:false, Public:false}, "SectionsStack", $asm06.TypeRef("System.Collections.Stack"));

  $.ImplementInterfaces($asm08.TypeRef("System.Configuration.Internal.IInternalConfigRecord"))
})
  .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerDisplayAttribute"), function () { return ["ConfigPath = {ConfigPath}"]; });

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.BaseConfigurationRecord/ConfigRecordStreamInfo", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xA74F, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ClearStreamInfos", 
    $sig.make(0xA750, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_CallbackDelegate", 
    $sig.make(0xA74B, $asm08.TypeRef("System.Configuration.Internal.StreamChangeCallback"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_HasStream", 
    $sig.make(0xA73D, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_HasStreamInfos", 
    $sig.make(0xA74E, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_StreamEncoding", 
    $sig.make(0xA747, $asm06.TypeRef("System.Text.Encoding"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_StreamInfos", 
    $sig.make(0xA74D, $asm07.TypeRef("System.Collections.Specialized.HybridDictionary"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_StreamName", 
    $sig.make(0xA73F, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_StreamVersion", 
    $sig.make(0xA743, $.Object, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_CallbackDelegate", 
    $sig.make(0xA74C, null, [$asm08.TypeRef("System.Configuration.Internal.StreamChangeCallback")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_HasStream", 
    $sig.make(0xA73E, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_StreamEncoding", 
    $sig.make(0xA748, null, [$asm06.TypeRef("System.Text.Encoding")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_StreamName", 
    $sig.make(0xA740, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_StreamVersion", 
    $sig.make(0xA745, null, [$.Object], [])
  );

  $.Field({Static:false, Public:false}, "_hasStream", $.Boolean); 
  $.Field({Static:false, Public:false}, "_streamname", $.String); 
  $.Field({Static:false, Public:false}, "_streamVersion", $.Object); 
  $.Field({Static:false, Public:false}, "_encoding", $asm06.TypeRef("System.Text.Encoding")); 
  $.Field({Static:false, Public:false}, "_callbackDelegate", $asm08.TypeRef("System.Configuration.Internal.StreamChangeCallback")); 
  $.Field({Static:false, Public:false}, "_streamInfos", $asm07.TypeRef("System.Collections.Specialized.HybridDictionary")); 
  $.Property({Static:false, Public:false}, "HasStream", $.Boolean);

  $.Property({Static:false, Public:false}, "StreamName", $.String);

  $.Property({Static:false, Public:false}, "StreamVersion", $.Object);

  $.Property({Static:false, Public:false}, "StreamEncoding", $asm06.TypeRef("System.Text.Encoding"));

  $.Property({Static:false, Public:false}, "CallbackDelegate", $asm08.TypeRef("System.Configuration.Internal.StreamChangeCallback"));

  $.Property({Static:false, Public:false}, "StreamInfos", $asm07.TypeRef("System.Collections.Specialized.HybridDictionary"));

  $.Property({Static:false, Public:false}, "HasStreamInfos", $.Boolean);

});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.BaseConfigurationRecord/IndirectLocationInputComparer", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25D86, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Compare", 
    $sig.make(0x25D70, $.Int32, [$asm08.TypeRef("System.Configuration.SectionInput"), $asm08.TypeRef("System.Configuration.SectionInput")], [])
  );

  $.ImplementInterfaces($asm06.TypeRef("System.Collections.Generic.IComparer`1", [$asm08.TypeRef("System.Configuration.SectionInput")]))
});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.ConfigurationValidatorBase", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x9C94, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "CanValidate", 
    $sig.make(0x9C92, $.Boolean, [$asm06.TypeRef("System.Type")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Validate", 
    $sig.make(0x9C93, null, [$.Object], [])
  );

});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"), "System.Configuration.CallbackValidator", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x2592A, null, [$asm06.TypeRef("System.Type"), $asm08.TypeRef("System.Configuration.ValidatorCallback")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x2592D, null, [$asm08.TypeRef("System.Configuration.ValidatorCallback")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CanValidate", 
    $sig.make(0x2592B, $.Boolean, [$asm06.TypeRef("System.Type")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Validate", 
    $sig.make(0x2592C, null, [$.Object], [])
  );

  $.Field({Static:false, Public:false}, "_type", $asm06.TypeRef("System.Type")); 
  $.Field({Static:false, Public:false}, "_callback", $asm08.TypeRef("System.Configuration.ValidatorCallback")); 
});

JSIL.MakeClass($asm06.TypeRef("System.Attribute"), "System.Configuration.ConfigurationValidatorAttribute", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25994, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25995, null, [$asm06.TypeRef("System.Type")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_ValidatorInstance", 
    $sig.make(0x25992, $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_ValidatorType", 
    $sig.make(0x25993, $asm06.TypeRef("System.Type"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.Field({Static:false, Public:false}, "_validator", $asm06.TypeRef("System.Type")); 
  $.Property({Static:false, Public:true , Virtual:true }, "ValidatorInstance", $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"));

  $.Property({Static:false, Public:true }, "ValidatorType", $asm06.TypeRef("System.Type"));

})
  .Attribute($asm06.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm06.System.AttributeTargets.Property]; });

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationValidatorAttribute"), "System.Configuration.CallbackValidatorAttribute", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25A22, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_CallbackMethodName", 
    $sig.make(0x25A20, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_Type", 
    $sig.make(0x25A1E, $asm06.TypeRef("System.Type"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_ValidatorInstance", 
    $sig.make(0x25A1D, $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_CallbackMethodName", 
    $sig.make(0x25A21, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_Type", 
    $sig.make(0x25A1F, null, [$asm06.TypeRef("System.Type")], [])
  );

  $.Field({Static:false, Public:false}, "_type", $asm06.TypeRef("System.Type")); 
  $.Field({Static:false, Public:false}, "_callbackMethodName", $.String); 
  $.Field({Static:false, Public:false}, "_callbackMethod", $asm08.TypeRef("System.Configuration.ValidatorCallback")); 
  $.Property({Static:false, Public:true , Virtual:true }, "ValidatorInstance", $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"));

  $.Property({Static:false, Public:true }, "Type", $asm06.TypeRef("System.Type"));

  $.Property({Static:false, Public:true }, "CallbackMethodName", $.String);

})
  .Attribute($asm06.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm06.System.AttributeTargets.Property]; });

JSIL.MakeInterface(
  "System.Configuration.Internal.IInternalConfigHost", true, [], function ($) {
    $.Method({}, "Init", $sig.make(0xA56F, null, [$asm08.TypeRef("System.Configuration.Internal.IInternalConfigRoot"), $jsilcore.TypeRef("System.Array", [$.Object])], []));
    $.Method({}, "InitForConfiguration", $sig.make(0xA571, null, [
          $jsilcore.TypeRef("JSIL.Reference", [$.String]), $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.String]), $asm08.TypeRef("System.Configuration.Internal.IInternalConfigRoot"), 
          $jsilcore.TypeRef("System.Array", [$.Object])
        ], []));
    $.Method({}, "IsConfigRecordRequired", $sig.make(0xA572, $.Boolean, [$.String], []));
    $.Method({}, "IsInitDelayed", $sig.make(0xA573, $.Boolean, [$asm08.TypeRef("System.Configuration.Internal.IInternalConfigRecord")], []));
    $.Method({}, "RequireCompleteInit", $sig.make(0xA574, null, [$asm08.TypeRef("System.Configuration.Internal.IInternalConfigRecord")], []));
    $.Method({}, "IsSecondaryRoot", $sig.make(0xA575, $.Boolean, [$.String], []));
    $.Method({}, "GetStreamName", $sig.make(0xA576, $.String, [$.String], []));
    $.Method({}, "GetStreamNameForConfigSource", $sig.make(0xA577, $.String, [$.String, $.String], []));
    $.Method({}, "GetStreamVersion", $sig.make(0xA578, $.Object, [$.String], []));
    $.Method({}, "OpenStreamForRead", $sig.make(0xA579, $asm06.TypeRef("System.IO.Stream"), [$.String], []));
    $.Method({}, "OpenStreamForRead", $sig.make(0xA57A, $asm06.TypeRef("System.IO.Stream"), [$.String, $.Boolean], []));
    $.Method({}, "OpenStreamForWrite", $sig.make(0xA57B, $asm06.TypeRef("System.IO.Stream"), [
          $.String, $.String, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ], []));
    $.Method({}, "OpenStreamForWrite", $sig.make(0xA57C, $asm06.TypeRef("System.IO.Stream"), [
          $.String, $.String, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object]), $.Boolean
        ], []));
    $.Method({}, "WriteCompleted", $sig.make(0xA57D, null, [
          $.String, $.Boolean, 
          $.Object
        ], []));
    $.Method({}, "WriteCompleted", $sig.make(0xA57E, null, [
          $.String, $.Boolean, 
          $.Object, $.Boolean
        ], []));
    $.Method({}, "DeleteStream", $sig.make(0xA57F, null, [$.String], []));
    $.Method({}, "IsFile", $sig.make(0xA580, $.Boolean, [$.String], []));
    $.Method({}, "get_SupportsChangeNotifications", $sig.make(0xA55C, $.Boolean, [], []));
    $.Method({}, "StartMonitoringStreamForChanges", $sig.make(0xA581, $.Object, [$.String, $asm08.TypeRef("System.Configuration.Internal.StreamChangeCallback")], []));
    $.Method({}, "StopMonitoringStreamForChanges", $sig.make(0xA582, null, [$.String, $asm08.TypeRef("System.Configuration.Internal.StreamChangeCallback")], []));
    $.Method({}, "get_SupportsRefresh", $sig.make(0xA567, $.Boolean, [], []));
    $.Method({}, "get_SupportsPath", $sig.make(0xA56A, $.Boolean, [], []));
    $.Method({}, "get_SupportsLocation", $sig.make(0xA56B, $.Boolean, [], []));
    $.Method({}, "IsAboveApplication", $sig.make(0xA583, $.Boolean, [$.String], []));
    $.Method({}, "GetConfigPathFromLocationSubPath", $sig.make(0xA584, $.String, [$.String, $.String], []));
    $.Method({}, "IsLocationApplicable", $sig.make(0xA585, $.Boolean, [$.String], []));
    $.Method({}, "IsDefinitionAllowed", $sig.make(0xA586, $.Boolean, [
          $.String, $asm08.TypeRef("System.Configuration.ConfigurationAllowDefinition"), 
          $asm08.TypeRef("System.Configuration.ConfigurationAllowExeDefinition")
        ], []));
    $.Method({}, "VerifyDefinitionAllowed", $sig.make(0xA587, null, [
          $.String, $asm08.TypeRef("System.Configuration.ConfigurationAllowDefinition"), 
          $asm08.TypeRef("System.Configuration.ConfigurationAllowExeDefinition"), $asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo")
        ], []));
    $.Method({}, "IsTrustedConfigPath", $sig.make(0xA588, $.Boolean, [$.String], []));
    $.Method({}, "IsFullTrustSectionWithoutAptcaAllowed", $sig.make(0xA589, $.Boolean, [$asm08.TypeRef("System.Configuration.Internal.IInternalConfigRecord")], []));
    $.Method({}, "GetRestrictedPermissions", $sig.make(0xA58A, null, [
          $asm08.TypeRef("System.Configuration.Internal.IInternalConfigRecord"), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Security.PermissionSet")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ], []));
    $.Method({}, "Impersonate", $sig.make(0xA58B, $asm06.TypeRef("System.IDisposable"), [], []));
    $.Method({}, "PrefetchAll", $sig.make(0xA58C, $.Boolean, [$.String, $.String], []));
    $.Method({}, "PrefetchSection", $sig.make(0xA58D, $.Boolean, [$.String, $.String], []));
    $.Method({}, "CreateDeprecatedConfigContext", $sig.make(0xA58E, $.Object, [$.String], []));
    $.Method({}, "CreateConfigurationContext", $sig.make(0xA58F, $.Object, [$.String, $.String], []));
    $.Method({}, "DecryptSection", $sig.make(0xA590, $.String, [
          $.String, $asm08.TypeRef("System.Configuration.ProtectedConfigurationProvider"), 
          $asm08.TypeRef("System.Configuration.ProtectedConfigurationSection")
        ], []));
    $.Method({}, "EncryptSection", $sig.make(0xA591, $.String, [
          $.String, $asm08.TypeRef("System.Configuration.ProtectedConfigurationProvider"), 
          $asm08.TypeRef("System.Configuration.ProtectedConfigurationSection")
        ], []));
    $.Method({}, "GetConfigType", $sig.make(0xA592, $asm06.TypeRef("System.Type"), [$.String, $.Boolean], []));
    $.Method({}, "GetConfigTypeName", $sig.make(0xA593, $.String, [$asm06.TypeRef("System.Type")], []));
    $.Method({}, "get_IsRemote", $sig.make(0xA56D, $.Boolean, [], []));
    $.Property({}, "SupportsChangeNotifications");
    $.Property({}, "SupportsRefresh");
    $.Property({}, "SupportsPath");
    $.Property({}, "SupportsLocation");
    $.Property({}, "IsRemote");
  }, []);

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.Internal.DelegatingConfigHost", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xB3F4, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "CreateConfigurationContext", 
    $sig.make(0xB414, $.Object, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CreateDeprecatedConfigContext", 
    $sig.make(0xB413, $.Object, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "DecryptSection", 
    $sig.make(0xB415, $.String, [
        $.String, $asm08.TypeRef("System.Configuration.ProtectedConfigurationProvider"), 
        $asm08.TypeRef("System.Configuration.ProtectedConfigurationSection")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "DeleteStream", 
    $sig.make(0xB404, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "EncryptSection", 
    $sig.make(0xB416, $.String, [
        $.String, $asm08.TypeRef("System.Configuration.ProtectedConfigurationProvider"), 
        $asm08.TypeRef("System.Configuration.ProtectedConfigurationSection")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Host", 
    $sig.make(0xB3ED, $asm08.TypeRef("System.Configuration.Internal.IInternalConfigHost"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_IsRemote", 
    $sig.make(0xB3F3, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_SupportsChangeNotifications", 
    $sig.make(0xB3EF, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_SupportsLocation", 
    $sig.make(0xB3F2, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_SupportsPath", 
    $sig.make(0xB3F1, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_SupportsRefresh", 
    $sig.make(0xB3F0, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetConfigPathFromLocationSubPath", 
    $sig.make(0xB40B, $.String, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetConfigType", 
    $sig.make(0xB417, $asm06.TypeRef("System.Type"), [$.String, $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetConfigTypeName", 
    $sig.make(0xB418, $.String, [$asm06.TypeRef("System.Type")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetRestrictedPermissions", 
    $sig.make(0xB40F, null, [
        $asm08.TypeRef("System.Configuration.Internal.IInternalConfigRecord"), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Security.PermissionSet")]), 
        $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetStreamName", 
    $sig.make(0xB3FB, $.String, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetStreamNameForConfigSource", 
    $sig.make(0xB3FC, $.String, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetStreamVersion", 
    $sig.make(0xB3FD, $.Object, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Impersonate", 
    $sig.make(0xB410, $asm06.TypeRef("System.IDisposable"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Init", 
    $sig.make(0xB3F5, null, [$asm08.TypeRef("System.Configuration.Internal.IInternalConfigRoot"), $jsilcore.TypeRef("System.Array", [$.Object])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "InitForConfiguration", 
    $sig.make(0xB3F6, null, [
        $jsilcore.TypeRef("JSIL.Reference", [$.String]), $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
        $jsilcore.TypeRef("JSIL.Reference", [$.String]), $asm08.TypeRef("System.Configuration.Internal.IInternalConfigRoot"), 
        $jsilcore.TypeRef("System.Array", [$.Object])
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "IsAboveApplication", 
    $sig.make(0xB408, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "IsConfigRecordRequired", 
    $sig.make(0xB3F7, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "IsDefinitionAllowed", 
    $sig.make(0xB409, $.Boolean, [
        $.String, $asm08.TypeRef("System.Configuration.ConfigurationAllowDefinition"), 
        $asm08.TypeRef("System.Configuration.ConfigurationAllowExeDefinition")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "IsFile", 
    $sig.make(0xB405, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "IsFullTrustSectionWithoutAptcaAllowed", 
    $sig.make(0xB40E, $.Boolean, [$asm08.TypeRef("System.Configuration.Internal.IInternalConfigRecord")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "IsInitDelayed", 
    $sig.make(0xB3F8, $.Boolean, [$asm08.TypeRef("System.Configuration.Internal.IInternalConfigRecord")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "IsLocationApplicable", 
    $sig.make(0xB40C, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "IsSecondaryRoot", 
    $sig.make(0xB3FA, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "IsTrustedConfigPath", 
    $sig.make(0xB40D, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "OpenStreamForRead", 
    $sig.make(0xB3FE, $asm06.TypeRef("System.IO.Stream"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "OpenStreamForRead", 
    $sig.make(0xB3FF, $asm06.TypeRef("System.IO.Stream"), [$.String, $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "OpenStreamForWrite", 
    $sig.make(0xB400, $asm06.TypeRef("System.IO.Stream"), [
        $.String, $.String, 
        $jsilcore.TypeRef("JSIL.Reference", [$.Object])
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "OpenStreamForWrite", 
    $sig.make(0xB401, $asm06.TypeRef("System.IO.Stream"), [
        $.String, $.String, 
        $jsilcore.TypeRef("JSIL.Reference", [$.Object]), $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "PrefetchAll", 
    $sig.make(0xB411, $.Boolean, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "PrefetchSection", 
    $sig.make(0xB412, $.Boolean, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "RequireCompleteInit", 
    $sig.make(0xB3F9, null, [$asm08.TypeRef("System.Configuration.Internal.IInternalConfigRecord")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_Host", 
    $sig.make(0xB3EE, null, [$asm08.TypeRef("System.Configuration.Internal.IInternalConfigHost")], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "StartMonitoringStreamForChanges", 
    $sig.make(0xB406, $.Object, [$.String, $asm08.TypeRef("System.Configuration.Internal.StreamChangeCallback")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "StopMonitoringStreamForChanges", 
    $sig.make(0xB407, null, [$.String, $asm08.TypeRef("System.Configuration.Internal.StreamChangeCallback")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "VerifyDefinitionAllowed", 
    $sig.make(0xB40A, null, [
        $.String, $asm08.TypeRef("System.Configuration.ConfigurationAllowDefinition"), 
        $asm08.TypeRef("System.Configuration.ConfigurationAllowExeDefinition"), $asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "WriteCompleted", 
    $sig.make(0xB402, null, [
        $.String, $.Boolean, 
        $.Object
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "WriteCompleted", 
    $sig.make(0xB403, null, [
        $.String, $.Boolean, 
        $.Object, $.Boolean
      ], [])
  );

  $.Field({Static:false, Public:false}, "_host", $asm08.TypeRef("System.Configuration.Internal.IInternalConfigHost")); 
  $.Property({Static:false, Public:false}, "Host", $asm08.TypeRef("System.Configuration.Internal.IInternalConfigHost"));

  $.Property({Static:false, Public:true , Virtual:true }, "SupportsChangeNotifications", $.Boolean);

  $.Property({Static:false, Public:true , Virtual:true }, "SupportsRefresh", $.Boolean);

  $.Property({Static:false, Public:true , Virtual:true }, "SupportsPath", $.Boolean);

  $.Property({Static:false, Public:true , Virtual:true }, "SupportsLocation", $.Boolean);

  $.Property({Static:false, Public:true , Virtual:true }, "IsRemote", $.Boolean);

  $.ImplementInterfaces($asm08.TypeRef("System.Configuration.Internal.IInternalConfigHost"))
});

JSIL.MakeInterface(
  "System.Configuration.Internal.IInternalConfigClientHost", true, [], function ($) {
    $.Method({}, "IsExeConfig", $sig.make(0x1E1BE, $.Boolean, [$.String], []));
    $.Method({}, "IsRoamingUserConfig", $sig.make(0x1E1BF, $.Boolean, [$.String], []));
    $.Method({}, "IsLocalUserConfig", $sig.make(0x1E1C0, $.Boolean, [$.String], []));
    $.Method({}, "GetExeConfigPath", $sig.make(0x1E1C1, $.String, [], []));
    $.Method({}, "GetRoamingUserConfigPath", $sig.make(0x1E1C2, $.String, [], []));
    $.Method({}, "GetLocalUserConfigPath", $sig.make(0x1E1C3, $.String, [], []));
  }, []);

JSIL.MakeInterface(
  "System.Configuration.Internal.IInternalConfigSystem", true, [], function ($) {
    $.Method({}, "GetSection", $sig.make(0x25A2A, $.Object, [$.String], []));
    $.Method({}, "RefreshConfig", $sig.make(0x25A2B, null, [$.String], []));
    $.Method({}, "get_SupportsUserConfig", $sig.make(0x25A29, $.Boolean, [], []));
    $.Property({}, "SupportsUserConfig");
  }, []);

JSIL.MakeClass($asm07.TypeRef("System.ComponentModel.TypeConverter"), "System.Configuration.ConfigurationConverterBase", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x2594E, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "CanConvertFrom", 
    $sig.make(0x2594D, $.Boolean, [$asm07.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm06.TypeRef("System.Type")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CanConvertTo", 
    $sig.make(0x2594C, $.Boolean, [$asm07.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm06.TypeRef("System.Type")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ValidateType", 
    $sig.make(0x2594F, null, [$.Object, $asm06.TypeRef("System.Type")], [])
  );

});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationConverterBase"), "System.Configuration.CommaDelimitedStringCollectionConverter", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25958, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "ConvertFrom", 
    $sig.make(0x25957, $.Object, [
        $asm07.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm06.TypeRef("System.Globalization.CultureInfo"), 
        $.Object
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "ConvertTo", 
    $sig.make(0x25956, $.Object, [
        $asm07.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm06.TypeRef("System.Globalization.CultureInfo"), 
        $.Object, $asm06.TypeRef("System.Type")
      ], [])
  );

});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.Configuration", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x9B2D, null, [
        $.String, $asm06.TypeRef("System.Type"), 
        $jsilcore.TypeRef("System.Array", [$.Object])
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ForceGroupsRecursive", 
    $sig.make(0x9B2F, null, [$asm08.TypeRef("System.Configuration.ConfigurationSectionGroup")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_AppSettings", 
    $sig.make(0x9B10, $asm08.TypeRef("System.Configuration.AppSettingsSection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_AssemblyStringTransformer", 
    $sig.make(0x9B1D, $asm06.TypeRef("System.Func`2", [$.String, $.String]), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "get_AssemblyStringTransformerIsSet", 
    $sig.make(0x9B22, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_ConnectionStrings", 
    $sig.make(0x9B11, $asm08.TypeRef("System.Configuration.ConnectionStringsSection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_EvaluationContext", 
    $sig.make(0x9B15, $asm08.TypeRef("System.Configuration.ContextInformation"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_FilePath", 
    $sig.make(0x9B12, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_HasFile", 
    $sig.make(0x9B13, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Locations", 
    $sig.make(0x9B14, $asm08.TypeRef("System.Configuration.ConfigurationLocationCollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_NamespaceDeclared", 
    $sig.make(0x9B19, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_RootSectionGroup", 
    $sig.make(0x9B16, $asm08.TypeRef("System.Configuration.ConfigurationSectionGroup"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_SectionGroups", 
    $sig.make(0x9B18, $asm08.TypeRef("System.Configuration.ConfigurationSectionGroupCollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Sections", 
    $sig.make(0x9B17, $asm08.TypeRef("System.Configuration.ConfigurationSectionCollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_SectionsStack", 
    $sig.make(0x9B23, $asm06.TypeRef("System.Collections.Stack"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_TargetFramework", 
    $sig.make(0x9B1F, $asm07.TypeRef("System.Runtime.Versioning.FrameworkName"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_TypeStringTransformer", 
    $sig.make(0x9B1B, $asm06.TypeRef("System.Func`2", [$.String, $.String]), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "get_TypeStringTransformerIsSet", 
    $sig.make(0x9B21, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetSection", 
    $sig.make(0x9B24, $asm08.TypeRef("System.Configuration.ConfigurationSection"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetSectionGroup", 
    $sig.make(0x9B25, $asm08.TypeRef("System.Configuration.ConfigurationSectionGroup"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OpenLocationConfiguration", 
    $sig.make(0x9B2E, $.Type, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Save", 
    $sig.make(0x9B26, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "Save", 
    $sig.make(0x9B27, null, [$asm08.TypeRef("System.Configuration.ConfigurationSaveMode")], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "Save", 
    $sig.make(0x9B28, null, [$asm08.TypeRef("System.Configuration.ConfigurationSaveMode"), $.Boolean], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "SaveAs", 
    $sig.make(0x9B29, null, [$.String], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "SaveAs", 
    $sig.make(0x9B2A, null, [$.String, $asm08.TypeRef("System.Configuration.ConfigurationSaveMode")], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "SaveAs", 
    $sig.make(0x9B2B, null, [
        $.String, $asm08.TypeRef("System.Configuration.ConfigurationSaveMode"), 
        $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SaveAsImpl", 
    $sig.make(0x9B2C, null, [
        $.String, $asm08.TypeRef("System.Configuration.ConfigurationSaveMode"), 
        $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_AssemblyStringTransformer", 
    $sig.make(0x9B1E, null, [$asm06.TypeRef("System.Func`2", [$.String, $.String])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_NamespaceDeclared", 
    $sig.make(0x9B1A, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_TargetFramework", 
    $sig.make(0x9B20, null, [$asm07.TypeRef("System.Runtime.Versioning.FrameworkName")], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "set_TypeStringTransformer", 
    $sig.make(0x9B1C, null, [$asm06.TypeRef("System.Func`2", [$.String, $.String])], [])
  );

  $.Field({Static:false, Public:false}, "_typeConfigHost", $asm06.TypeRef("System.Type")); 
  $.Field({Static:false, Public:false}, "_hostInitConfigurationParams", $jsilcore.TypeRef("System.Array", [$.Object])); 
  $.Field({Static:false, Public:false}, "_configRoot", $asm08.TypeRef("System.Configuration.Internal.InternalConfigRoot")); 
  $.Field({Static:false, Public:false}, "_configRecord", $asm08.TypeRef("System.Configuration.MgmtConfigurationRecord")); 
  $.Field({Static:false, Public:false}, "_rootSectionGroup", $asm08.TypeRef("System.Configuration.ConfigurationSectionGroup")); 
  $.Field({Static:false, Public:false}, "_locations", $asm08.TypeRef("System.Configuration.ConfigurationLocationCollection")); 
  $.Field({Static:false, Public:false}, "_evalContext", $asm08.TypeRef("System.Configuration.ContextInformation")); 
  $.Field({Static:false, Public:false}, "_TypeStringTransformer", $asm06.TypeRef("System.Func`2", [$.String, $.String])); 
  $.Field({Static:false, Public:false}, "_AssemblyStringTransformer", $asm06.TypeRef("System.Func`2", [$.String, $.String])); 
  $.Field({Static:false, Public:false}, "_TypeStringTransformerIsSet", $.Boolean); 
  $.Field({Static:false, Public:false}, "_AssemblyStringTransformerIsSet", $.Boolean); 
  $.Field({Static:false, Public:false}, "_TargetFramework", $asm07.TypeRef("System.Runtime.Versioning.FrameworkName")); 
  $.Field({Static:false, Public:false}, "_SectionsStack", $asm06.TypeRef("System.Collections.Stack")); 
  $.Property({Static:false, Public:true }, "AppSettings", $asm08.TypeRef("System.Configuration.AppSettingsSection"));

  $.Property({Static:false, Public:true }, "ConnectionStrings", $asm08.TypeRef("System.Configuration.ConnectionStringsSection"));

  $.Property({Static:false, Public:true }, "FilePath", $.String);

  $.Property({Static:false, Public:true }, "HasFile", $.Boolean);

  $.Property({Static:false, Public:true }, "Locations", $asm08.TypeRef("System.Configuration.ConfigurationLocationCollection"));

  $.Property({Static:false, Public:true }, "EvaluationContext", $asm08.TypeRef("System.Configuration.ContextInformation"));

  $.Property({Static:false, Public:true }, "RootSectionGroup", $asm08.TypeRef("System.Configuration.ConfigurationSectionGroup"));

  $.Property({Static:false, Public:true }, "Sections", $asm08.TypeRef("System.Configuration.ConfigurationSectionCollection"));

  $.Property({Static:false, Public:true }, "SectionGroups", $asm08.TypeRef("System.Configuration.ConfigurationSectionGroupCollection"));

  $.Property({Static:false, Public:true }, "NamespaceDeclared", $.Boolean);

  $.Property({Static:false, Public:true }, "TypeStringTransformer", $asm06.TypeRef("System.Func`2", [$.String, $.String]));

  $.Property({Static:false, Public:true }, "AssemblyStringTransformer", $asm06.TypeRef("System.Func`2", [$.String, $.String]));

  $.Property({Static:false, Public:true }, "TargetFramework", $asm07.TypeRef("System.Runtime.Versioning.FrameworkName"));

  $.Property({Static:false, Public:false}, "TypeStringTransformerIsSet", $.Boolean);

  $.Property({Static:false, Public:false}, "AssemblyStringTransformerIsSet", $.Boolean);

  $.Property({Static:false, Public:false}, "SectionsStack", $asm06.TypeRef("System.Collections.Stack"));

});

JSIL.MakeEnum(
  "System.Configuration.ConfigurationAllowDefinition", true, {
    MachineOnly: 0, 
    MachineToWebRoot: 100, 
    MachineToApplication: 200, 
    Everywhere: 300
  }, false
);

JSIL.MakeEnum(
  "System.Configuration.ConfigurationAllowExeDefinition", true, {
    MachineOnly: 0, 
    MachineToApplication: 100, 
    MachineToRoamingUser: 200, 
    MachineToLocalUser: 300
  }, false
);

JSIL.MakeClass($asm06.TypeRef("System.Attribute"), "System.Configuration.ConfigurationCollectionAttribute", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x259C2, null, [$asm06.TypeRef("System.Type")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_AddItemName", 
    $sig.make(0x259B6, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_ClearItemsName", 
    $sig.make(0x259BB, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_CollectionType", 
    $sig.make(0x259BD, $asm08.TypeRef("System.Configuration.ConfigurationElementCollectionType"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_ItemType", 
    $sig.make(0x259B3, $asm06.TypeRef("System.Type"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_RemoveItemName", 
    $sig.make(0x259B9, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_AddItemName", 
    $sig.make(0x259B7, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_ClearItemsName", 
    $sig.make(0x259BC, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_CollectionType", 
    $sig.make(0x259BF, null, [$asm08.TypeRef("System.Configuration.ConfigurationElementCollectionType")], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "set_RemoveItemName", 
    $sig.make(0x259BA, null, [$.String], [])
  );

  $.Field({Static:false, Public:false}, "_addItemName", $.String); 
  $.Field({Static:false, Public:false}, "_removeItemName", $.String); 
  $.Field({Static:false, Public:false}, "_clearItemsName", $.String); 
  $.Field({Static:false, Public:false}, "_itemType", $asm06.TypeRef("System.Type")); 
  $.Field({Static:false, Public:false}, "_collectionType", $asm08.TypeRef("System.Configuration.ConfigurationElementCollectionType")); 
  $.Property({Static:false, Public:true }, "ItemType", $asm06.TypeRef("System.Type"));

  $.Property({Static:false, Public:true }, "AddItemName", $.String);

  $.Property({Static:false, Public:true }, "RemoveItemName", $.String);

  $.Property({Static:false, Public:true }, "ClearItemsName", $.String);

  $.Property({Static:false, Public:true }, "CollectionType", $asm08.TypeRef("System.Configuration.ConfigurationElementCollectionType"));

})
  .Attribute($asm06.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm06.System.AttributeTargets.$Flags("Class", "Property")]; });

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationElement"), "System.Configuration.ConfigurationElementCollection", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x8CD0, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x8CD1, null, [$asm06.TypeRef("System.Collections.IComparer")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AssociateContext", 
    $sig.make(0x8CD2, null, [$asm08.TypeRef("System.Configuration.BaseConfigurationRecord")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "BaseAdd", 
    $sig.make(0x8CDF, null, [$asm08.TypeRef("System.Configuration.ConfigurationElement")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "BaseAdd", 
    $sig.make(0x8CE0, null, [$asm08.TypeRef("System.Configuration.ConfigurationElement"), $.Boolean], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "BaseAdd", 
    $sig.make(0x8CE1, null, [
        $asm08.TypeRef("System.Configuration.ConfigurationElement"), $.Boolean, 
        $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "BaseAdd", 
    $sig.make(0x8CE3, null, [$.Int32, $asm08.TypeRef("System.Configuration.ConfigurationElement")], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "BaseAdd", 
    $sig.make(0x8CE4, null, [
        $.Int32, $asm08.TypeRef("System.Configuration.ConfigurationElement"), 
        $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "BaseAddInternal", 
    $sig.make(0x8CFD, null, [
        $.Int32, $asm08.TypeRef("System.Configuration.ConfigurationElement"), 
        $.Boolean, $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "BaseClear", 
    $sig.make(0x8CEC, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "BaseGet", 
    $sig.make(0x8CE7, $asm08.TypeRef("System.Configuration.ConfigurationElement"), [$.Object], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "BaseGet", 
    $sig.make(0x8CE9, $asm08.TypeRef("System.Configuration.ConfigurationElement"), [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "BaseGetAllKeys", 
    $sig.make(0x8CEA, $jsilcore.TypeRef("System.Array", [$.Object]), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "BaseGetKey", 
    $sig.make(0x8CEB, $.Object, [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "BaseIndexOf", 
    $sig.make(0x8CE2, $.Int32, [$asm08.TypeRef("System.Configuration.ConfigurationElement")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "BaseIsRemoved", 
    $sig.make(0x8CE8, $.Boolean, [$.Object], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "BaseRemove", 
    $sig.make(0x8CE5, null, [$.Object], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "BaseRemove", 
    $sig.make(0x8CE6, null, [$.Object, $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "BaseRemoveAt", 
    $sig.make(0x8CEF, null, [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CallCreateNewElement", 
    $sig.make(0x8CFE, $asm08.TypeRef("System.Configuration.ConfigurationElement"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CallCreateNewElement", 
    $sig.make(0x8CFF, $asm08.TypeRef("System.Configuration.ConfigurationElement"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CompareKeys", 
    $sig.make(0x8D01, $.Boolean, [$.Object, $.Object], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CopyTo", 
    $sig.make(0x8CDC, null, [$jsilcore.TypeRef("System.Array", [$asm08.TypeRef("System.Configuration.ConfigurationElement")]), $.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CreateNewElement", 
    $sig.make(0x8CF5, $asm08.TypeRef("System.Configuration.ConfigurationElement"), [$.String], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "CreateNewElement", 
    $sig.make(0x8CF7, $asm08.TypeRef("System.Configuration.ConfigurationElement"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Object.Equals", 
    $sig.make(0x8CD8, $.Boolean, [$.Object], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_AddElementName", 
    $sig.make(0x8CC1, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "get_ClearElementName", 
    $sig.make(0x8CC5, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_CollectionType", 
    $sig.make(0x8CCF, $asm08.TypeRef("System.Configuration.ConfigurationElementCollectionType"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Count", 
    $sig.make(0x8CC7, $.Int32, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ElementName", 
    $sig.make(0x8CCC, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_EmitClear", 
    $sig.make(0x8CC8, $.Boolean, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_IsSynchronized", 
    $sig.make(0x8CCA, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Items", 
    $sig.make(0x8CC0, $asm06.TypeRef("System.Collections.ArrayList"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_LockableElements", 
    $sig.make(0x8CCD, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_RemoveElementName", 
    $sig.make(0x8CC3, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_SyncRoot", 
    $sig.make(0x8CCB, $.Object, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ThrowOnDuplicate", 
    $sig.make(0x8CCE, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetElementKey", 
    $sig.make(0x8CF8, $.Object, [$asm08.TypeRef("System.Configuration.ConfigurationElement")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetElementKeyInternal", 
    $sig.make(0x8D00, $.Object, [$asm08.TypeRef("System.Configuration.ConfigurationElement")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetElementsEnumerator", 
    $sig.make(0x8CFB, $asm06.TypeRef("System.Collections.IEnumerator"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
    $sig.make(0x8CDE, $asm06.TypeRef("System.Collections.IEnumerator"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "GetEnumeratorImpl", 
    $sig.make(0x8CD7, $asm06.TypeRef("System.Collections.IEnumerator"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetHashCode", 
    $sig.make(0x8CD9, $.Int32, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IsElementName", 
    $sig.make(0x8CFA, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IsElementRemovable", 
    $sig.make(0x8CF9, $.Boolean, [$asm08.TypeRef("System.Configuration.ConfigurationElement")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IsLockableElement", 
    $sig.make(0x8D02, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IsModified", 
    $sig.make(0x8CD3, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "IsReadOnly", 
    $sig.make(0x8CD5, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnDeserializeUnrecognizedElement", 
    $sig.make(0x8CF3, $.Boolean, [$.String, $asm0E.TypeRef("System.Xml.XmlReader")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "RealIndexOf", 
    $sig.make(0x8CFC, $.Int32, [$asm08.TypeRef("System.Configuration.ConfigurationElement")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Reset", 
    $sig.make(0x8CDB, null, [$asm08.TypeRef("System.Configuration.ConfigurationElement")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ResetModified", 
    $sig.make(0x8CD4, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SerializeElement", 
    $sig.make(0x8CF1, $.Boolean, [$asm0E.TypeRef("System.Xml.XmlWriter"), $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_AddElementName", 
    $sig.make(0x8CC2, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_ClearElementName", 
    $sig.make(0x8CC6, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_EmitClear", 
    $sig.make(0x8CC9, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_RemoveElementName", 
    $sig.make(0x8CC4, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SetReadOnly", 
    $sig.make(0x8CD6, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ICollection.CopyTo", 
    $sig.make(0x8CDD, null, [$asm06.TypeRef("System.Array"), $.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Unmerge", 
    $sig.make(0x8CDA, null, [
        $asm08.TypeRef("System.Configuration.ConfigurationElement"), $asm08.TypeRef("System.Configuration.ConfigurationElement"), 
        $asm08.TypeRef("System.Configuration.ConfigurationSaveMode")
      ], [])
  );

  $.Field({Static:false, Public:false}, "_removedItemCount", $.Int32); 
  $.Field({Static:false, Public:false}, "_inheritedCount", $.Int32); 
  $.Field({Static:false, Public:false}, "_items", $asm06.TypeRef("System.Collections.ArrayList")); 
  $.Field({Static:false, Public:false}, "_addElement", $.String); 
  $.Field({Static:false, Public:false}, "_removeElement", $.String); 
  $.Field({Static:false, Public:false}, "_clearElement", $.String); 
  $.Field({Static:false, Public:false}, "bEmitClearTag", $.Boolean); 
  $.Field({Static:false, Public:false}, "bCollectionCleared", $.Boolean); 
  $.Field({Static:false, Public:false}, "bModified", $.Boolean); 
  $.Field({Static:false, Public:false}, "bReadOnly", $.Boolean); 
  $.Field({Static:false, Public:false}, "_comparer", $asm06.TypeRef("System.Collections.IComparer")); 
  $.Field({Static:false, Public:false}, "internalAddToEnd", $.Boolean); 
  $.Field({Static:false, Public:false}, "internalElementTagName", $.String); 
  $.Constant({Static:true , Public:false}, "DefaultAddItemName", "add"); 
  $.Constant({Static:true , Public:false}, "DefaultRemoveItemName", "remove"); 
  $.Constant({Static:true , Public:false}, "DefaultClearItemsName", "clear"); 
  $.Property({Static:false, Public:false}, "Items", $asm06.TypeRef("System.Collections.ArrayList"));

  $.Property({Static:false, Public:false}, "AddElementName", $.String);

  $.Property({Static:false, Public:false}, "RemoveElementName", $.String);

  $.Property({Static:false, Public:false}, "ClearElementName", $.String);

  $.Property({Static:false, Public:true , Virtual:true }, "Count", $.Int32);

  $.Property({Static:false, Public:true }, "EmitClear", $.Boolean);

  $.Property({Static:false, Public:true , Virtual:true }, "IsSynchronized", $.Boolean);

  $.Property({Static:false, Public:true , Virtual:true }, "SyncRoot", $.Object);

  $.Property({Static:false, Public:false, Virtual:true }, "ElementName", $.String);

  $.Property({Static:false, Public:false}, "LockableElements", $.String);

  $.Property({Static:false, Public:false, Virtual:true }, "ThrowOnDuplicate", $.Boolean);

  $.Property({Static:false, Public:true , Virtual:true }, "CollectionType", $asm08.TypeRef("System.Configuration.ConfigurationElementCollectionType"));

  $.ImplementInterfaces($asm06.TypeRef("System.Collections.ICollection"), $asm06.TypeRef("System.Collections.IEnumerable"))
})
  .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerDisplayAttribute"), function () { return ["Count = {Count}"]; });

JSIL.MakeEnum(
  "System.Configuration.ConfigurationElementCollection/InheritedType", false, {
    inNeither: 0, 
    inParent: 1, 
    inSelf: 2, 
    inBothSame: 3, 
    inBothDiff: 4, 
    inBothCopyNoRemove: 5
  }, false
);

JSIL.MakeEnum(
  "System.Configuration.ConfigurationElementCollection/EntryType", false, {
    Inherited: 0, 
    Replaced: 1, 
    Removed: 2, 
    Added: 3
  }, false
);

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.ConfigurationElementCollection/Entry", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25DC7, null, [
        $asm08.TypeRef("System.Configuration.ConfigurationElementCollection/EntryType"), $.Object, 
        $asm08.TypeRef("System.Configuration.ConfigurationElement")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetKey", 
    $sig.make(0x25DC4, $.Object, [$asm08.TypeRef("System.Configuration.ConfigurationElementCollection")], [])
  );

  $.Field({Static:false, Public:false}, "_entryType", $asm08.TypeRef("System.Configuration.ConfigurationElementCollection/EntryType")); 
  $.Field({Static:false, Public:false}, "_key", $.Object); 
  $.Field({Static:false, Public:false}, "_value", $asm08.TypeRef("System.Configuration.ConfigurationElement")); 
});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.ConfigurationElementCollection/Enumerator", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25DE1, null, [$asm06.TypeRef("System.Collections.ArrayList"), $asm08.TypeRef("System.Configuration.ConfigurationElementCollection")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IDictionaryEnumerator.get_Entry", 
    $sig.make(0x25DDE, $asm06.TypeRef("System.Collections.DictionaryEntry"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IDictionaryEnumerator.get_Key", 
    $sig.make(0x25DDF, $.Object, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IDictionaryEnumerator.get_Value", 
    $sig.make(0x25DE0, $.Object, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IEnumerator.get_Current", 
    $sig.make(0x25DDD, $.Object, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IEnumerator.MoveNext", 
    $sig.make(0x25DE2, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IEnumerator.Reset", 
    $sig.make(0x25DE3, null, [], [])
  );

  $.Field({Static:false, Public:false}, "_itemsEnumerator", $asm06.TypeRef("System.Collections.IEnumerator")); 
  $.Field({Static:false, Public:false}, "_current", $asm06.TypeRef("System.Collections.DictionaryEntry")); 
  $.Field({Static:false, Public:false}, "ThisCollection", $asm08.TypeRef("System.Configuration.ConfigurationElementCollection")); 
  $.Property({Static:false, Public:false, Virtual:true }, "IEnumerator.Current", $.Object);

  $.Property({Static:false, Public:false, Virtual:true }, "IDictionaryEnumerator.Entry", $asm06.TypeRef("System.Collections.DictionaryEntry"));

  $.Property({Static:false, Public:false, Virtual:true }, "IDictionaryEnumerator.Key", $.Object);

  $.Property({Static:false, Public:false, Virtual:true }, "IDictionaryEnumerator.Value", $.Object);

  $.ImplementInterfaces($asm06.TypeRef("System.Collections.IDictionaryEnumerator"), $asm06.TypeRef("System.Collections.IEnumerator"))
});

JSIL.MakeEnum(
  "System.Configuration.ConfigurationElementCollectionType", true, {
    BasicMap: 0, 
    AddRemoveClearMap: 1, 
    BasicMapAlternate: 2, 
    AddRemoveClearMapAlternate: 3
  }, false
);

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.ConfigurationElementProperty", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x98B8, null, [$asm08.TypeRef("System.Configuration.ConfigurationValidatorBase")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Validator", 
    $sig.make(0x98B7, $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.Field({Static:false, Public:false}, "_validator", $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase")); 
  $.Property({Static:false, Public:true }, "Validator", $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"));

});

JSIL.MakeClass($asm07.TypeRef("System.Configuration.ConfigurationException"), "System.Configuration.ConfigurationErrorsException", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x9D2D, null, [
        $.String, $asm06.TypeRef("System.Exception"), 
        $.String, $.Int32
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x9D2E, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x9D31, null, [$.String], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x9D32, null, [$.String, $asm06.TypeRef("System.Exception")], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x9D33, null, [
        $.String, $.String, 
        $.Int32
      ], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x9D34, null, [$.String, $asm0E.TypeRef("System.Xml.XmlNode")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x9D35, null, [
        $.String, $asm06.TypeRef("System.Exception"), 
        $asm0E.TypeRef("System.Xml.XmlNode")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x9D36, null, [$.String, $asm0E.TypeRef("System.Xml.XmlReader")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x9D37, null, [
        $.String, $asm06.TypeRef("System.Exception"), 
        $asm0E.TypeRef("System.Xml.XmlReader")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x9D38, null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x9D3F, null, [$.String, $asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x9D40, null, [
        $.String, $asm06.TypeRef("System.Exception"), 
        $asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x9D41, null, [$asm07.TypeRef("System.Configuration.ConfigurationException")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x9D42, null, [$asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x9D43, null, [$asm06.TypeRef("System.Collections.ArrayList")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "AlwaysSafeFilename", 
    $sig.make(0x9D4F, $.String, [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "FullPathWithAssert", 
    $sig.make(0x9D4D, $.String, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_BareMessage", 
    $sig.make(0x9D28, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Errors", 
    $sig.make(0x9D2B, $asm06.TypeRef("System.Collections.ICollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ErrorsGeneric", 
    $sig.make(0x9D2C, $asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")]), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Filename", 
    $sig.make(0x9D29, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Line", 
    $sig.make(0x9D2A, $.Int32, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_Message", 
    $sig.make(0x9D27, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetBareMessage", 
    $sig.make(0x9D45, $.String, [$asm07.TypeRef("System.Configuration.ConfigurationException")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetConfigErrorInfoLineNumber", 
    $sig.make(0x9D4B, $.Int32, [$asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo")], [])
  );

  $.ExternalMethod({Static:true , Public:true }, "GetFilename", 
    $sig.make(0x9D3B, $.String, [$asm0E.TypeRef("System.Xml.XmlNode")], [])
  );

  $.ExternalMethod({Static:true , Public:true }, "GetFilename", 
    $sig.make(0x9D3D, $.String, [$asm0E.TypeRef("System.Xml.XmlReader")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetFirstException", 
    $sig.make(0x9D44, $asm07.TypeRef("System.Configuration.ConfigurationException"), [$asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")])], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetInnerException", 
    $sig.make(0x9D46, $asm06.TypeRef("System.Exception"), [$asm07.TypeRef("System.Configuration.ConfigurationException")], [])
  );

  $.ExternalMethod({Static:true , Public:true }, "GetLineNumber", 
    $sig.make(0x9D3A, $.Int32, [$asm0E.TypeRef("System.Xml.XmlNode")], [])
  );

  $.ExternalMethod({Static:true , Public:true }, "GetLineNumber", 
    $sig.make(0x9D3C, $.Int32, [$asm0E.TypeRef("System.Xml.XmlReader")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetLineNumber", 
    $sig.make(0x9D48, $.Int32, [$asm07.TypeRef("System.Configuration.ConfigurationException")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetObjectData", 
    $sig.make(0x9D39, null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetUnsafeConfigErrorInfoFilename", 
    $sig.make(0x9D4C, $.String, [$asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetUnsafeFilename", 
    $sig.make(0x9D47, $.String, [$asm07.TypeRef("System.Configuration.ConfigurationException")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetUnsafeFilename", 
    $sig.make(0x9D49, $.String, [$asm0E.TypeRef("System.Xml.XmlNode")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetUnsafeFilename", 
    $sig.make(0x9D4A, $.String, [$asm0E.TypeRef("System.Xml.XmlReader")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Init", 
    $sig.make(0x9D3E, null, [$.String, $.Int32], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "SafeFilename", 
    $sig.make(0x9D4E, $.String, [$.String], [])
  );

  $.Field({Static:false, Public:false}, "_firstFilename", $.String); 
  $.Field({Static:false, Public:false}, "_firstLine", $.Int32); 
  $.Field({Static:false, Public:false}, "_errors", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Configuration.ConfigurationException")])); 
  $.Constant({Static:true , Public:false}, "HTTP_PREFIX", "http:"); 
  $.Constant({Static:true , Public:false}, "SERIALIZATION_PARAM_FILENAME", "firstFilename"); 
  $.Constant({Static:true , Public:false}, "SERIALIZATION_PARAM_LINE", "firstLine"); 
  $.Constant({Static:true , Public:false}, "SERIALIZATION_PARAM_ERROR_COUNT", "count"); 
  $.Constant({Static:true , Public:false}, "SERIALIZATION_PARAM_ERROR_DATA", "_errors"); 
  $.Constant({Static:true , Public:false}, "SERIALIZATION_PARAM_ERROR_TYPE", "_errors_type"); 
  $.Property({Static:false, Public:true , Virtual:true }, "Message", $.String);

  $.Property({Static:false, Public:true , Virtual:true }, "BareMessage", $.String);

  $.Property({Static:false, Public:true , Virtual:true }, "Filename", $.String);

  $.Property({Static:false, Public:true , Virtual:true }, "Line", $.Int32);

  $.Property({Static:false, Public:true }, "Errors", $asm06.TypeRef("System.Collections.ICollection"));

  $.Property({Static:false, Public:false}, "ErrorsGeneric", $asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")]));

});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.ConfigurationFileMap", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x2599E, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x2599F, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Clone", 
    $sig.make(0x259A0, $.Object, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_MachineConfigFilename", 
    $sig.make(0x2599C, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_MachineConfigFilename", 
    $sig.make(0x2599D, null, [$.String], [])
  );

  $.Field({Static:false, Public:false}, "_machineConfigFilename", $.String); 
  $.Field({Static:false, Public:false}, "_requirePathDiscovery", $.Boolean); 
  $.Property({Static:false, Public:true }, "MachineConfigFilename", $.String);

  $.ImplementInterfaces($asm06.TypeRef("System.ICloneable"))
});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.ConfigurationLocation", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xB39A, null, [$asm08.TypeRef("System.Configuration.Configuration"), $.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Path", 
    $sig.make(0xB398, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "OpenConfiguration", 
    $sig.make(0xB399, $asm08.TypeRef("System.Configuration.Configuration"), [], [])
  );

  $.Field({Static:false, Public:false}, "_config", $asm08.TypeRef("System.Configuration.Configuration")); 
  $.Field({Static:false, Public:false}, "_locationSubPath", $.String); 
  $.Property({Static:false, Public:true }, "Path", $.String);

});

JSIL.MakeClass($asm06.TypeRef("System.Collections.ReadOnlyCollectionBase"), "System.Configuration.ConfigurationLocationCollection", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xAAF4, null, [$asm06.TypeRef("System.Collections.ICollection")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Item", 
    $sig.make(0xAAF3, $asm08.TypeRef("System.Configuration.ConfigurationLocation"), [$.Int32], [])
  );

  $.Property({Static:false, Public:true }, "Item", $asm08.TypeRef("System.Configuration.ConfigurationLocation"));

})
  .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.ConfigurationLockCollection", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x98F3, null, [$asm08.TypeRef("System.Configuration.ConfigurationElement")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x98F4, null, [$asm08.TypeRef("System.Configuration.ConfigurationElement"), $asm08.TypeRef("System.Configuration.ConfigurationLockCollectionType")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x98F5, null, [
        $asm08.TypeRef("System.Configuration.ConfigurationElement"), $asm08.TypeRef("System.Configuration.ConfigurationLockCollectionType"), 
        $.String
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x98F6, null, [
        $asm08.TypeRef("System.Configuration.ConfigurationElement"), $asm08.TypeRef("System.Configuration.ConfigurationLockCollectionType"), 
        $.String, $.Type
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Add", 
    $sig.make(0x98E6, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Add", 
    $sig.make(0x98F8, null, [$.String, $asm08.TypeRef("System.Configuration.ConfigurationValueFlags")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Clear", 
    $sig.make(0x98EB, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "ClearInternal", 
    $sig.make(0x98EA, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ClearSeedList", 
    $sig.make(0x98F7, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Contains", 
    $sig.make(0x98EC, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CopyTo", 
    $sig.make(0x98ED, null, [$jsilcore.TypeRef("System.Array", [$.String]), $.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "DefinedInParent", 
    $sig.make(0x98F9, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_AttributeList", 
    $sig.make(0x98E2, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Count", 
    $sig.make(0x98D7, $.Int32, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ExceptionList", 
    $sig.make(0x98DF, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_HasParentElements", 
    $sig.make(0x98E4, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsModified", 
    $sig.make(0x98DD, $.Boolean, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_IsSynchronized", 
    $sig.make(0x98D9, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_LockType", 
    $sig.make(0x98D5, $asm08.TypeRef("System.Configuration.ConfigurationLockCollectionType"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_SyncRoot", 
    $sig.make(0x98DB, $.Object, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
    $sig.make(0x98E9, $asm06.TypeRef("System.Collections.IEnumerator"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "IsReadOnly", 
    $sig.make(0x98F0, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IsValueModified", 
    $sig.make(0x98FA, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Remove", 
    $sig.make(0x98E8, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "RemoveInheritedLocks", 
    $sig.make(0x98FB, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ResetModified", 
    $sig.make(0x98FC, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "SetFromList", 
    $sig.make(0x98F1, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ICollection.CopyTo", 
    $sig.make(0x98EE, null, [$asm06.TypeRef("System.Array"), $.Int32], [])
  );

  $.Field({Static:false, Public:false}, "internalDictionary", $asm07.TypeRef("System.Collections.Specialized.HybridDictionary")); 
  $.Field({Static:false, Public:false}, "internalArraylist", $asm06.TypeRef("System.Collections.ArrayList")); 
  $.Field({Static:false, Public:false}, "_bModified", $.Boolean); 
  $.Field({Static:false, Public:false}, "_bExceptionList", $.Boolean); 
  $.Field({Static:false, Public:false}, "_ignoreName", $.String); 
  $.Field({Static:false, Public:false}, "_thisElement", $asm08.TypeRef("System.Configuration.ConfigurationElement")); 
  $.Field({Static:false, Public:false}, "_lockType", $asm08.TypeRef("System.Configuration.ConfigurationLockCollectionType")); 
  $.Field({Static:false, Public:false}, "SeedList", $.String); 
  $.Constant({Static:true , Public:false}, "LockAll", "*"); 
  $.Property({Static:false, Public:false}, "LockType", $asm08.TypeRef("System.Configuration.ConfigurationLockCollectionType"));

  $.Property({Static:false, Public:true , Virtual:true }, "Count", $.Int32);

  $.Property({Static:false, Public:true , Virtual:true }, "IsSynchronized", $.Boolean);

  $.Property({Static:false, Public:true , Virtual:true }, "SyncRoot", $.Object);

  $.Property({Static:false, Public:true }, "IsModified", $.Boolean);

  $.Property({Static:false, Public:false}, "ExceptionList", $.Boolean);

  $.Property({Static:false, Public:true }, "AttributeList", $.String);

  $.Property({Static:false, Public:true }, "HasParentElements", $.Boolean);

  $.ImplementInterfaces($asm06.TypeRef("System.Collections.ICollection"), $asm06.TypeRef("System.Collections.IEnumerable"))
});

JSIL.MakeEnum(
  "System.Configuration.ConfigurationLockCollectionType", false, {
    LockedAttributes: 1, 
    LockedExceptionList: 2, 
    LockedElements: 3, 
    LockedElementsExceptionList: 4
  }, false
);

JSIL.MakeStaticClass("System.Configuration.ConfigurationManager", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:true , Public:false}, "CompleteConfigInit", 
    $sig.make(0x25A18, null, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "EnsureConfigurationSystem", 
    $sig.make(0x25A15, null, [], [])
  );

  $.ExternalMethod({Static:true , Public:true }, "get_AppSettings", 
    $sig.make(0x25A01, $asm07.TypeRef("System.Collections.Specialized.NameValueCollection"), [], [])
  );

  $.ExternalMethod({Static:true , Public:true }, "get_ConnectionStrings", 
    $sig.make(0x25A02, $asm08.TypeRef("System.Configuration.ConnectionStringSettingsCollection"), [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_SetConfigurationSystemInProgress", 
    $sig.make(0x259FF, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_SupportsUserConfig", 
    $sig.make(0x25A00, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:true , Public:true }, "GetSection", 
    $sig.make(0x25A03, $.Object, [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:true }, "OpenExeConfiguration", 
    $sig.make(0x25A0C, $asm08.TypeRef("System.Configuration.Configuration"), [$asm08.TypeRef("System.Configuration.ConfigurationUserLevel")], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:true , Public:true }, "OpenExeConfiguration", 
    $sig.make(0x25A0D, $asm08.TypeRef("System.Configuration.Configuration"), [$.String], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:true , Public:false}, "OpenExeConfigurationImpl", 
    $sig.make(0x25A10, $asm08.TypeRef("System.Configuration.Configuration"), [
        $asm08.TypeRef("System.Configuration.ConfigurationFileMap"), $.Boolean, 
        $asm08.TypeRef("System.Configuration.ConfigurationUserLevel"), $.String
      ], [])
  );

  $.ExternalMethod({Static:true , Public:true }, "OpenMachineConfiguration", 
    $sig.make(0x25A08, $asm08.TypeRef("System.Configuration.Configuration"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:true , Public:true }, "OpenMappedExeConfiguration", 
    $sig.make(0x25A0E, $asm08.TypeRef("System.Configuration.Configuration"), [$asm08.TypeRef("System.Configuration.ExeConfigurationFileMap"), $asm08.TypeRef("System.Configuration.ConfigurationUserLevel")], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:true , Public:true }, "OpenMappedMachineConfiguration", 
    $sig.make(0x25A0A, $asm08.TypeRef("System.Configuration.Configuration"), [$asm08.TypeRef("System.Configuration.ConfigurationFileMap")], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:true , Public:false}, "PrepareConfigSystem", 
    $sig.make(0x25A1A, null, [], [])
  );

  $.ExternalMethod({Static:true , Public:true }, "RefreshSection", 
    $sig.make(0x25A06, null, [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "SetConfigurationSystem", 
    $sig.make(0x25A13, null, [$asm08.TypeRef("System.Configuration.Internal.IInternalConfigSystem"), $.Boolean], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "SetInitError", 
    $sig.make(0x25A16, null, [$asm06.TypeRef("System.Exception")], [])
  );

  $.Field({Static:true , Public:false}, "s_configSystem", $asm08.TypeRef("System.Configuration.Internal.IInternalConfigSystem")); 
  $.Field({Static:true , Public:false}, "s_initState", $asm08.TypeRef("System.Configuration.ConfigurationManager/InitState"), function ($pi) {
      return $asm08.System.Configuration.ConfigurationManager_InitState.NotStarted;
    }); 
  $.Field({Static:true , Public:false}, "s_initLock", $.Object); 
  $.Field({Static:true , Public:false}, "s_initError", $asm06.TypeRef("System.Exception")); 
  $.Property({Static:true , Public:false}, "SetConfigurationSystemInProgress", $.Boolean);

  $.Property({Static:true , Public:false}, "SupportsUserConfig", $.Boolean);

  $.Property({Static:true , Public:true }, "AppSettings", $asm07.TypeRef("System.Collections.Specialized.NameValueCollection"));

  $.Property({Static:true , Public:true }, "ConnectionStrings", $asm08.TypeRef("System.Configuration.ConnectionStringSettingsCollection"));

});

JSIL.MakeEnum(
  "System.Configuration.ConfigurationManager/InitState", false, {
    NotStarted: 0, 
    Started: 1, 
    Usable: 2, 
    Completed: 3
  }, false
);

JSIL.MakeClass($asm06.TypeRef("System.Security.Permissions.CodeAccessSecurityAttribute"), "System.Configuration.ConfigurationPermissionAttribute", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25A53, null, [$asm06.TypeRef("System.Security.Permissions.SecurityAction")], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "CreatePermission", 
    $sig.make(0x25A54, $asm06.TypeRef("System.Security.IPermission"), [], [])
  );

})
  .Attribute($asm06.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm06.System.AttributeTargets.$Flags(
        "All", "Assembly", "Class", "Constructor", 
        "Delegate", "Enum", "Event", "Field", 
        "GenericParameter", "Interface", "Method", "Module", 
        "Parameter", "Property", "ReturnValue", "Struct"
    )]; });

JSIL.MakeClass($asm06.TypeRef("System.Security.CodeAccessPermission"), "System.Configuration.ConfigurationPermission", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0xA75D, null, [$asm06.TypeRef("System.Security.Permissions.PermissionState")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Copy", 
    $sig.make(0xA75F, $asm06.TypeRef("System.Security.IPermission"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "FromXml", 
    $sig.make(0xA763, null, [$asm06.TypeRef("System.Security.SecurityElement")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Intersect", 
    $sig.make(0xA761, $asm06.TypeRef("System.Security.IPermission"), [$asm06.TypeRef("System.Security.IPermission")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "IsSubsetOf", 
    $sig.make(0xA762, $.Boolean, [$asm06.TypeRef("System.Security.IPermission")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "IsUnrestricted", 
    $sig.make(0xA75E, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "ToXml", 
    $sig.make(0xA765, $asm06.TypeRef("System.Security.SecurityElement"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Union", 
    $sig.make(0xA760, $asm06.TypeRef("System.Security.IPermission"), [$asm06.TypeRef("System.Security.IPermission")], [])
  );

  $.Field({Static:false, Public:false}, "_permissionState", $asm06.TypeRef("System.Security.Permissions.PermissionState")); 
  $.ImplementInterfaces($asm06.TypeRef("System.Security.Permissions.IUnrestrictedPermission"))
});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.ConfigurationProperty", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x99C4, null, [$.String, $asm06.TypeRef("System.Type")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x99C5, null, [
        $.String, $asm06.TypeRef("System.Type"), 
        $.Object
      ], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x99C6, null, [
        $.String, $asm06.TypeRef("System.Type"), 
        $.Object, $asm08.TypeRef("System.Configuration.ConfigurationPropertyOptions")
      ], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x99C7, null, [
        $.String, $asm06.TypeRef("System.Type"), 
        $.Object, $asm07.TypeRef("System.ComponentModel.TypeConverter"), 
        $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"), $asm08.TypeRef("System.Configuration.ConfigurationPropertyOptions")
      ], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x99C8, null, [
        $.String, $asm06.TypeRef("System.Type"), 
        $.Object, $asm07.TypeRef("System.ComponentModel.TypeConverter"), 
        $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"), $asm08.TypeRef("System.Configuration.ConfigurationPropertyOptions"), 
        $.String
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x99C9, null, [$asm06.TypeRef("System.Reflection.PropertyInfo")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ConstructorInit", 
    $sig.make(0x99CA, null, [
        $.String, $asm06.TypeRef("System.Type"), 
        $asm08.TypeRef("System.Configuration.ConfigurationPropertyOptions"), $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"), 
        $asm07.TypeRef("System.ComponentModel.TypeConverter")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ConvertFromString", 
    $sig.make(0x99CE, $.Object, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ConvertToString", 
    $sig.make(0x99CF, $.String, [$.Object], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CreateConverter", 
    $sig.make(0x99D1, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_AddElementName", 
    $sig.make(0x99C1, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ClearElementName", 
    $sig.make(0x99C3, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Converter", 
    $sig.make(0x99BF, $asm07.TypeRef("System.ComponentModel.TypeConverter"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_DefaultValue", 
    $sig.make(0x99B8, $.Object, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_Description", 
    $sig.make(0x99B4, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_IsAssemblyStringTransformationRequired", 
    $sig.make(0x99BD, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsConfigurationElementType", 
    $sig.make(0x99B6, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsDefaultCollection", 
    $sig.make(0x99BB, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsKey", 
    $sig.make(0x99BA, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsRequired", 
    $sig.make(0x99B9, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsTypeStringTransformationRequired", 
    $sig.make(0x99BC, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsVersionCheckRequired", 
    $sig.make(0x99BE, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Name", 
    $sig.make(0x99B3, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "get_ProvidedName", 
    $sig.make(0x99B5, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_RemoveElementName", 
    $sig.make(0x99C2, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Type", 
    $sig.make(0x99B7, $asm06.TypeRef("System.Type"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_Validator", 
    $sig.make(0x99C0, $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "InitDefaultValueFromTypeInfo", 
    $sig.make(0x99CD, null, [$asm08.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), $asm07.TypeRef("System.ComponentModel.DefaultValueAttribute")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SetDefaultValue", 
    $sig.make(0x99CC, null, [$.Object], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Validate", 
    $sig.make(0x99D0, null, [$.Object], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ValidatePropertyName", 
    $sig.make(0x99CB, null, [$.String], [])
  );

  $.Field({Static:true , Public:false, ReadOnly:true }, "NonEmptyStringValidator", $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase")); 
  $.Field({Static:true , Public:false, ReadOnly:true }, "DefaultValidatorInstance", $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase")); 
  $.Field({Static:true , Public:false, ReadOnly:true }, "DefaultCollectionPropertyName", $.String, ""); 
  $.Field({Static:false, Public:false}, "_name", $.String); 
  $.Field({Static:false, Public:false}, "_providedName", $.String); 
  $.Field({Static:false, Public:false}, "_description", $.String); 
  $.Field({Static:false, Public:false}, "_type", $asm06.TypeRef("System.Type")); 
  $.Field({Static:false, Public:false}, "_defaultValue", $.Object); 
  $.Field({Static:false, Public:false}, "_converter", $asm07.TypeRef("System.ComponentModel.TypeConverter")); 
  $.Field({Static:false, Public:false}, "_options", $asm08.TypeRef("System.Configuration.ConfigurationPropertyOptions")); 
  $.Field({Static:false, Public:false}, "_validator", $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase")); 
  $.Field({Static:false, Public:false}, "_addElementName", $.String); 
  $.Field({Static:false, Public:false}, "_removeElementName", $.String); 
  $.Field({Static:false, Public:false}, "_clearElementName", $.String); 
  $.Field({Static:false, Public:false}, "_isTypeInited", $.Boolean); 
  $.Field({Static:false, Public:false}, "_isConfigurationElementType", $.Boolean); 
  $.Property({Static:false, Public:true }, "Name", $.String);

  $.Property({Static:false, Public:true }, "Description", $.String);

  $.Property({Static:false, Public:false}, "ProvidedName", $.String);

  $.Property({Static:false, Public:false}, "IsConfigurationElementType", $.Boolean);

  $.Property({Static:false, Public:true }, "Type", $asm06.TypeRef("System.Type"));

  $.Property({Static:false, Public:true }, "DefaultValue", $.Object);

  $.Property({Static:false, Public:true }, "IsRequired", $.Boolean);

  $.Property({Static:false, Public:true }, "IsKey", $.Boolean);

  $.Property({Static:false, Public:true }, "IsDefaultCollection", $.Boolean);

  $.Property({Static:false, Public:true }, "IsTypeStringTransformationRequired", $.Boolean);

  $.Property({Static:false, Public:true }, "IsAssemblyStringTransformationRequired", $.Boolean);

  $.Property({Static:false, Public:true }, "IsVersionCheckRequired", $.Boolean);

  $.Property({Static:false, Public:true }, "Converter", $asm07.TypeRef("System.ComponentModel.TypeConverter"));

  $.Property({Static:false, Public:true }, "Validator", $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"));

  $.Property({Static:false, Public:false}, "AddElementName", $.String);

  $.Property({Static:false, Public:false}, "RemoveElementName", $.String);

  $.Property({Static:false, Public:false}, "ClearElementName", $.String);

});

JSIL.MakeClass($asm06.TypeRef("System.Attribute"), "System.Configuration.ConfigurationPropertyAttribute", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0xA87A, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_DefaultValue", 
    $sig.make(0xA870, $.Object, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_IsDefaultCollection", 
    $sig.make(0xA874, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsKey", 
    $sig.make(0xA878, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsRequired", 
    $sig.make(0xA876, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Name", 
    $sig.make(0xA86F, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_Options", 
    $sig.make(0xA872, $asm08.TypeRef("System.Configuration.ConfigurationPropertyOptions"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "set_DefaultValue", 
    $sig.make(0xA871, null, [$.Object], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "set_IsDefaultCollection", 
    $sig.make(0xA875, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_IsKey", 
    $sig.make(0xA879, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_IsRequired", 
    $sig.make(0xA877, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_Options", 
    $sig.make(0xA873, null, [$asm08.TypeRef("System.Configuration.ConfigurationPropertyOptions")], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.Field({Static:true , Public:false, ReadOnly:true }, "DefaultCollectionPropertyName", $.String, ""); 
  $.Field({Static:false, Public:false}, "_Name", $.String); 
  $.Field({Static:false, Public:false}, "_DefaultValue", $.Object); 
  $.Field({Static:false, Public:false}, "_Flags", $asm08.TypeRef("System.Configuration.ConfigurationPropertyOptions")); 
  $.Property({Static:false, Public:true }, "Name", $.String);

  $.Property({Static:false, Public:true }, "DefaultValue", $.Object);

  $.Property({Static:false, Public:true }, "Options", $asm08.TypeRef("System.Configuration.ConfigurationPropertyOptions"));

  $.Property({Static:false, Public:true }, "IsDefaultCollection", $.Boolean);

  $.Property({Static:false, Public:true }, "IsRequired", $.Boolean);

  $.Property({Static:false, Public:true }, "IsKey", $.Boolean);

})
  .Attribute($asm06.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm06.System.AttributeTargets.Property]; });

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.ConfigurationPropertyCollection", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x9B42, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Add", 
    $sig.make(0x9B3F, null, [$asm08.TypeRef("System.Configuration.ConfigurationProperty")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Clear", 
    $sig.make(0x9B41, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Contains", 
    $sig.make(0x9B3E, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CopyTo", 
    $sig.make(0x9B3C, null, [$jsilcore.TypeRef("System.Array", [$asm08.TypeRef("System.Configuration.ConfigurationProperty")]), $.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Count", 
    $sig.make(0x9B36, $.Int32, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_DefaultCollectionProperty", 
    $sig.make(0x9B39, $asm08.TypeRef("System.Configuration.ConfigurationProperty"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsSynchronized", 
    $sig.make(0x9B37, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Item", 
    $sig.make(0x9B3A, $asm08.TypeRef("System.Configuration.ConfigurationProperty"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_SyncRoot", 
    $sig.make(0x9B38, $.Object, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
    $sig.make(0x9B3D, $asm06.TypeRef("System.Collections.IEnumerator"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Remove", 
    $sig.make(0x9B40, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ICollection.CopyTo", 
    $sig.make(0x9B3B, null, [$asm06.TypeRef("System.Array"), $.Int32], [])
  );

  $.Field({Static:false, Public:false}, "_items", $asm06.TypeRef("System.Collections.ArrayList")); 
  $.Property({Static:false, Public:true , Virtual:true }, "Count", $.Int32);

  $.Property({Static:false, Public:true , Virtual:true }, "IsSynchronized", $.Boolean);

  $.Property({Static:false, Public:true , Virtual:true }, "SyncRoot", $.Object);

  $.Property({Static:false, Public:false}, "DefaultCollectionProperty", $asm08.TypeRef("System.Configuration.ConfigurationProperty"));

  $.Property({Static:false, Public:true }, "Item", $asm08.TypeRef("System.Configuration.ConfigurationProperty"));

  $.ImplementInterfaces($asm06.TypeRef("System.Collections.ICollection"), $asm06.TypeRef("System.Collections.IEnumerable"))
})
  .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

JSIL.MakeEnum(
  "System.Configuration.ConfigurationPropertyOptions", true, {
    None: 0, 
    IsDefaultCollection: 1, 
    IsRequired: 2, 
    IsKey: 4, 
    IsTypeStringTransformationRequired: 8, 
    IsAssemblyStringTransformationRequired: 16, 
    IsVersionCheckRequired: 32
  }, true
);

JSIL.MakeEnum(
  "System.Configuration.ConfigurationSaveMode", true, {
    Modified: 0, 
    Minimal: 1, 
    Full: 2
  }, false
);

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.ConfigurationSchemaErrors", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xA54B, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AddError", 
    $sig.make(0xA54C, null, [$asm07.TypeRef("System.Configuration.ConfigurationException"), $asm08.TypeRef("System.Configuration.ExceptionAction")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AddSavedLocalErrors", 
    $sig.make(0xA551, null, [$asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_GlobalErrorCount", 
    $sig.make(0xA54A, $.Int32, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_HasAllErrors", 
    $sig.make(0xA549, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_HasGlobalErrors", 
    $sig.make(0xA548, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_HasLocalErrors", 
    $sig.make(0xA547, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "HasErrors", 
    $sig.make(0xA54E, $.Boolean, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ResetLocalErrors", 
    $sig.make(0xA552, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "RetrieveAndResetLocalErrors", 
    $sig.make(0xA550, $asm06.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")]), [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SetSingleGlobalError", 
    $sig.make(0xA54D, null, [$asm07.TypeRef("System.Configuration.ConfigurationException")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ThrowIfErrors", 
    $sig.make(0xA54F, null, [$.Boolean], [])
  );

  $.Field({Static:false, Public:false}, "_errorsLocal", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")])); 
  $.Field({Static:false, Public:false}, "_errorsGlobal", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")])); 
  $.Field({Static:false, Public:false}, "_errorsAll", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")])); 
  $.Property({Static:false, Public:false}, "HasLocalErrors", $.Boolean);

  $.Property({Static:false, Public:false}, "HasGlobalErrors", $.Boolean);

  $.Property({Static:false, Public:false}, "HasAllErrors", $.Boolean);

  $.Property({Static:false, Public:false}, "GlobalErrorCount", $.Int32);

});

JSIL.MakeClass($asm07.TypeRef("System.Collections.Specialized.NameObjectCollectionBase"), "System.Configuration.ConfigurationSectionCollection", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xAB09, null, [$asm08.TypeRef("System.Configuration.MgmtConfigurationRecord"), $asm08.TypeRef("System.Configuration.ConfigurationSectionGroup")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Add", 
    $sig.make(0xAB00, null, [$.String, $asm08.TypeRef("System.Configuration.ConfigurationSection")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Clear", 
    $sig.make(0xAB01, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CopyTo", 
    $sig.make(0xAB02, null, [$jsilcore.TypeRef("System.Array", [$asm08.TypeRef("System.Configuration.ConfigurationSection")]), $.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "DetachFromConfigurationRecord", 
    $sig.make(0xAB0A, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Get", 
    $sig.make(0xAB03, $asm08.TypeRef("System.Configuration.ConfigurationSection"), [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Get", 
    $sig.make(0xAB04, $asm08.TypeRef("System.Configuration.ConfigurationSection"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Count", 
    $sig.make(0xAAFD, $.Int32, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Item", 
    $sig.make(0xAAFB, $asm08.TypeRef("System.Configuration.ConfigurationSection"), [$.String], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_Item", 
    $sig.make(0xAAFC, $asm08.TypeRef("System.Configuration.ConfigurationSection"), [$.Int32], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_Keys", 
    $sig.make(0xAAFE, $asm07.TypeRef("System.Collections.Specialized.NameObjectCollectionBase/KeysCollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
    $sig.make(0xAB05, $asm06.TypeRef("System.Collections.IEnumerator"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetKey", 
    $sig.make(0xAB06, $.String, [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetObjectData", 
    $sig.make(0xAAFF, null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Remove", 
    $sig.make(0xAB07, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "RemoveAt", 
    $sig.make(0xAB08, null, [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "VerifyIsAttachedToConfigRecord", 
    $sig.make(0xAB0B, null, [], [])
  );

  $.Field({Static:false, Public:false}, "_configRecord", $asm08.TypeRef("System.Configuration.MgmtConfigurationRecord")); 
  $.Field({Static:false, Public:false}, "_configSectionGroup", $asm08.TypeRef("System.Configuration.ConfigurationSectionGroup")); 
  $.Property({Static:false, Public:true }, "Item", $asm08.TypeRef("System.Configuration.ConfigurationSection"));

  $.Property({Static:false, Public:true }, "Item", $asm08.TypeRef("System.Configuration.ConfigurationSection"));

  $.Property({Static:false, Public:true , Virtual:true }, "Count", $.Int32);

  $.Property({Static:false, Public:true , Virtual:true }, "Keys", $asm07.TypeRef("System.Collections.Specialized.NameObjectCollectionBase/KeysCollection"));

})
  .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.ConfigurationSectionCollection/<GetEnumerator>d__0", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25DBA, null, [$.Int32], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

  $.ExternalMethod({Static:false, Public:false}, "IEnumerator.MoveNext", 
    $sig.make(0x25DB5, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IEnumerator`1.get_Current", 
    $sig.make(0x25DB3, $.Object, [], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

  $.ExternalMethod({Static:false, Public:false}, "IEnumerator.get_Current", 
    $sig.make(0x25DB4, $.Object, [], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

  $.ExternalMethod({Static:false, Public:false}, "IEnumerator.Reset", 
    $sig.make(0x25DB6, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

  $.ExternalMethod({Static:false, Public:false}, "IDisposable.Dispose", 
    $sig.make(0x25DB8, null, [], [])
  );

  $.Field({Static:false, Public:false}, "$current", $.Object); 
  $.Field({Static:false, Public:false}, "$state", $.Int32); 
  $.Field({Static:false, Public:true }, "$this", $asm08.TypeRef("System.Configuration.ConfigurationSectionCollection")); 
  $.Field({Static:false, Public:true }, "c", $.Int32); 
  $.Field({Static:false, Public:true }, "i", $.Int32); 
  $.Property({Static:false, Public:false, Virtual:true }, "IEnumerator`1.Current", $.Object);

  $.Property({Static:false, Public:false, Virtual:true }, "IEnumerator.Current", $.Object);

  $.ImplementInterfaces(
      $asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$.Object]), $asm06.TypeRef("System.Collections.IEnumerator"), 
      $asm06.TypeRef("System.IDisposable")
  )
})
  .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.ConfigurationSectionGroup", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0xAAE4, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AttachToConfigurationRecord", 
    $sig.make(0xAAE8, null, [$asm08.TypeRef("System.Configuration.MgmtConfigurationRecord"), $asm08.TypeRef("System.Configuration.FactoryRecord")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "DetachFromConfigurationRecord", 
    $sig.make(0xAAEA, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "FindParentFactoryRecord", 
    $sig.make(0xAAEB, $asm08.TypeRef("System.Configuration.FactoryRecord"), [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "ForceDeclaration", 
    $sig.make(0xAAE5, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "ForceDeclaration", 
    $sig.make(0xAAE6, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Attached", 
    $sig.make(0xAADA, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsDeclarationRequired", 
    $sig.make(0xAADC, $.Boolean, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_IsDeclared", 
    $sig.make(0xAADB, $.Boolean, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "get_IsRoot", 
    $sig.make(0xAAE3, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Name", 
    $sig.make(0xAADE, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_SectionGroupName", 
    $sig.make(0xAADD, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_SectionGroups", 
    $sig.make(0xAAE2, $asm08.TypeRef("System.Configuration.ConfigurationSectionGroupCollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Sections", 
    $sig.make(0xAAE1, $asm08.TypeRef("System.Configuration.ConfigurationSectionCollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Type", 
    $sig.make(0xAADF, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "RootAttachToConfigurationRecord", 
    $sig.make(0xAAE9, null, [$asm08.TypeRef("System.Configuration.MgmtConfigurationRecord")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_Type", 
    $sig.make(0xAAE0, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ShouldSerializeSectionGroupInTargetVersion", 
    $sig.make(0xAAE7, $.Boolean, [$asm07.TypeRef("System.Runtime.Versioning.FrameworkName")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "VerifyIsAttachedToConfigRecord", 
    $sig.make(0xAAEC, null, [], [])
  );

  $.Field({Static:false, Public:false}, "_configKey", $.String); 
  $.Field({Static:false, Public:false}, "_group", $.String); 
  $.Field({Static:false, Public:false}, "_name", $.String); 
  $.Field({Static:false, Public:false}, "_configSections", $asm08.TypeRef("System.Configuration.ConfigurationSectionCollection")); 
  $.Field({Static:false, Public:false}, "_configSectionGroups", $asm08.TypeRef("System.Configuration.ConfigurationSectionGroupCollection")); 
  $.Field({Static:false, Public:false}, "_configRecord", $asm08.TypeRef("System.Configuration.MgmtConfigurationRecord")); 
  $.Field({Static:false, Public:false}, "_typeName", $.String); 
  $.Field({Static:false, Public:false}, "_declared", $.Boolean); 
  $.Field({Static:false, Public:false}, "_declarationRequired", $.Boolean); 
  $.Field({Static:false, Public:false}, "_isRoot", $.Boolean); 
  $.Property({Static:false, Public:false}, "Attached", $.Boolean);

  $.Property({Static:false, Public:true }, "IsDeclared", $.Boolean);

  $.Property({Static:false, Public:true }, "IsDeclarationRequired", $.Boolean);

  $.Property({Static:false, Public:true }, "SectionGroupName", $.String);

  $.Property({Static:false, Public:true }, "Name", $.String);

  $.Property({Static:false, Public:true }, "Type", $.String);

  $.Property({Static:false, Public:true }, "Sections", $asm08.TypeRef("System.Configuration.ConfigurationSectionCollection"));

  $.Property({Static:false, Public:true }, "SectionGroups", $asm08.TypeRef("System.Configuration.ConfigurationSectionGroupCollection"));

  $.Property({Static:false, Public:false}, "IsRoot", $.Boolean);

});

JSIL.MakeClass($asm07.TypeRef("System.Collections.Specialized.NameObjectCollectionBase"), "System.Configuration.ConfigurationSectionGroupCollection", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xAB3D, null, [$asm08.TypeRef("System.Configuration.MgmtConfigurationRecord"), $asm08.TypeRef("System.Configuration.ConfigurationSectionGroup")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Add", 
    $sig.make(0xAB34, null, [$.String, $asm08.TypeRef("System.Configuration.ConfigurationSectionGroup")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Clear", 
    $sig.make(0xAB35, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CopyTo", 
    $sig.make(0xAB36, null, [$jsilcore.TypeRef("System.Array", [$asm08.TypeRef("System.Configuration.ConfigurationSectionGroup")]), $.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "DetachFromConfigurationRecord", 
    $sig.make(0xAB3E, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Get", 
    $sig.make(0xAB37, $asm08.TypeRef("System.Configuration.ConfigurationSectionGroup"), [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Get", 
    $sig.make(0xAB38, $asm08.TypeRef("System.Configuration.ConfigurationSectionGroup"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Count", 
    $sig.make(0xAB31, $.Int32, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Item", 
    $sig.make(0xAB2F, $asm08.TypeRef("System.Configuration.ConfigurationSectionGroup"), [$.String], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_Item", 
    $sig.make(0xAB30, $asm08.TypeRef("System.Configuration.ConfigurationSectionGroup"), [$.Int32], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_Keys", 
    $sig.make(0xAB32, $asm07.TypeRef("System.Collections.Specialized.NameObjectCollectionBase/KeysCollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
    $sig.make(0xAB39, $asm06.TypeRef("System.Collections.IEnumerator"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetKey", 
    $sig.make(0xAB3A, $.String, [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetObjectData", 
    $sig.make(0xAB33, null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Remove", 
    $sig.make(0xAB3B, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "RemoveAt", 
    $sig.make(0xAB3C, null, [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "VerifyIsAttachedToConfigRecord", 
    $sig.make(0xAB3F, null, [], [])
  );

  $.Field({Static:false, Public:false}, "_configRecord", $asm08.TypeRef("System.Configuration.MgmtConfigurationRecord")); 
  $.Field({Static:false, Public:false}, "_configSectionGroup", $asm08.TypeRef("System.Configuration.ConfigurationSectionGroup")); 
  $.Property({Static:false, Public:true }, "Item", $asm08.TypeRef("System.Configuration.ConfigurationSectionGroup"));

  $.Property({Static:false, Public:true }, "Item", $asm08.TypeRef("System.Configuration.ConfigurationSectionGroup"));

  $.Property({Static:false, Public:true , Virtual:true }, "Count", $.Int32);

  $.Property({Static:false, Public:true , Virtual:true }, "Keys", $asm07.TypeRef("System.Collections.Specialized.NameObjectCollectionBase/KeysCollection"));

})
  .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.ConfigurationSectionGroupCollection/<GetEnumerator>d__0", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25DA6, null, [$.Int32], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

  $.ExternalMethod({Static:false, Public:false}, "IEnumerator.MoveNext", 
    $sig.make(0x25DA3, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IEnumerator`1.get_Current", 
    $sig.make(0x25DA1, $.Object, [], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

  $.ExternalMethod({Static:false, Public:false}, "IEnumerator.get_Current", 
    $sig.make(0x25DA2, $.Object, [], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

  $.ExternalMethod({Static:false, Public:false}, "IEnumerator.Reset", 
    $sig.make(0x25DA4, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

  $.ExternalMethod({Static:false, Public:false}, "IDisposable.Dispose", 
    $sig.make(0x25DA5, null, [], [])
  );

  $.Field({Static:false, Public:false}, "$current", $.Object); 
  $.Field({Static:false, Public:false}, "$state", $.Int32); 
  $.Field({Static:false, Public:true }, "$this", $asm08.TypeRef("System.Configuration.ConfigurationSectionGroupCollection")); 
  $.Field({Static:false, Public:true }, "c", $.Int32); 
  $.Field({Static:false, Public:true }, "i", $.Int32); 
  $.Property({Static:false, Public:false, Virtual:true }, "IEnumerator`1.Current", $.Object);

  $.Property({Static:false, Public:false, Virtual:true }, "IEnumerator.Current", $.Object);

  $.ImplementInterfaces(
      $asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$.Object]), $asm06.TypeRef("System.Collections.IEnumerator"), 
      $asm06.TypeRef("System.IDisposable")
  )
})
  .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

JSIL.MakeEnum(
  "System.Configuration.ConfigurationUserLevel", true, {
    None: 0, 
    PerUserRoaming: 10, 
    PerUserRoamingAndLocal: 20
  }, false
);

JSIL.MakeEnum(
  "System.Configuration.ConfigurationValueFlags", false, {
    Default: 0, 
    Inherited: 1, 
    Modified: 2, 
    Locked: 4, 
    XMLParentInherited: 8
  }, true
);

JSIL.MakeClass($asm07.TypeRef("System.Collections.Specialized.NameObjectCollectionBase"), "System.Configuration.ConfigurationValues", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x9C24, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AssociateContext", 
    $sig.make(0x9C25, null, [$asm08.TypeRef("System.Configuration.BaseConfigurationRecord")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ChangeSourceInfo", 
    $sig.make(0x9C2B, null, [$.String, $asm08.TypeRef("System.Configuration.PropertySourceInfo")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Clear", 
    $sig.make(0x9C2E, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Contains", 
    $sig.make(0x9C26, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CreateConfigValue", 
    $sig.make(0x9C2C, $asm08.TypeRef("System.Configuration.ConfigurationValue"), [
        $.Object, $asm08.TypeRef("System.Configuration.ConfigurationValueFlags"), 
        $asm08.TypeRef("System.Configuration.PropertySourceInfo")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ConfigurationElements", 
    $sig.make(0x9C21, $asm06.TypeRef("System.Collections.IEnumerable"), [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_EmptyCollectionInstance", 
    $sig.make(0x9C23, $asm06.TypeRef("System.Collections.IEnumerable"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_InvalidValues", 
    $sig.make(0x9C22, $asm06.TypeRef("System.Collections.IEnumerable"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Item", 
    $sig.make(0x9C1D, $.Object, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Item", 
    $sig.make(0x9C1F, $.Object, [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_SyncRoot", 
    $sig.make(0x9C20, $.Object, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetConfigValue", 
    $sig.make(0x9C28, $asm08.TypeRef("System.Configuration.ConfigurationValue"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetConfigValue", 
    $sig.make(0x9C29, $asm08.TypeRef("System.Configuration.ConfigurationValue"), [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetKey", 
    $sig.make(0x9C27, $.String, [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetSourceInfo", 
    $sig.make(0x9C2A, $asm08.TypeRef("System.Configuration.PropertySourceInfo"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IsInherited", 
    $sig.make(0x9C31, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IsModified", 
    $sig.make(0x9C30, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "RetrieveFlags", 
    $sig.make(0x9C2F, $asm08.TypeRef("System.Configuration.ConfigurationValueFlags"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_Item", 
    $sig.make(0x9C1E, null, [$.String, $.Object], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SetValue", 
    $sig.make(0x9C2D, null, [
        $.String, $.Object, 
        $asm08.TypeRef("System.Configuration.ConfigurationValueFlags"), $asm08.TypeRef("System.Configuration.PropertySourceInfo")
      ], [])
  );

  $.Field({Static:false, Public:false}, "_configRecord", $asm08.TypeRef("System.Configuration.BaseConfigurationRecord")); 
  $.Field({Static:false, Public:false}, "_containsElement", $.Boolean); 
  $.Field({Static:false, Public:false}, "_containsInvalidValue", $.Boolean); 
  $.Field({Static:true , Public:false}, "s_emptyCollection", $asm06.TypeRef("System.Collections.IEnumerable")); 
  $.Property({Static:false, Public:false}, "Item", $.Object);

  $.Property({Static:false, Public:false}, "Item", $.Object);

  $.Property({Static:false, Public:false}, "SyncRoot", $.Object);

  $.Property({Static:false, Public:false}, "ConfigurationElements", $asm06.TypeRef("System.Collections.IEnumerable"));

  $.Property({Static:false, Public:false}, "InvalidValues", $asm06.TypeRef("System.Collections.IEnumerable"));

  $.Property({Static:true , Public:false}, "EmptyCollectionInstance", $asm06.TypeRef("System.Collections.IEnumerable"));

})
  .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.ConfigurationValues/EmptyCollection", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25DD5, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IEnumerable.GetEnumerator", 
    $sig.make(0x25DD6, $asm06.TypeRef("System.Collections.IEnumerator"), [], [])
  );

  $.Field({Static:false, Public:false}, "_emptyEnumerator", $asm06.TypeRef("System.Collections.IEnumerator")); 
  $.ImplementInterfaces($asm06.TypeRef("System.Collections.IEnumerable"))
});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.ConfigurationValues/EmptyCollection/EmptyCollectionEnumerator", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25DEF, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IEnumerator.get_Current", 
    $sig.make(0x25DEA, $.Object, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IEnumerator.MoveNext", 
    $sig.make(0x25DEB, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IEnumerator.Reset", 
    $sig.make(0x25DED, null, [], [])
  );

  $.Property({Static:false, Public:false, Virtual:true }, "IEnumerator.Current", $.Object);

  $.ImplementInterfaces($asm06.TypeRef("System.Collections.IEnumerator"))
});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.ConfigurationValues/ConfigurationElementsCollection", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25D6F, null, [$asm08.TypeRef("System.Configuration.ConfigurationValues")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IEnumerable.GetEnumerator", 
    $sig.make(0x25D71, $asm06.TypeRef("System.Collections.IEnumerator"), [], [])
  );

  $.Field({Static:false, Public:false}, "_values", $asm08.TypeRef("System.Configuration.ConfigurationValues")); 
  $.ImplementInterfaces($asm06.TypeRef("System.Collections.IEnumerable"))
});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.ConfigurationValues/ConfigurationElementsCollection/GetEnumerator>d__0", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25DFA, null, [$.Int32], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

  $.ExternalMethod({Static:false, Public:false}, "IEnumerator.MoveNext", 
    $sig.make(0x25DF3, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IEnumerator`1.get_Current", 
    $sig.make(0x25DEC, $.Object, [], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

  $.ExternalMethod({Static:false, Public:false}, "IEnumerator.get_Current", 
    $sig.make(0x25DF0, $.Object, [], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

  $.ExternalMethod({Static:false, Public:false}, "IEnumerator.Reset", 
    $sig.make(0x25DF6, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

  $.ExternalMethod({Static:false, Public:false}, "IDisposable.Dispose", 
    $sig.make(0x25DF8, null, [], [])
  );

  $.Field({Static:false, Public:false}, "$current", $.Object); 
  $.Field({Static:false, Public:false}, "$state", $.Int32); 
  $.Field({Static:false, Public:true }, "$this", $asm08.TypeRef("System.Configuration.ConfigurationValues/ConfigurationElementsCollection")); 
  $.Field({Static:false, Public:true }, "index", $.Int32); 
  $.Field({Static:false, Public:true }, "value", $.Object); 
  $.Property({Static:false, Public:false, Virtual:true }, "IEnumerator`1.Current", $.Object);

  $.Property({Static:false, Public:false, Virtual:true }, "IEnumerator.Current", $.Object);

  $.ImplementInterfaces(
      $asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$.Object]), $asm06.TypeRef("System.Collections.IEnumerator"), 
      $asm06.TypeRef("System.IDisposable")
  )
})
  .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.ConfigurationValues/InvalidValuesCollection", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25DB7, null, [$asm08.TypeRef("System.Configuration.ConfigurationValues")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IEnumerable.GetEnumerator", 
    $sig.make(0x25DB9, $asm06.TypeRef("System.Collections.IEnumerator"), [], [])
  );

  $.Field({Static:false, Public:false}, "_values", $asm08.TypeRef("System.Configuration.ConfigurationValues")); 
  $.ImplementInterfaces($asm06.TypeRef("System.Collections.IEnumerable"))
});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.ConfigurationValues/InvalidValuesCollection/GetEnumerator>d__4", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25DFC, null, [$.Int32], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

  $.ExternalMethod({Static:false, Public:false}, "IEnumerator.MoveNext", 
    $sig.make(0x25DF5, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IEnumerator`1.get_Current", 
    $sig.make(0x25DEE, $.Object, [], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

  $.ExternalMethod({Static:false, Public:false}, "IEnumerator.get_Current", 
    $sig.make(0x25DF2, $.Object, [], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

  $.ExternalMethod({Static:false, Public:false}, "IEnumerator.Reset", 
    $sig.make(0x25DF7, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

  $.ExternalMethod({Static:false, Public:false}, "IDisposable.Dispose", 
    $sig.make(0x25DF9, null, [], [])
  );

  $.Field({Static:false, Public:false}, "$current", $.Object); 
  $.Field({Static:false, Public:false}, "$state", $.Int32); 
  $.Field({Static:false, Public:true }, "$this", $asm08.TypeRef("System.Configuration.ConfigurationValues/InvalidValuesCollection")); 
  $.Field({Static:false, Public:true }, "index", $.Int32); 
  $.Field({Static:false, Public:true }, "value", $.Object); 
  $.Property({Static:false, Public:false, Virtual:true }, "IEnumerator`1.Current", $.Object);

  $.Property({Static:false, Public:false, Virtual:true }, "IEnumerator.Current", $.Object);

  $.ImplementInterfaces(
      $asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$.Object]), $asm06.TypeRef("System.Collections.IEnumerator"), 
      $asm06.TypeRef("System.IDisposable")
  )
})
  .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

JSIL.MakeInterface(
  "System.Configuration.Internal.IConfigErrorInfo", true, [], function ($) {
    $.Method({}, "get_Filename", $sig.make(0xA545, $.String, [], []));
    $.Method({}, "get_LineNumber", $sig.make(0xA546, $.Int32, [], []));
    $.Property({}, "Filename");
    $.Property({}, "LineNumber");
  }, []);

JSIL.MakeClass($asm0E.TypeRef("System.Xml.XmlTextReader"), "System.Configuration.ConfigXmlReader", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xA70C, null, [
        $.String, $.String, 
        $.Int32
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xA70D, null, [
        $.String, $.String, 
        $.Int32, $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Clone", 
    $sig.make(0xA70E, $.Type, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_RawXml", 
    $sig.make(0xA70B, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigErrorInfo.get_Filename", 
    $sig.make(0xA70A, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigErrorInfo.get_LineNumber", 
    $sig.make(0xA709, $.Int32, [], [])
  );

  $.Field({Static:false, Public:false}, "_rawXml", $.String); 
  $.Field({Static:false, Public:false}, "_lineOffset", $.Int32); 
  $.Field({Static:false, Public:false}, "_filename", $.String); 
  $.Field({Static:false, Public:false}, "_lineNumberIsConstant", $.Boolean); 
  $.Property({Static:false, Public:false, Virtual:true }, "IConfigErrorInfo.LineNumber", $.Int32);

  $.Property({Static:false, Public:false, Virtual:true }, "IConfigErrorInfo.Filename", $.String);

  $.Property({Static:false, Public:false}, "RawXml", $.String);

  $.ImplementInterfaces($asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo"))
});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationElement"), "System.Configuration.ConnectionStringSettings", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0xBA27, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0xBA28, null, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0xBA29, null, [
        $.String, $.String, 
        $.String
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_ConnectionString", 
    $sig.make(0xBA23, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Key", 
    $sig.make(0xBA1F, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Name", 
    $sig.make(0xBA21, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Properties", 
    $sig.make(0xBA20, $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_ProviderName", 
    $sig.make(0xBA25, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_ConnectionString", 
    $sig.make(0xBA24, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_Name", 
    $sig.make(0xBA22, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_ProviderName", 
    $sig.make(0xBA26, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "toString", 
    $sig.make(0xBA2A, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.Field({Static:true , Public:false}, "_properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection")); 
  $.Field({Static:true , Public:false, ReadOnly:true }, "_propName", $asm08.TypeRef("System.Configuration.ConfigurationProperty")); 
  $.Field({Static:true , Public:false, ReadOnly:true }, "_propConnectionString", $asm08.TypeRef("System.Configuration.ConfigurationProperty")); 
  $.Field({Static:true , Public:false, ReadOnly:true }, "_propProviderName", $asm08.TypeRef("System.Configuration.ConfigurationProperty")); 
  $.Property({Static:false, Public:false}, "Key", $.String);

  $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

  $.Property({Static:false, Public:true }, "Name", $.String)
    .Attribute($asm08.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["name"]; });

  $.Property({Static:false, Public:true }, "ConnectionString", $.String)
    .Attribute($asm08.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["connectionString"]; });

  $.Property({Static:false, Public:true }, "ProviderName", $.String)
    .Attribute($asm08.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["providerName"]; });

});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationElementCollection"), "System.Configuration.ConnectionStringSettingsCollection", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0xB3C1, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Add", 
    $sig.make(0xB3C4, null, [$asm08.TypeRef("System.Configuration.ConnectionStringSettings")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "BaseAdd", 
    $sig.make(0xB3C3, null, [$.Int32, $asm08.TypeRef("System.Configuration.ConfigurationElement")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Clear", 
    $sig.make(0xB3CA, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CreateNewElement", 
    $sig.make(0xB3C8, $asm08.TypeRef("System.Configuration.ConfigurationElement"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Item", 
    $sig.make(0xB3BE, $asm08.TypeRef("System.Configuration.ConnectionStringSettings"), [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Item", 
    $sig.make(0xB3C0, $asm08.TypeRef("System.Configuration.ConnectionStringSettings"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Properties", 
    $sig.make(0xB3BD, $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "GetElementKey", 
    $sig.make(0xB3C9, $.Object, [$asm08.TypeRef("System.Configuration.ConfigurationElement")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "IndexOf", 
    $sig.make(0xB3C2, $.Int32, [$asm08.TypeRef("System.Configuration.ConnectionStringSettings")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Remove", 
    $sig.make(0xB3C5, null, [$asm08.TypeRef("System.Configuration.ConnectionStringSettings")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Remove", 
    $sig.make(0xB3C7, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "RemoveAt", 
    $sig.make(0xB3C6, null, [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_Item", 
    $sig.make(0xB3BF, null, [$.Int32, $asm08.TypeRef("System.Configuration.ConnectionStringSettings")], [])
  );

  $.Field({Static:true , Public:false}, "_properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection")); 
  $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

  $.Property({Static:false, Public:true }, "Item", $asm08.TypeRef("System.Configuration.ConnectionStringSettings"));

  $.Property({Static:false, Public:true }, "Item", $asm08.TypeRef("System.Configuration.ConnectionStringSettings"));

})
  .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; })
  .Attribute($asm08.TypeRef("System.Configuration.ConfigurationCollectionAttribute"), function () { return [$asm08.TypeRef("System.Configuration.ConnectionStringSettings")]; });

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationSection"), "System.Configuration.ConnectionStringsSection", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0xAB26, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_ConnectionStrings", 
    $sig.make(0xAB25, $asm08.TypeRef("System.Configuration.ConnectionStringSettingsCollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Properties", 
    $sig.make(0xAB24, $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "GetRuntimeObject", 
    $sig.make(0xAB27, $.Object, [], [])
  );

  $.Field({Static:true , Public:false}, "_properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection")); 
  $.Field({Static:true , Public:false, ReadOnly:true }, "_propConnectionStrings", $asm08.TypeRef("System.Configuration.ConfigurationProperty")); 
  $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

  $.Property({Static:false, Public:true }, "ConnectionStrings", $asm08.TypeRef("System.Configuration.ConnectionStringSettingsCollection"))
    .Attribute($asm08.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return [""]; });

});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.ContextInformation", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x99AC, null, [$asm08.TypeRef("System.Configuration.BaseConfigurationRecord")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_HostingContext", 
    $sig.make(0x99A9, $.Object, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsMachineLevel", 
    $sig.make(0x99AA, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetSection", 
    $sig.make(0x99AB, $.Object, [$.String], [])
  );

  $.Field({Static:false, Public:false}, "_hostingContextEvaluated", $.Boolean); 
  $.Field({Static:false, Public:false}, "_hostingContext", $.Object); 
  $.Field({Static:false, Public:false}, "_configRecord", $asm08.TypeRef("System.Configuration.BaseConfigurationRecord")); 
  $.Property({Static:false, Public:true }, "HostingContext", $.Object);

  $.Property({Static:false, Public:true }, "IsMachineLevel", $.Boolean);

});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationSection"), "System.Configuration.DefaultSection", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25900, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "DeserializeSection", 
    $sig.make(0x25904, null, [$asm0E.TypeRef("System.Xml.XmlReader")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "EnsureStaticPropertyBag", 
    $sig.make(0x258FF, $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Properties", 
    $sig.make(0x258FD, $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "IsModified", 
    $sig.make(0x25901, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Reset", 
    $sig.make(0x25903, null, [$asm08.TypeRef("System.Configuration.ConfigurationElement")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ResetModified", 
    $sig.make(0x25902, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SerializeSection", 
    $sig.make(0x25905, $.String, [
        $asm08.TypeRef("System.Configuration.ConfigurationElement"), $.String, 
        $asm08.TypeRef("System.Configuration.ConfigurationSaveMode")
      ], [])
  );

  $.Field({Static:true , Public:false}, "s_properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection")); 
  $.Field({Static:false, Public:false}, "_rawXml", $.String); 
  $.Field({Static:false, Public:false}, "_isModified", $.Boolean); 
  $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"), "System.Configuration.DefaultValidator", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25912, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "CanValidate", 
    $sig.make(0x2590E, $.Boolean, [$asm06.TypeRef("System.Type")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Validate", 
    $sig.make(0x25910, null, [$.Object], [])
  );

});

JSIL.DeclareNamespace("System.Configuration.Provider");
JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.Provider.ProviderBase", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xA5FC, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_Description", 
    $sig.make(0xA5FA, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Name", 
    $sig.make(0xA5F9, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "Initialize", 
    $sig.make(0xA5FB, null, [$.String, $asm07.TypeRef("System.Collections.Specialized.NameValueCollection")], [])
  );

  $.Field({Static:false, Public:false}, "_name", $.String); 
  $.Field({Static:false, Public:false}, "_Description", $.String); 
  $.Field({Static:false, Public:false}, "_Initialized", $.Boolean); 
  $.Property({Static:false, Public:true , Virtual:true }, "Name", $.String);

  $.Property({Static:false, Public:true , Virtual:true }, "Description", $.String);

});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.Provider.ProviderBase"), "System.Configuration.ProtectedConfigurationProvider", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xA605, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "Decrypt", 
    $sig.make(0xA604, $asm0E.TypeRef("System.Xml.XmlNode"), [$asm0E.TypeRef("System.Xml.XmlNode")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Encrypt", 
    $sig.make(0xA603, $asm0E.TypeRef("System.Xml.XmlNode"), [$asm0E.TypeRef("System.Xml.XmlNode")], [])
  );

});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ProtectedConfigurationProvider"), "System.Configuration.DpapiProtectedConfigurationProvider", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25935, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Decrypt", 
    $sig.make(0x25930, $asm0E.TypeRef("System.Xml.XmlNode"), [$asm0E.TypeRef("System.Xml.XmlNode")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "DecryptText", 
    $sig.make(0x25939, $.String, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Encrypt", 
    $sig.make(0x25932, $asm0E.TypeRef("System.Xml.XmlNode"), [$asm0E.TypeRef("System.Xml.XmlNode")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "EncryptText", 
    $sig.make(0x25937, $.String, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_UseMachineProtection", 
    $sig.make(0x2592E, $.Boolean, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:true , Public:false}, "GetBooleanValue", 
    $sig.make(0x2593F, $.Boolean, [
        $asm07.TypeRef("System.Collections.Specialized.NameValueCollection"), $.String, 
        $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Initialize", 
    $sig.make(0x25934, null, [$.String, $asm07.TypeRef("System.Collections.Specialized.NameValueCollection")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "PrepareDataBlob", 
    $sig.make(0x2593C, $asm08.TypeRef("System.Configuration.DATA_BLOB"), [$jsilcore.TypeRef("System.Array", [$.Byte])], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "PrepareDataBlob", 
    $sig.make(0x2593D, $asm08.TypeRef("System.Configuration.DATA_BLOB"), [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "PreparePromptStructure", 
    $sig.make(0x2593E, $asm08.TypeRef("System.Configuration.CRYPTPROTECT_PROMPTSTRUCT"), [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "TraverseToChild", 
    $sig.make(0x2593B, $asm0E.TypeRef("System.Xml.XmlNode"), [
        $asm0E.TypeRef("System.Xml.XmlNode"), $.String, 
        $.Boolean
      ], [])
  );

  $.Field({Static:false, Public:false}, "_UseMachineProtection", $.Boolean); 
  $.Field({Static:false, Public:false}, "_KeyEntropy", $.String); 
  $.Constant({Static:true , Public:false}, "CRYPTPROTECT_UI_FORBIDDEN", 1); 
  $.Constant({Static:true , Public:false}, "CRYPTPROTECT_LOCAL_MACHINE", 4); 
  $.Property({Static:false, Public:true }, "UseMachineProtection", $.Boolean);

});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.ElementInformation", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x9C62, null, [$asm08.TypeRef("System.Configuration.ConfigurationElement")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ChangeSourceAndLineNumber", 
    $sig.make(0x9C66, null, [$asm08.TypeRef("System.Configuration.PropertySourceInfo")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Errors", 
    $sig.make(0x9C60, $asm06.TypeRef("System.Collections.ICollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsCollection", 
    $sig.make(0x9C53, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsLocked", 
    $sig.make(0x9C52, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsPresent", 
    $sig.make(0x9C51, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_LineNumber", 
    $sig.make(0x9C56, $.Int32, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Properties", 
    $sig.make(0x9C50, $asm08.TypeRef("System.Configuration.PropertyInformationCollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Source", 
    $sig.make(0x9C55, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Type", 
    $sig.make(0x9C58, $asm06.TypeRef("System.Type"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Validator", 
    $sig.make(0x9C5A, $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetReadOnlyErrorsList", 
    $sig.make(0x9C67, $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Configuration.ConfigurationException")]), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "PropertyInfoInternal", 
    $sig.make(0x9C64, $asm08.TypeRef("System.Configuration.PropertySourceInfo"), [], [])
  );

  $.Field({Static:false, Public:false}, "_thisElement", $asm08.TypeRef("System.Configuration.ConfigurationElement")); 
  $.Field({Static:false, Public:false}, "_internalProperties", $asm08.TypeRef("System.Configuration.PropertyInformationCollection")); 
  $.Field({Static:false, Public:false}, "_errors", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Configuration.ConfigurationException")])); 
  $.Property({Static:false, Public:true }, "Properties", $asm08.TypeRef("System.Configuration.PropertyInformationCollection"));

  $.Property({Static:false, Public:true }, "IsPresent", $.Boolean);

  $.Property({Static:false, Public:true }, "IsLocked", $.Boolean);

  $.Property({Static:false, Public:true }, "IsCollection", $.Boolean);

  $.Property({Static:false, Public:true }, "Source", $.String);

  $.Property({Static:false, Public:true }, "LineNumber", $.Int32);

  $.Property({Static:false, Public:true }, "Type", $asm06.TypeRef("System.Type"));

  $.Property({Static:false, Public:true }, "Validator", $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"));

  $.Property({Static:false, Public:true }, "Errors", $asm06.TypeRef("System.Collections.ICollection"));

});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationFileMap"), "System.Configuration.ExeConfigurationFileMap", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x259E7, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x259E8, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x259EA, null, [
        $.String, $.String, 
        $.String, $.String
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Clone", 
    $sig.make(0x259E9, $.Object, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_ExeConfigFilename", 
    $sig.make(0x259E1, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_LocalUserConfigFilename", 
    $sig.make(0x259E5, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_RoamingUserConfigFilename", 
    $sig.make(0x259E3, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "set_ExeConfigFilename", 
    $sig.make(0x259E2, null, [$.String], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "set_LocalUserConfigFilename", 
    $sig.make(0x259E6, null, [$.String], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "set_RoamingUserConfigFilename", 
    $sig.make(0x259E4, null, [$.String], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.Field({Static:false, Public:false}, "_exeConfigFilename", $.String); 
  $.Field({Static:false, Public:false}, "_roamingUserConfigFilename", $.String); 
  $.Field({Static:false, Public:false}, "_localUserConfigFilename", $.String); 
  $.Property({Static:false, Public:true }, "ExeConfigFilename", $.String);

  $.Property({Static:false, Public:true }, "RoamingUserConfigFilename", $.String);

  $.Property({Static:false, Public:true }, "LocalUserConfigFilename", $.String);

});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.ExeContext", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25A3A, null, [$asm08.TypeRef("System.Configuration.ConfigurationUserLevel"), $.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_ExePath", 
    $sig.make(0x25A36, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_UserLevel", 
    $sig.make(0x25A35, $asm08.TypeRef("System.Configuration.ConfigurationUserLevel"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.Field({Static:false, Public:false}, "_userContext", $asm08.TypeRef("System.Configuration.ConfigurationUserLevel")); 
  $.Field({Static:false, Public:false}, "_exePath", $.String); 
  $.Property({Static:false, Public:true }, "UserLevel", $asm08.TypeRef("System.Configuration.ConfigurationUserLevel"));

  $.Property({Static:false, Public:true }, "ExePath", $.String);

});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.FactoryRecord", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xA7BE, null, [
        $.String, $.String, 
        $.String, $.Object, 
        $.String, $asm08.TypeRef("System.Configuration.SimpleBitVector32"), 
        $asm08.TypeRef("System.Configuration.ConfigurationAllowDefinition"), $asm08.TypeRef("System.Configuration.ConfigurationAllowExeDefinition"), 
        $asm08.TypeRef("System.Configuration.OverrideModeSetting"), $.String, 
        $.Int32, $asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")])
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xA7BF, null, [
        $.String, $.String, 
        $.String, $.String, 
        $.String, $.Int32
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xA7C0, null, [
        $.String, $.String, 
        $.String, $.String, 
        $.Boolean, $asm08.TypeRef("System.Configuration.ConfigurationAllowDefinition"), 
        $asm08.TypeRef("System.Configuration.ConfigurationAllowExeDefinition"), $asm08.TypeRef("System.Configuration.OverrideModeSetting"), 
        $.Boolean, $.Boolean, 
        $.Boolean, $.Boolean, 
        $.String, $.Int32
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AddErrors", 
    $sig.make(0xA7C7, null, [$asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CloneSection", 
    $sig.make(0xA7C1, $.Type, [$.String, $.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CloneSectionGroup", 
    $sig.make(0xA7C2, $.Type, [
        $.String, $.String, 
        $.Int32
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_AllowDefinition", 
    $sig.make(0xA79E, $asm08.TypeRef("System.Configuration.ConfigurationAllowDefinition"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_AllowExeDefinition", 
    $sig.make(0xA7A0, $asm08.TypeRef("System.Configuration.ConfigurationAllowExeDefinition"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_AllowLocation", 
    $sig.make(0xA7A3, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ConfigKey", 
    $sig.make(0xA796, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Errors", 
    $sig.make(0xA7BC, $asm06.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")]), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Factory", 
    $sig.make(0xA79A, $.Object, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_FactoryTypeName", 
    $sig.make(0xA79C, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Filename", 
    $sig.make(0xA7B7, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "get_Group", 
    $sig.make(0xA798, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_HasErrors", 
    $sig.make(0xA7BD, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_HasFile", 
    $sig.make(0xA7BB, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsFactoryTrustedWithoutAptca", 
    $sig.make(0xA7B0, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsFromTrustedConfigRecord", 
    $sig.make(0xA7AB, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsGroup", 
    $sig.make(0xA7A9, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsUndeclared", 
    $sig.make(0xA7AD, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_LineNumber", 
    $sig.make(0xA7B9, $.Int32, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "get_Name", 
    $sig.make(0xA799, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_OverrideModeDefault", 
    $sig.make(0xA7A2, $asm08.TypeRef("System.Configuration.OverrideModeSetting"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_RequirePermission", 
    $sig.make(0xA7A7, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_RestartOnExternalChanges", 
    $sig.make(0xA7A5, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IsEquivalentSectionFactory", 
    $sig.make(0xA7C5, $.Boolean, [
        $asm08.TypeRef("System.Configuration.Internal.IInternalConfigHost"), $.String, 
        $.Boolean, $asm08.TypeRef("System.Configuration.ConfigurationAllowDefinition"), 
        $asm08.TypeRef("System.Configuration.ConfigurationAllowExeDefinition"), $.Boolean, 
        $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IsEquivalentSectionGroupFactory", 
    $sig.make(0xA7C4, $.Boolean, [$asm08.TypeRef("System.Configuration.Internal.IInternalConfigHost"), $.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IsEquivalentType", 
    $sig.make(0xA7C3, $.Boolean, [$asm08.TypeRef("System.Configuration.Internal.IInternalConfigHost"), $.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IsIgnorable", 
    $sig.make(0xA7CA, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_AllowDefinition", 
    $sig.make(0xA79F, null, [$asm08.TypeRef("System.Configuration.ConfigurationAllowDefinition")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_AllowExeDefinition", 
    $sig.make(0xA7A1, null, [$asm08.TypeRef("System.Configuration.ConfigurationAllowExeDefinition")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_AllowLocation", 
    $sig.make(0xA7A4, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_Factory", 
    $sig.make(0xA79B, null, [$.Object], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_FactoryTypeName", 
    $sig.make(0xA79D, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_Filename", 
    $sig.make(0xA7B8, null, [$.String], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "set_IsFactoryTrustedWithoutAptca", 
    $sig.make(0xA7B5, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_IsFromTrustedConfigRecord", 
    $sig.make(0xA7AC, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_IsGroup", 
    $sig.make(0xA7AA, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_IsUndeclared", 
    $sig.make(0xA7AE, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_LineNumber", 
    $sig.make(0xA7BA, null, [$.Int32], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "set_RequirePermission", 
    $sig.make(0xA7A8, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_RestartOnExternalChanges", 
    $sig.make(0xA7A6, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ThrowOnErrors", 
    $sig.make(0xA7C9, null, [], [])
  );

  $.Field({Static:false, Public:false}, "_configKey", $.String); 
  $.Field({Static:false, Public:false}, "_group", $.String); 
  $.Field({Static:false, Public:false}, "_name", $.String); 
  $.Field({Static:false, Public:false}, "_flags", $asm08.TypeRef("System.Configuration.SimpleBitVector32")); 
  $.Field({Static:false, Public:false}, "_factoryTypeName", $.String); 
  $.Field({Static:false, Public:false}, "_allowDefinition", $asm08.TypeRef("System.Configuration.ConfigurationAllowDefinition")); 
  $.Field({Static:false, Public:false}, "_allowExeDefinition", $asm08.TypeRef("System.Configuration.ConfigurationAllowExeDefinition")); 
  $.Field({Static:false, Public:false}, "_overrideModeDefault", $asm08.TypeRef("System.Configuration.OverrideModeSetting")); 
  $.Field({Static:false, Public:false}, "_filename", $.String); 
  $.Field({Static:false, Public:false}, "_lineNumber", $.Int32); 
  $.Field({Static:false, Public:false}, "_factory", $.Object); 
  $.Field({Static:false, Public:false}, "_errors", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")])); 
  $.Constant({Static:true , Public:false}, "Flag_AllowLocation", 1); 
  $.Constant({Static:true , Public:false}, "Flag_RestartOnExternalChanges", 2); 
  $.Constant({Static:true , Public:false}, "Flag_RequirePermission", 4); 
  $.Constant({Static:true , Public:false}, "Flag_IsGroup", 8); 
  $.Constant({Static:true , Public:false}, "Flag_IsFromTrustedConfigRecord", 16); 
  $.Constant({Static:true , Public:false}, "Flag_IsFactoryTrustedWithoutAptca", 32); 
  $.Constant({Static:true , Public:false}, "Flag_IsUndeclared", 64); 
  $.Property({Static:false, Public:false}, "ConfigKey", $.String);

  $.Property({Static:false, Public:false}, "Group", $.String);

  $.Property({Static:false, Public:false}, "Name", $.String);

  $.Property({Static:false, Public:false}, "Factory", $.Object);

  $.Property({Static:false, Public:false}, "FactoryTypeName", $.String);

  $.Property({Static:false, Public:false}, "AllowDefinition", $asm08.TypeRef("System.Configuration.ConfigurationAllowDefinition"));

  $.Property({Static:false, Public:false}, "AllowExeDefinition", $asm08.TypeRef("System.Configuration.ConfigurationAllowExeDefinition"));

  $.Property({Static:false, Public:false}, "OverrideModeDefault", $asm08.TypeRef("System.Configuration.OverrideModeSetting"));

  $.Property({Static:false, Public:false}, "AllowLocation", $.Boolean);

  $.Property({Static:false, Public:false}, "RestartOnExternalChanges", $.Boolean);

  $.Property({Static:false, Public:false}, "RequirePermission", $.Boolean);

  $.Property({Static:false, Public:false}, "IsGroup", $.Boolean);

  $.Property({Static:false, Public:false}, "IsFromTrustedConfigRecord", $.Boolean);

  $.Property({Static:false, Public:false}, "IsUndeclared", $.Boolean);

  $.Property({Static:false, Public:false}, "IsFactoryTrustedWithoutAptca", $.Boolean);

  $.Property({Static:false, Public:true , Virtual:true }, "Filename", $.String);

  $.Property({Static:false, Public:true , Virtual:true }, "LineNumber", $.Int32);

  $.Property({Static:false, Public:false}, "HasFile", $.Boolean);

  $.Property({Static:false, Public:false}, "Errors", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")]));

  $.Property({Static:false, Public:false}, "HasErrors", $.Boolean);

  $.ImplementInterfaces($asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo"))
})
  .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerDisplayAttribute"), function () { return ["FactoryRecord {ConfigKey}"]; });

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationConverterBase"), "System.Configuration.GenericEnumConverter", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25A9B, null, [$asm06.TypeRef("System.Type")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "ConvertFrom", 
    $sig.make(0x25AA2, $.Object, [
        $asm07.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm06.TypeRef("System.Globalization.CultureInfo"), 
        $.Object
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "ConvertTo", 
    $sig.make(0x25A9D, $.Object, [
        $asm07.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm06.TypeRef("System.Globalization.CultureInfo"), 
        $.Object, $asm06.TypeRef("System.Type")
      ], [])
  );

  $.Field({Static:false, Public:false}, "_enumType", $asm06.TypeRef("System.Type")); 
});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationSection"), "System.Configuration.IgnoreSection", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25AF1, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "DeserializeSection", 
    $sig.make(0x25AF5, null, [$asm0E.TypeRef("System.Xml.XmlReader")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "EnsureStaticPropertyBag", 
    $sig.make(0x25AF0, $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Properties", 
    $sig.make(0x25AEF, $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "IsModified", 
    $sig.make(0x25AF2, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Reset", 
    $sig.make(0x25AF4, null, [$asm08.TypeRef("System.Configuration.ConfigurationElement")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ResetModified", 
    $sig.make(0x25AF3, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SerializeSection", 
    $sig.make(0x25AF6, $.String, [
        $asm08.TypeRef("System.Configuration.ConfigurationElement"), $.String, 
        $asm08.TypeRef("System.Configuration.ConfigurationSaveMode")
      ], [])
  );

  $.Field({Static:true , Public:false}, "s_properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection")); 
  $.Field({Static:false, Public:false}, "_rawXml", $.String); 
  $.Field({Static:false, Public:false}, "_isModified", $.Boolean); 
  $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationConverterBase"), "System.Configuration.InfiniteIntConverter", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25A2E, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "ConvertFrom", 
    $sig.make(0x25A2D, $.Object, [
        $asm07.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm06.TypeRef("System.Globalization.CultureInfo"), 
        $.Object
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "ConvertTo", 
    $sig.make(0x25A2C, $.Object, [
        $asm07.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm06.TypeRef("System.Globalization.CultureInfo"), 
        $.Object, $asm06.TypeRef("System.Type")
      ], [])
  );

});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationConverterBase"), "System.Configuration.InfiniteTimeSpanConverter", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25A43, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "ConvertFrom", 
    $sig.make(0x25A3F, $.Object, [
        $asm07.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm06.TypeRef("System.Globalization.CultureInfo"), 
        $.Object
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "ConvertTo", 
    $sig.make(0x25A3C, $.Object, [
        $asm07.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm06.TypeRef("System.Globalization.CultureInfo"), 
        $.Object, $asm06.TypeRef("System.Type")
      ], [])
  );

  $.Field({Static:true , Public:false, ReadOnly:true }, "s_TimeSpanConverter", $asm07.TypeRef("System.ComponentModel.TypeConverter")); 
});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"), "System.Configuration.IntegerValidator", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25A5F, null, [$.Int32, $.Int32], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25A61, null, [
        $.Int32, $.Int32, 
        $.Boolean
      ], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25A62, null, [
        $.Int32, $.Int32, 
        $.Boolean, $.Int32
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CanValidate", 
    $sig.make(0x25A63, $.Boolean, [$asm06.TypeRef("System.Type")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Validate", 
    $sig.make(0x25A65, null, [$.Object], [])
  );

  $.Field({Static:false, Public:false}, "_flags", $asm08.TypeRef("System.Configuration.IntegerValidator/ValidationFlags")); 
  $.Field({Static:false, Public:false}, "_minValue", $.Int32); 
  $.Field({Static:false, Public:false}, "_maxValue", $.Int32); 
  $.Field({Static:false, Public:false}, "_resolution", $.Int32); 
});

JSIL.MakeEnum(
  "System.Configuration.IntegerValidator/ValidationFlags", false, {
    None: 0, 
    ExclusiveRange: 1
  }, false
);

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationValidatorAttribute"), "System.Configuration.IntegerValidatorAttribute", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25AA1, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_ExcludeRange", 
    $sig.make(0x25A9F, $.Boolean, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_MaxValue", 
    $sig.make(0x25A9C, $.Int32, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_MinValue", 
    $sig.make(0x25A99, $.Int32, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_ValidatorInstance", 
    $sig.make(0x25A98, $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_ExcludeRange", 
    $sig.make(0x25AA0, null, [$.Boolean], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "set_MaxValue", 
    $sig.make(0x25A9E, null, [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_MinValue", 
    $sig.make(0x25A9A, null, [$.Int32], [])
  );

  $.Field({Static:false, Public:false}, "_min", $.Int32); 
  $.Field({Static:false, Public:false}, "_max", $.Int32); 
  $.Field({Static:false, Public:false}, "_excludeRange", $.Boolean); 
  $.Property({Static:false, Public:true , Virtual:true }, "ValidatorInstance", $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"));

  $.Property({Static:false, Public:true }, "MinValue", $.Int32);

  $.Property({Static:false, Public:true }, "MaxValue", $.Int32);

  $.Property({Static:false, Public:true }, "ExcludeRange", $.Boolean);

})
  .Attribute($asm06.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm06.System.AttributeTargets.Property]; });

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationElementCollection"), "System.Configuration.KeyValueConfigurationCollection", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0xB3A5, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Add", 
    $sig.make(0xB3A6, null, [$asm08.TypeRef("System.Configuration.KeyValueConfigurationElement")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Add", 
    $sig.make(0xB3A7, null, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Clear", 
    $sig.make(0xB3A9, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CreateNewElement", 
    $sig.make(0xB3AA, $asm08.TypeRef("System.Configuration.ConfigurationElement"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_AllKeys", 
    $sig.make(0xB3A4, $jsilcore.TypeRef("System.Array", [$.String]), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Item", 
    $sig.make(0xB3A3, $asm08.TypeRef("System.Configuration.KeyValueConfigurationElement"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Properties", 
    $sig.make(0xB3A1, $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "get_ThrowOnDuplicate", 
    $sig.make(0xB3A2, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetElementKey", 
    $sig.make(0xB3AB, $.Object, [$asm08.TypeRef("System.Configuration.ConfigurationElement")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Remove", 
    $sig.make(0xB3A8, null, [$.String], [])
  );

  $.Field({Static:true , Public:false}, "_properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection")); 
  $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

  $.Property({Static:false, Public:false, Virtual:true }, "ThrowOnDuplicate", $.Boolean);

  $.Property({Static:false, Public:true }, "Item", $asm08.TypeRef("System.Configuration.KeyValueConfigurationElement"));

  $.Property({Static:false, Public:true }, "AllKeys", $jsilcore.TypeRef("System.Array", [$.String]));

})
  .Attribute($asm08.TypeRef("System.Configuration.ConfigurationCollectionAttribute"), function () { return [$asm08.TypeRef("System.Configuration.KeyValueConfigurationElement")]; })
  .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationElement"), "System.Configuration.KeyValueConfigurationElement", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0xBA15, null, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xBA18, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Key", 
    $sig.make(0xBA12, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Properties", 
    $sig.make(0xBA11, $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_Value", 
    $sig.make(0xBA13, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Init", 
    $sig.make(0xBA16, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_Value", 
    $sig.make(0xBA14, null, [$.String], [])
  );

  $.Field({Static:true , Public:false}, "_properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection")); 
  $.Field({Static:true , Public:false, ReadOnly:true }, "_propKey", $asm08.TypeRef("System.Configuration.ConfigurationProperty")); 
  $.Field({Static:true , Public:false, ReadOnly:true }, "_propValue", $asm08.TypeRef("System.Configuration.ConfigurationProperty")); 
  $.Field({Static:false, Public:false}, "_needsInit", $.Boolean); 
  $.Field({Static:false, Public:false}, "_initKey", $.String); 
  $.Field({Static:false, Public:false}, "_initValue", $.String); 
  $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

  $.Property({Static:false, Public:true }, "Key", $.String)
    .Attribute($asm08.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["key"]; });

  $.Property({Static:false, Public:true }, "Value", $.String)
    .Attribute($asm08.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["value"]; });

});

JSIL.MakeClass($asm07.TypeRef("System.Collections.Specialized.NameValueCollection"), "System.Configuration.KeyValueInternalCollection", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0xB3B6, null, [$asm08.TypeRef("System.Configuration.AppSettingsSection")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Add", 
    $sig.make(0xB3B3, null, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Clear", 
    $sig.make(0xB3B4, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Remove", 
    $sig.make(0xB3B5, null, [$.String], [])
  );

  $.Field({Static:false, Public:false}, "_root", $asm08.TypeRef("System.Configuration.AppSettingsSection")); 
});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"), "System.Configuration.LongValidator", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25AD2, null, [$.Int64, $.Int64], [])
  );

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25AD3, null, [
        $.Int64, $.Int64, 
        $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25AD5, null, [
        $.Int64, $.Int64, 
        $.Boolean, $.Int64
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CanValidate", 
    $sig.make(0x25AD6, $.Boolean, [$asm06.TypeRef("System.Type")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Validate", 
    $sig.make(0x25AD7, null, [$.Object], [])
  );

  $.Field({Static:false, Public:false}, "_flags", $asm08.TypeRef("System.Configuration.LongValidator/ValidationFlags")); 
  $.Field({Static:false, Public:false}, "_minValue", $.Int64); 
  $.Field({Static:false, Public:false}, "_maxValue", $.Int64); 
  $.Field({Static:false, Public:false}, "_resolution", $.Int64); 
});

JSIL.MakeEnum(
  "System.Configuration.LongValidator/ValidationFlags", false, {
    None: 0, 
    ExclusiveRange: 1
  }, false
);

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationValidatorAttribute"), "System.Configuration.LongValidatorAttribute", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25B26, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_ExcludeRange", 
    $sig.make(0x25B23, $.Boolean, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_MaxValue", 
    $sig.make(0x25B21, $.Int64, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_MinValue", 
    $sig.make(0x25B1D, $.Int64, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_ValidatorInstance", 
    $sig.make(0x25B15, $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_ExcludeRange", 
    $sig.make(0x25B24, null, [$.Boolean], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "set_MaxValue", 
    $sig.make(0x25B22, null, [$.Int64], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_MinValue", 
    $sig.make(0x25B1F, null, [$.Int64], [])
  );

  $.Field({Static:false, Public:false}, "_min", $.Int64); 
  $.Field({Static:false, Public:false}, "_max", $.Int64); 
  $.Field({Static:false, Public:false}, "_excludeRange", $.Boolean); 
  $.Property({Static:false, Public:true , Virtual:true }, "ValidatorInstance", $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"));

  $.Property({Static:false, Public:true }, "MinValue", $.Int64);

  $.Property({Static:false, Public:true }, "MaxValue", $.Int64);

  $.Property({Static:false, Public:true }, "ExcludeRange", $.Boolean);

})
  .Attribute($asm06.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm06.System.AttributeTargets.Property]; });

JSIL.MakeClass($asm08.TypeRef("System.Configuration.BaseConfigurationRecord"), "System.Configuration.MgmtConfigurationRecord", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xAB5B, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AddConfigurationSection", 
    $sig.make(0xAB6D, null, [
        $.String, $.String, 
        $asm08.TypeRef("System.Configuration.ConfigurationSection")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AddConfigurationSectionGroup", 
    $sig.make(0xAB6F, null, [
        $.String, $.String, 
        $asm08.TypeRef("System.Configuration.ConfigurationSectionGroup")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AddLocation", 
    $sig.make(0xAB59, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AppendAttribute", 
    $sig.make(0xAB75, null, [
        $asm06.TypeRef("System.Text.StringBuilder"), $.String, 
        $.String
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AreDeclarationAttributesModified", 
    $sig.make(0xAB74, $.Boolean, [$asm08.TypeRef("System.Configuration.FactoryRecord"), $asm08.TypeRef("System.Configuration.ConfigurationSection")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AreLocationAttributesModified", 
    $sig.make(0xAB7A, $.Boolean, [$asm08.TypeRef("System.Configuration.SectionRecord"), $asm08.TypeRef("System.Configuration.ConfigurationSection")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AreSectionAttributesModified", 
    $sig.make(0xAB7B, $.Boolean, [$asm08.TypeRef("System.Configuration.SectionRecord"), $asm08.TypeRef("System.Configuration.ConfigurationSection")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "BoolToString", 
    $sig.make(0xAB8F, $.String, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ChangeConfigSource", 
    $sig.make(0xAB6B, null, [
        $asm08.TypeRef("System.Configuration.SectionInformation"), $.String, 
        $.String, $.String
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CheckPreamble", 
    $sig.make(0xAB86, null, [
        $jsilcore.TypeRef("System.Array", [$.Byte]), $asm08.TypeRef("System.Configuration.XmlUtilWriter"), 
        $jsilcore.TypeRef("System.Array", [$.Byte])
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CopyConfig", 
    $sig.make(0xAB88, null, [
        $asm08.TypeRef("System.Configuration.SectionUpdates"), $asm08.TypeRef("System.Configuration.ConfigDefinitionUpdates"), 
        $jsilcore.TypeRef("System.Array", [$.Byte]), $.String, 
        $asm08.TypeRef("System.Configuration.NamespaceChange"), $asm08.TypeRef("System.Configuration.XmlUtilWriter")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CopyConfigDeclarationsRecursive", 
    $sig.make(0xAB89, $.Boolean, [
        $asm08.TypeRef("System.Configuration.SectionUpdates"), $asm08.TypeRef("System.Configuration.XmlUtil"), 
        $asm08.TypeRef("System.Configuration.XmlUtilWriter"), $.String, 
        $.Int32, $.Int32
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CopyConfigDefinitionsRecursive", 
    $sig.make(0xAB8A, $.Boolean, [
        $asm08.TypeRef("System.Configuration.ConfigDefinitionUpdates"), $asm08.TypeRef("System.Configuration.XmlUtil"), 
        $asm08.TypeRef("System.Configuration.XmlUtilWriter"), $.Boolean, 
        $asm08.TypeRef("System.Configuration.LocationUpdates"), $asm08.TypeRef("System.Configuration.SectionUpdates"), 
        $.Boolean, $.String, 
        $.Int32, $.Int32
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CopyConfigSource", 
    $sig.make(0xAB8D, null, [
        $asm08.TypeRef("System.Configuration.XmlUtilWriter"), $.String, 
        $.String, $jsilcore.TypeRef("System.Array", [$.Byte])
      ], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "Create", 
    $sig.make(0xAB5A, $.Type, [
        $asm08.TypeRef("System.Configuration.Internal.IInternalConfigRoot"), $asm08.TypeRef("System.Configuration.Internal.IInternalConfigRecord"), 
        $.String, $.String
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CreateNewConfig", 
    $sig.make(0xAB80, null, [
        $asm08.TypeRef("System.Configuration.SectionUpdates"), $asm08.TypeRef("System.Configuration.ConfigDefinitionUpdates"), 
        $asm08.TypeRef("System.Configuration.NamespaceChange"), $asm08.TypeRef("System.Configuration.XmlUtilWriter")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CreateNewConfigSource", 
    $sig.make(0xAB8E, null, [
        $asm08.TypeRef("System.Configuration.XmlUtilWriter"), $.String, 
        $.Int32
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CreateSection", 
    $sig.make(0xAB56, $.Object, [
        $.Boolean, $asm08.TypeRef("System.Configuration.FactoryRecord"), 
        $asm08.TypeRef("System.Configuration.SectionRecord"), $.Object, 
        $asm08.TypeRef("System.Configuration.ConfigXmlReader")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CreateSectionFactory", 
    $sig.make(0xAB55, $.Object, [$asm08.TypeRef("System.Configuration.FactoryRecord")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CreateSectionGroupFactory", 
    $sig.make(0xAB5E, $asm06.TypeRef("System.Reflection.ConstructorInfo"), [$asm08.TypeRef("System.Configuration.FactoryRecord")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "EnsureSectionGroupFactory", 
    $sig.make(0xAB5F, $asm06.TypeRef("System.Reflection.ConstructorInfo"), [$asm08.TypeRef("System.Configuration.FactoryRecord")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ExeDefinitionToString", 
    $sig.make(0xAB77, $.String, [$asm08.TypeRef("System.Configuration.ConfigurationAllowExeDefinition")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "FindAndCloneImmediateParentSection", 
    $sig.make(0xAB66, $asm08.TypeRef("System.Configuration.ConfigurationSection"), [$asm08.TypeRef("System.Configuration.ConfigurationSection")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "FindImmediateParentSection", 
    $sig.make(0xAB65, $asm08.TypeRef("System.Configuration.ConfigurationSection"), [$asm08.TypeRef("System.Configuration.ConfigurationSection")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ClassFlags", 
    $sig.make(0xAB48, $asm08.TypeRef("System.Configuration.SimpleBitVector32"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "get_ConfigurationFilePath", 
    $sig.make(0xAB4E, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_HasRemovedSections", 
    $sig.make(0xAB50, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_HasRemovedSectionsOrGroups", 
    $sig.make(0xAB4F, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_MgmtParent", 
    $sig.make(0xAB46, $.Type, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_NamespaceChangeNeeded", 
    $sig.make(0xAB53, $asm08.TypeRef("System.Configuration.NamespaceChange"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_NamespacePresent", 
    $sig.make(0xAB51, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_RecordItselfRequiresUpdates", 
    $sig.make(0xAB54, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_RemovedSectionGroups", 
    $sig.make(0xAB4B, $asm06.TypeRef("System.Collections.Hashtable"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_RemovedSections", 
    $sig.make(0xAB4A, $asm06.TypeRef("System.Collections.Hashtable"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_SectionFactories", 
    $sig.make(0xAB4C, $asm06.TypeRef("System.Collections.Hashtable"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_SectionGroupFactories", 
    $sig.make(0xAB4D, $asm06.TypeRef("System.Collections.Hashtable"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_SectionGroups", 
    $sig.make(0xAB49, $asm06.TypeRef("System.Collections.Hashtable"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_UpdateConfigHost", 
    $sig.make(0xAB47, $asm08.TypeRef("System.Configuration.UpdateConfigHost"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetAllFactories", 
    $sig.make(0xAB64, $asm06.TypeRef("System.Collections.Hashtable"), [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetConfigDeclarationUpdates", 
    $sig.make(0xAB79, $asm08.TypeRef("System.Configuration.SectionUpdates"), [$asm08.TypeRef("System.Configuration.ConfigurationSaveMode"), $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetConfigDefinitionUpdates", 
    $sig.make(0xAB7D, null, [
        $.Boolean, $asm08.TypeRef("System.Configuration.ConfigurationSaveMode"), 
        $.Boolean, $jsilcore.TypeRef("JSIL.Reference", [$asm08.TypeRef("System.Configuration.ConfigDefinitionUpdates")]), 
        $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Collections.ArrayList")])
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetConfigSection", 
    $sig.make(0xAB60, $asm08.TypeRef("System.Configuration.ConfigurationSection"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetDescendentSectionFactories", 
    $sig.make(0xAB70, $asm06.TypeRef("System.Collections.ArrayList"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetDescendentSectionGroupFactories", 
    $sig.make(0xAB71, $asm06.TypeRef("System.Collections.ArrayList"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetLocationCollection", 
    $sig.make(0xAB63, $asm08.TypeRef("System.Configuration.ConfigurationLocationCollection"), [$asm08.TypeRef("System.Configuration.Configuration")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetRawXml", 
    $sig.make(0xAB68, $.String, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetRuntimeObject", 
    $sig.make(0xAB58, $.Object, [$.Object], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetSectionGroup", 
    $sig.make(0xAB62, $asm08.TypeRef("System.Configuration.ConfigurationSectionGroup"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetUpdatedSectionDeclarationXml", 
    $sig.make(0xAB76, $.String, [
        $asm08.TypeRef("System.Configuration.FactoryRecord"), $asm08.TypeRef("System.Configuration.ConfigurationSection"), 
        $asm08.TypeRef("System.Configuration.ConfigurationSaveMode")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetUpdatedSectionGroupDeclarationXml", 
    $sig.make(0xAB78, $.String, [$asm08.TypeRef("System.Configuration.FactoryRecord"), $asm08.TypeRef("System.Configuration.ConfigurationSectionGroup")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Init", 
    $sig.make(0xAB5C, null, [
        $asm08.TypeRef("System.Configuration.Internal.IInternalConfigRoot"), $asm08.TypeRef("System.Configuration.Internal.IInternalConfigRecord"), 
        $.String, $.String
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "InitStreamInfoUpdates", 
    $sig.make(0xAB5D, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IsConfigSectionMoved", 
    $sig.make(0xAB7C, $.Boolean, [$asm08.TypeRef("System.Configuration.SectionRecord"), $asm08.TypeRef("System.Configuration.ConfigurationSection")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IsStreamUsed", 
    $sig.make(0xAB6A, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "LookupSectionGroup", 
    $sig.make(0xAB61, $asm08.TypeRef("System.Configuration.ConfigurationSectionGroup"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "RemoveConfigurationSection", 
    $sig.make(0xAB6E, null, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "RemoveConfigurationSectionGroup", 
    $sig.make(0xAB72, null, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "RemoveLocationWriteRequirement", 
    $sig.make(0xAB90, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "RevertToParent", 
    $sig.make(0xAB67, null, [$asm08.TypeRef("System.Configuration.ConfigurationSection")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SaveAs", 
    $sig.make(0xAB73, null, [
        $.String, $asm08.TypeRef("System.Configuration.ConfigurationSaveMode"), 
        $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SaveConfigSource", 
    $sig.make(0xAB8C, null, [$asm08.TypeRef("System.Configuration.DefinitionUpdate")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_NamespacePresent", 
    $sig.make(0xAB52, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SetRawXml", 
    $sig.make(0xAB69, null, [$asm08.TypeRef("System.Configuration.ConfigurationSection"), $.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "UpdateIndent", 
    $sig.make(0xAB87, $.Int32, [
        $.Int32, $asm08.TypeRef("System.Configuration.XmlUtil"), 
        $asm08.TypeRef("System.Configuration.XmlUtilWriter"), $.Int32
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "UpdateRecords", 
    $sig.make(0xAB7F, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "UseParentResult", 
    $sig.make(0xAB57, $.Object, [
        $.String, $.Object, 
        $asm08.TypeRef("System.Configuration.SectionRecord")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ValidateSectionXml", 
    $sig.make(0xAB6C, null, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "WriteEmptyElement", 
    $sig.make(0xAB7E, $.String, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "WriteNewConfigDeclarations", 
    $sig.make(0xAB81, null, [
        $asm08.TypeRef("System.Configuration.SectionUpdates"), $asm08.TypeRef("System.Configuration.XmlUtilWriter"), 
        $.Int32, $.Int32, 
        $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "WriteNewConfigDefinitions", 
    $sig.make(0xAB84, null, [
        $asm08.TypeRef("System.Configuration.ConfigDefinitionUpdates"), $asm08.TypeRef("System.Configuration.XmlUtilWriter"), 
        $.Int32, $.Int32
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "WriteNewConfigDefinitionsRecursive", 
    $sig.make(0xAB85, $.Boolean, [
        $asm08.TypeRef("System.Configuration.XmlUtilWriter"), $asm08.TypeRef("System.Configuration.SectionUpdates"), 
        $.Int32, $.Int32, 
        $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "WriteSectionUpdate", 
    $sig.make(0xAB8B, null, [
        $asm08.TypeRef("System.Configuration.XmlUtilWriter"), $asm08.TypeRef("System.Configuration.DefinitionUpdate"), 
        $.Int32, $.Int32, 
        $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "WriteUnwrittenConfigDeclarations", 
    $sig.make(0xAB82, null, [
        $asm08.TypeRef("System.Configuration.SectionUpdates"), $asm08.TypeRef("System.Configuration.XmlUtilWriter"), 
        $.Int32, $.Int32, 
        $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "WriteUnwrittenConfigDeclarationsRecursive", 
    $sig.make(0xAB83, null, [
        $asm08.TypeRef("System.Configuration.SectionUpdates"), $asm08.TypeRef("System.Configuration.XmlUtilWriter"), 
        $.Int32, $.Int32, 
        $.Boolean
      ], [])
  );

  $.Field({Static:false, Public:false}, "_sectionGroups", $asm06.TypeRef("System.Collections.Hashtable")); 
  $.Field({Static:false, Public:false}, "_sectionFactories", $asm06.TypeRef("System.Collections.Hashtable")); 
  $.Field({Static:false, Public:false}, "_sectionGroupFactories", $asm06.TypeRef("System.Collections.Hashtable")); 
  $.Field({Static:false, Public:false}, "_removedSections", $asm06.TypeRef("System.Collections.Hashtable")); 
  $.Field({Static:false, Public:false}, "_removedSectionGroups", $asm06.TypeRef("System.Collections.Hashtable")); 
  $.Field({Static:false, Public:false}, "_locationTags", $asm06.TypeRef("System.Collections.Hashtable")); 
  $.Field({Static:false, Public:false}, "_streamInfoUpdates", $asm07.TypeRef("System.Collections.Specialized.HybridDictionary")); 
  $.Field({Static:true , Public:false, ReadOnly:true }, "MgmtClassFlags", $asm08.TypeRef("System.Configuration.SimpleBitVector32")); 
  $.Constant({Static:true , Public:false}, "DEFAULT_INDENT", 4); 
  $.Constant({Static:true , Public:false}, "MAX_INDENT", 10); 
  $.Method({Static:true , Public:false}, ".cctor", 
    $sig.make(0x2AA4E, null, [], []), 
    function MgmtConfigurationRecord__cctor () {
      $thisType.MgmtClassFlags = new $asm08.System.Configuration.SimpleBitVector32();
    }
  );

  $.Property({Static:false, Public:false}, "MgmtParent", $.Type);

  $.Property({Static:false, Public:false}, "UpdateConfigHost", $asm08.TypeRef("System.Configuration.UpdateConfigHost"));

  $.Property({Static:false, Public:false, Virtual:true }, "ClassFlags", $asm08.TypeRef("System.Configuration.SimpleBitVector32"));

  $.Property({Static:false, Public:false}, "SectionGroups", $asm06.TypeRef("System.Collections.Hashtable"));

  $.Property({Static:false, Public:false}, "RemovedSections", $asm06.TypeRef("System.Collections.Hashtable"));

  $.Property({Static:false, Public:false}, "RemovedSectionGroups", $asm06.TypeRef("System.Collections.Hashtable"));

  $.Property({Static:false, Public:false}, "SectionFactories", $asm06.TypeRef("System.Collections.Hashtable"));

  $.Property({Static:false, Public:false}, "SectionGroupFactories", $asm06.TypeRef("System.Collections.Hashtable"));

  $.Property({Static:false, Public:false}, "ConfigurationFilePath", $.String);

  $.Property({Static:false, Public:false}, "HasRemovedSectionsOrGroups", $.Boolean);

  $.Property({Static:false, Public:false}, "HasRemovedSections", $.Boolean);

  $.Property({Static:false, Public:false}, "NamespacePresent", $.Boolean);

  $.Property({Static:false, Public:false}, "NamespaceChangeNeeded", $asm08.TypeRef("System.Configuration.NamespaceChange"));

  $.Property({Static:false, Public:false}, "RecordItselfRequiresUpdates", $.Boolean);

});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationElementCollection"), "System.Configuration.NameValueConfigurationCollection", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25B64, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "Add", 
    $sig.make(0x25B66, null, [$asm08.TypeRef("System.Configuration.NameValueConfigurationElement")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Clear", 
    $sig.make(0x25B6B, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CreateNewElement", 
    $sig.make(0x25B6C, $asm08.TypeRef("System.Configuration.ConfigurationElement"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_AllKeys", 
    $sig.make(0x25B61, $jsilcore.TypeRef("System.Array", [$.String]), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Item", 
    $sig.make(0x25B5E, $asm08.TypeRef("System.Configuration.NameValueConfigurationElement"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Properties", 
    $sig.make(0x25B5D, $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "GetElementKey", 
    $sig.make(0x25B6D, $.Object, [$asm08.TypeRef("System.Configuration.ConfigurationElement")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Remove", 
    $sig.make(0x25B68, null, [$asm08.TypeRef("System.Configuration.NameValueConfigurationElement")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Remove", 
    $sig.make(0x25B6A, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_Item", 
    $sig.make(0x25B5F, null, [$.String, $asm08.TypeRef("System.Configuration.NameValueConfigurationElement")], [])
  );

  $.Field({Static:true , Public:false}, "_properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection")); 
  $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

  $.Property({Static:false, Public:true }, "Item", $asm08.TypeRef("System.Configuration.NameValueConfigurationElement"));

  $.Property({Static:false, Public:true }, "AllKeys", $jsilcore.TypeRef("System.Array", [$.String]));

})
  .Attribute($asm08.TypeRef("System.Configuration.ConfigurationCollectionAttribute"), function () { return [$asm08.TypeRef("System.Configuration.NameValueConfigurationElement")]; })
  .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationElement"), "System.Configuration.NameValueConfigurationElement", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25B9E, null, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25BA5, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Name", 
    $sig.make(0x25B99, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Properties", 
    $sig.make(0x25B98, $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_Value", 
    $sig.make(0x25B9B, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_Value", 
    $sig.make(0x25B9C, null, [$.String], [])
  );

  $.Field({Static:true , Public:false}, "_properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection")); 
  $.Field({Static:true , Public:false, ReadOnly:true }, "_propName", $asm08.TypeRef("System.Configuration.ConfigurationProperty")); 
  $.Field({Static:true , Public:false, ReadOnly:true }, "_propValue", $asm08.TypeRef("System.Configuration.ConfigurationProperty")); 
  $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

  $.Property({Static:false, Public:true }, "Name", $.String)
    .Attribute($asm08.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["name"]; });

  $.Property({Static:false, Public:true }, "Value", $.String)
    .Attribute($asm08.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["value"]; });

});

JSIL.MakeEnum(
  "System.Configuration.OverrideMode", true, {
    Inherit: 0, 
    Allow: 1, 
    Deny: 2
  }, false
);

JSIL.MakeStruct($asm06.TypeRef("System.ValueType"), "System.Configuration.OverrideModeSetting", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:true , Public:false}, "CanUseSameLocationTag", 
    $sig.make(0xA7E8, $.Boolean, [$.Type, $.Type], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ChangeModeInternal", 
    $sig.make(0xA7EA, null, [$asm08.TypeRef("System.Configuration.OverrideMode")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "CreateFromXmlReadValue", 
    $sig.make(0xA7E5, $.Type, [$.Boolean], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "CreateFromXmlReadValue", 
    $sig.make(0xA7E6, $.Type, [$asm08.TypeRef("System.Configuration.OverrideMode")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_AllowOverride", 
    $sig.make(0xA7E2, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsDefaultForLocationTag", 
    $sig.make(0xA7DC, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsDefaultForSection", 
    $sig.make(0xA7DB, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsLocked", 
    $sig.make(0xA7DD, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_LocationTagXmlString", 
    $sig.make(0xA7DE, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_OverrideMode", 
    $sig.make(0xA7E0, $asm08.TypeRef("System.Configuration.OverrideMode"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_OverrideModeXmlValue", 
    $sig.make(0xA7DF, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "IsMatchingApiChangedLocationTag", 
    $sig.make(0xA7E9, $.Boolean, [$.Type, $.Type], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "ParseOverrideModeXmlValue", 
    $sig.make(0xA7E7, $asm08.TypeRef("System.Configuration.OverrideMode"), [$.String, $asm08.TypeRef("System.Configuration.XmlUtil")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_AllowOverride", 
    $sig.make(0xA7E3, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_OverrideMode", 
    $sig.make(0xA7E1, null, [$asm08.TypeRef("System.Configuration.OverrideMode")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SetMode", 
    $sig.make(0xA7EB, null, [$asm08.TypeRef("System.Configuration.OverrideMode")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "VerifyConsistentChangeModel", 
    $sig.make(0xA7EC, null, [$.Byte], [])
  );

  $.Field({Static:false, Public:false}, "_mode", $.Byte); 
  $.Field({Static:true , Public:false}, "SectionDefault", $.Type); 
  $.Field({Static:true , Public:false}, "LocationDefault", $.Type); 
  $.Constant({Static:true , Public:false}, "ApiDefinedLegacy", 16); 
  $.Constant({Static:true , Public:false}, "ApiDefinedNewMode", 32); 
  $.Constant({Static:true , Public:false}, "ApiDefinedAny", 48); 
  $.Constant({Static:true , Public:false}, "XmlDefinedLegacy", 64); 
  $.Constant({Static:true , Public:false}, "XmlDefinedNewMode", 128); 
  $.Constant({Static:true , Public:false}, "XmlDefinedAny", 192); 
  $.Constant({Static:true , Public:false}, "ModeMask", 15); 
  $.Method({Static:true , Public:false}, ".cctor", 
    $sig.make(0x2AA4F, null, [], []), 
    function OverrideModeSetting__cctor () {
      $thisType.SectionDefault = new $thisType();
      $thisType.LocationDefault = new $thisType();
    }
  );

  $.Property({Static:false, Public:false}, "IsDefaultForSection", $.Boolean);

  $.Property({Static:false, Public:false}, "IsDefaultForLocationTag", $.Boolean);

  $.Property({Static:false, Public:false}, "IsLocked", $.Boolean);

  $.Property({Static:false, Public:false}, "LocationTagXmlString", $.String);

  $.Property({Static:false, Public:false}, "OverrideModeXmlValue", $.String);

  $.Property({Static:false, Public:false}, "OverrideMode", $asm08.TypeRef("System.Configuration.OverrideMode"));

  $.Property({Static:false, Public:false}, "AllowOverride", $.Boolean);

});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"), "System.Configuration.PositiveTimeSpanValidator", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25BCD, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "CanValidate", 
    $sig.make(0x25BCB, $.Boolean, [$asm06.TypeRef("System.Type")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Validate", 
    $sig.make(0x25BCC, null, [$.Object], [])
  );

});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationValidatorAttribute"), "System.Configuration.PositiveTimeSpanValidatorAttribute", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25BD5, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_ValidatorInstance", 
    $sig.make(0x25BD4, $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"), [], [])
  );

  $.Property({Static:false, Public:true , Virtual:true }, "ValidatorInstance", $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"));

})
  .Attribute($asm06.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm06.System.AttributeTargets.Property]; });

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.PropertyInformation", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xB505, null, [$asm08.TypeRef("System.Configuration.ConfigurationElement"), $.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Converter", 
    $sig.make(0xB503, $asm07.TypeRef("System.ComponentModel.TypeConverter"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_DefaultValue", 
    $sig.make(0xB4F9, $.Object, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Description", 
    $sig.make(0xB504, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsKey", 
    $sig.make(0xB4FC, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsLocked", 
    $sig.make(0xB4FE, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsModified", 
    $sig.make(0xB4FB, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsRequired", 
    $sig.make(0xB4FD, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_LineNumber", 
    $sig.make(0xB500, $.Int32, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Name", 
    $sig.make(0xB4F5, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "get_Prop", 
    $sig.make(0xB4F4, $asm08.TypeRef("System.Configuration.ConfigurationProperty"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ProvidedName", 
    $sig.make(0xB4F6, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Source", 
    $sig.make(0xB4FF, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Type", 
    $sig.make(0xB501, $asm06.TypeRef("System.Type"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Validator", 
    $sig.make(0xB502, $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Value", 
    $sig.make(0xB4F7, $.Object, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_ValueOrigin", 
    $sig.make(0xB4FA, $asm08.TypeRef("System.Configuration.PropertyValueOrigin"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_Value", 
    $sig.make(0xB4F8, null, [$.Object], [])
  );

  $.Field({Static:false, Public:false}, "ThisElement", $asm08.TypeRef("System.Configuration.ConfigurationElement")); 
  $.Field({Static:false, Public:false}, "PropertyName", $.String); 
  $.Field({Static:false, Public:false}, "_Prop", $asm08.TypeRef("System.Configuration.ConfigurationProperty")); 
  $.Constant({Static:true , Public:false}, "LockAll", "*"); 
  $.Property({Static:false, Public:false}, "Prop", $asm08.TypeRef("System.Configuration.ConfigurationProperty"));

  $.Property({Static:false, Public:true }, "Name", $.String);

  $.Property({Static:false, Public:false}, "ProvidedName", $.String);

  $.Property({Static:false, Public:true }, "Value", $.Object);

  $.Property({Static:false, Public:true }, "DefaultValue", $.Object);

  $.Property({Static:false, Public:true }, "ValueOrigin", $asm08.TypeRef("System.Configuration.PropertyValueOrigin"));

  $.Property({Static:false, Public:true }, "IsModified", $.Boolean);

  $.Property({Static:false, Public:true }, "IsKey", $.Boolean);

  $.Property({Static:false, Public:true }, "IsRequired", $.Boolean);

  $.Property({Static:false, Public:true }, "IsLocked", $.Boolean);

  $.Property({Static:false, Public:true }, "Source", $.String);

  $.Property({Static:false, Public:true }, "LineNumber", $.Int32);

  $.Property({Static:false, Public:true }, "Type", $asm06.TypeRef("System.Type"));

  $.Property({Static:false, Public:true }, "Validator", $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"));

  $.Property({Static:false, Public:true }, "Converter", $asm07.TypeRef("System.ComponentModel.TypeConverter"));

  $.Property({Static:false, Public:true }, "Description", $.String);

});

JSIL.MakeClass($asm07.TypeRef("System.Collections.Specialized.NameObjectCollectionBase"), "System.Configuration.PropertyInformationCollection", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xACC6, null, [$asm08.TypeRef("System.Configuration.ConfigurationElement")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CopyTo", 
    $sig.make(0xACC4, null, [$jsilcore.TypeRef("System.Array", [$asm08.TypeRef("System.Configuration.PropertyInformation")]), $.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Item", 
    $sig.make(0xACC1, $asm08.TypeRef("System.Configuration.PropertyInformation"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Item", 
    $sig.make(0xACC2, $asm08.TypeRef("System.Configuration.PropertyInformation"), [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
    $sig.make(0xACC5, $asm06.TypeRef("System.Collections.IEnumerator"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetObjectData", 
    $sig.make(0xACC3, null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")], [])
  );

  $.Field({Static:false, Public:false}, "ThisElement", $asm08.TypeRef("System.Configuration.ConfigurationElement")); 
  $.Property({Static:false, Public:true }, "Item", $asm08.TypeRef("System.Configuration.PropertyInformation"));

  $.Property({Static:false, Public:false}, "Item", $asm08.TypeRef("System.Configuration.PropertyInformation"));

})
  .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.PropertyInformationCollection/<GetEnumerator>d__0", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25D82, null, [$.Int32], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

  $.ExternalMethod({Static:false, Public:false}, "IEnumerator.MoveNext", 
    $sig.make(0x25D7E, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IEnumerator`1.get_Current", 
    $sig.make(0x25D78, $.Object, [], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

  $.ExternalMethod({Static:false, Public:false}, "IEnumerator.get_Current", 
    $sig.make(0x25D7C, $.Object, [], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

  $.ExternalMethod({Static:false, Public:false}, "IEnumerator.Reset", 
    $sig.make(0x25D80, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

  $.ExternalMethod({Static:false, Public:false}, "IDisposable.Dispose", 
    $sig.make(0x25D81, null, [], [])
  );

  $.Field({Static:false, Public:false}, "$current", $.Object); 
  $.Field({Static:false, Public:false}, "$state", $.Int32); 
  $.Field({Static:false, Public:true }, "$this", $asm08.TypeRef("System.Configuration.PropertyInformationCollection")); 
  $.Field({Static:false, Public:true }, "c", $.Int32); 
  $.Field({Static:false, Public:true }, "i", $.Int32); 
  $.Property({Static:false, Public:false, Virtual:true }, "IEnumerator`1.Current", $.Object);

  $.Property({Static:false, Public:false, Virtual:true }, "IEnumerator.Current", $.Object);

  $.ImplementInterfaces(
      $asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$.Object]), $asm06.TypeRef("System.Collections.IEnumerator"), 
      $asm06.TypeRef("System.IDisposable")
  )
})
  .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

JSIL.MakeEnum(
  "System.Configuration.PropertyValueOrigin", true, {
    Default: 0, 
    Inherited: 1, 
    SetHere: 2
  }, false
);

JSIL.MakeStaticClass("System.Configuration.ProtectedConfiguration", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:true , Public:true }, "get_DefaultProvider", 
    $sig.make(0x25A95, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:true }, "get_Providers", 
    $sig.make(0x25A94, $asm08.TypeRef("System.Configuration.ProtectedConfigurationProviderCollection"), [], [])
  );

  $.Constant({Static:true , Public:true }, "RsaProviderName", "RsaProtectedConfigurationProvider"); 
  $.Constant({Static:true , Public:true }, "DataProtectionProviderName", "DataProtectionConfigurationProvider"); 
  $.Constant({Static:true , Public:true }, "ProtectedDataSectionName", "configProtectedData"); 
  $.Property({Static:true , Public:true }, "Providers", $asm08.TypeRef("System.Configuration.ProtectedConfigurationProviderCollection"));

  $.Property({Static:true , Public:true }, "DefaultProvider", $.String);

});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.Provider.ProviderCollection", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0xAEF4, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Add", 
    $sig.make(0xAEF5, null, [$asm08.TypeRef("System.Configuration.Provider.ProviderBase")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Clear", 
    $sig.make(0xAEF9, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CopyTo", 
    $sig.make(0xAEFA, null, [$jsilcore.TypeRef("System.Array", [$asm08.TypeRef("System.Configuration.Provider.ProviderBase")]), $.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Count", 
    $sig.make(0xAEF1, $.Int32, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsSynchronized", 
    $sig.make(0xAEF2, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Item", 
    $sig.make(0xAEF0, $asm08.TypeRef("System.Configuration.Provider.ProviderBase"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_SyncRoot", 
    $sig.make(0xAEF3, $.Object, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
    $sig.make(0xAEF7, $asm06.TypeRef("System.Collections.IEnumerator"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Remove", 
    $sig.make(0xAEF6, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "SetReadOnly", 
    $sig.make(0xAEF8, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ICollection.CopyTo", 
    $sig.make(0xAEFB, null, [$asm06.TypeRef("System.Array"), $.Int32], [])
  );

  $.Field({Static:false, Public:false}, "_Hashtable", $asm06.TypeRef("System.Collections.Hashtable")); 
  $.Field({Static:false, Public:false}, "_ReadOnly", $.Boolean); 
  $.Property({Static:false, Public:true }, "Item", $asm08.TypeRef("System.Configuration.Provider.ProviderBase"));

  $.Property({Static:false, Public:true , Virtual:true }, "Count", $.Int32);

  $.Property({Static:false, Public:true , Virtual:true }, "IsSynchronized", $.Boolean);

  $.Property({Static:false, Public:true , Virtual:true }, "SyncRoot", $.Object);

  $.ImplementInterfaces($asm06.TypeRef("System.Collections.ICollection"), $asm06.TypeRef("System.Collections.IEnumerable"))
})
  .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

JSIL.MakeClass($asm08.TypeRef("System.Configuration.Provider.ProviderCollection"), "System.Configuration.ProtectedConfigurationProviderCollection", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0xAF04, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "Add", 
    $sig.make(0xAF03, null, [$asm08.TypeRef("System.Configuration.Provider.ProviderBase")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Item", 
    $sig.make(0xAF02, $asm08.TypeRef("System.Configuration.ProtectedConfigurationProvider"), [$.String], [])
  );

  $.Property({Static:false, Public:true }, "Item", $asm08.TypeRef("System.Configuration.ProtectedConfigurationProvider"));

})
  .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationSection"), "System.Configuration.ProtectedConfigurationSection", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0xA4FE, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "CreateAndInitializeProviderWithAssert", 
    $sig.make(0xA501, $asm08.TypeRef("System.Configuration.ProtectedConfigurationProvider"), [$asm06.TypeRef("System.Type"), $asm08.TypeRef("System.Configuration.ProviderSettings")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "DecryptSection", 
    $sig.make(0xA503, $.String, [$.String, $asm08.TypeRef("System.Configuration.ProtectedConfigurationProvider")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "EncryptSection", 
    $sig.make(0xA505, $.String, [$.String, $asm08.TypeRef("System.Configuration.ProtectedConfigurationProvider")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "FormatEncryptedSection", 
    $sig.make(0xA504, $.String, [
        $.String, $.String, 
        $.String
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get__Providers", 
    $sig.make(0xA4FA, $asm08.TypeRef("System.Configuration.ProtectedProviderSettings"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_DefaultProvider", 
    $sig.make(0xA4FC, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Properties", 
    $sig.make(0xA4F9, $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_Providers", 
    $sig.make(0xA4FB, $asm08.TypeRef("System.Configuration.ProviderSettingsCollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetAllProviders", 
    $sig.make(0xA500, $asm08.TypeRef("System.Configuration.ProtectedConfigurationProviderCollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetProviderFromName", 
    $sig.make(0xA4FF, $asm08.TypeRef("System.Configuration.ProtectedConfigurationProvider"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "InstantiateProvider", 
    $sig.make(0xA502, $asm08.TypeRef("System.Configuration.ProtectedConfigurationProvider"), [$asm08.TypeRef("System.Configuration.ProviderSettings")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_DefaultProvider", 
    $sig.make(0xA4FD, null, [$.String], [])
  );

  $.Field({Static:true , Public:false}, "_properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection")); 
  $.Field({Static:true , Public:false, ReadOnly:true }, "_propProviders", $asm08.TypeRef("System.Configuration.ConfigurationProperty")); 
  $.Field({Static:true , Public:false, ReadOnly:true }, "_propDefaultProvider", $asm08.TypeRef("System.Configuration.ConfigurationProperty")); 
  $.Constant({Static:true , Public:false}, "EncryptedSectionTemplate", "<{0} {1}=\"{2}\"> {3} </{0}>"); 
  $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

  $.Property({Static:false, Public:false}, "_Providers", $asm08.TypeRef("System.Configuration.ProtectedProviderSettings"));

  $.Property({Static:false, Public:true }, "Providers", $asm08.TypeRef("System.Configuration.ProviderSettingsCollection"))
    .Attribute($asm08.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["providers"]; });

  $.Property({Static:false, Public:true }, "DefaultProvider", $.String)
    .Attribute($asm08.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["defaultProvider"]; });

});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationElement"), "System.Configuration.ProtectedProviderSettings", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0xAED8, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Properties", 
    $sig.make(0xAED6, $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_Providers", 
    $sig.make(0xAED7, $asm08.TypeRef("System.Configuration.ProviderSettingsCollection"), [], [])
  );

  $.Field({Static:false, Public:false}, "_properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection")); 
  $.Field({Static:false, Public:false, ReadOnly:true }, "_propProviders", $asm08.TypeRef("System.Configuration.ConfigurationProperty")); 
  $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

  $.Property({Static:false, Public:true }, "Providers", $asm08.TypeRef("System.Configuration.ProviderSettingsCollection"))
    .Attribute($asm08.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return [""]; });

});

JSIL.MakeClass($asm06.TypeRef("System.Exception"), "System.Configuration.Provider.ProviderException", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25AAE, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25AB0, null, [$.String], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25AB1, null, [$.String, $asm06.TypeRef("System.Exception")], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25AB2, null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationElement"), "System.Configuration.ProviderSettings", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0xAEC7, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0xAEC8, null, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Name", 
    $sig.make(0xAEC2, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Parameters", 
    $sig.make(0xAEC6, $asm07.TypeRef("System.Collections.Specialized.NameValueCollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Properties", 
    $sig.make(0xAEC1, $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Type", 
    $sig.make(0xAEC4, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetProperty", 
    $sig.make(0xAECE, $.String, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IsModified", 
    $sig.make(0xAECB, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnDeserializeUnrecognizedAttribute", 
    $sig.make(0xAECC, $.Boolean, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Reset", 
    $sig.make(0xAECA, null, [$asm08.TypeRef("System.Configuration.ConfigurationElement")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_Name", 
    $sig.make(0xAEC3, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_Type", 
    $sig.make(0xAEC5, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SetProperty", 
    $sig.make(0xAECF, $.Boolean, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Unmerge", 
    $sig.make(0xAEC9, null, [
        $asm08.TypeRef("System.Configuration.ConfigurationElement"), $asm08.TypeRef("System.Configuration.ConfigurationElement"), 
        $asm08.TypeRef("System.Configuration.ConfigurationSaveMode")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "UpdatePropertyCollection", 
    $sig.make(0xAECD, $.Boolean, [], [])
  );

  $.Field({Static:false, Public:false, ReadOnly:true }, "_propName", $asm08.TypeRef("System.Configuration.ConfigurationProperty")); 
  $.Field({Static:false, Public:false, ReadOnly:true }, "_propType", $asm08.TypeRef("System.Configuration.ConfigurationProperty")); 
  $.Field({Static:false, Public:false}, "_properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection")); 
  $.Field({Static:false, Public:false}, "_PropertyNameCollection", $asm07.TypeRef("System.Collections.Specialized.NameValueCollection")); 
  $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

  $.Property({Static:false, Public:true }, "Name", $.String)
    .Attribute($asm08.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["name"]; });

  $.Property({Static:false, Public:true }, "Type", $.String)
    .Attribute($asm08.TypeRef("System.Configuration.ConfigurationPropertyAttribute"), function () { return ["type"]; });

  $.Property({Static:false, Public:true }, "Parameters", $asm07.TypeRef("System.Collections.Specialized.NameValueCollection"));

});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationElementCollection"), "System.Configuration.ProviderSettingsCollection", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0xAEE3, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Add", 
    $sig.make(0xAEE4, null, [$asm08.TypeRef("System.Configuration.ProviderSettings")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Clear", 
    $sig.make(0xAEE6, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CreateNewElement", 
    $sig.make(0xAEE7, $asm08.TypeRef("System.Configuration.ConfigurationElement"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Item", 
    $sig.make(0xAEE0, $asm08.TypeRef("System.Configuration.ProviderSettings"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Item", 
    $sig.make(0xAEE1, $asm08.TypeRef("System.Configuration.ProviderSettings"), [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Properties", 
    $sig.make(0xAEDF, $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "GetElementKey", 
    $sig.make(0xAEE8, $.Object, [$asm08.TypeRef("System.Configuration.ConfigurationElement")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Remove", 
    $sig.make(0xAEE5, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_Item", 
    $sig.make(0xAEE2, null, [$.Int32, $asm08.TypeRef("System.Configuration.ProviderSettings")], [])
  );

  $.Field({Static:true , Public:false}, "_properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection")); 
  $.Property({Static:false, Public:false, Virtual:true }, "Properties", $asm08.TypeRef("System.Configuration.ConfigurationPropertyCollection"));

  $.Property({Static:false, Public:true }, "Item", $asm08.TypeRef("System.Configuration.ProviderSettings"));

  $.Property({Static:false, Public:true }, "Item", $asm08.TypeRef("System.Configuration.ProviderSettings"));

})
  .Attribute($asm08.TypeRef("System.Configuration.ConfigurationCollectionAttribute"), function () { return [$asm08.TypeRef("System.Configuration.ProviderSettings")]; })
  .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"), "System.Configuration.RegexStringValidator", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25BD6, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CanValidate", 
    $sig.make(0x25BD8, $.Boolean, [$asm06.TypeRef("System.Type")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Validate", 
    $sig.make(0x25BE0, null, [$.Object], [])
  );

  $.Field({Static:false, Public:false}, "_expression", $.String); 
  $.Field({Static:false, Public:false}, "_regex", $asm07.TypeRef("System.Text.RegularExpressions.Regex")); 
});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationValidatorAttribute"), "System.Configuration.RegexStringValidatorAttribute", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25C19, null, [$.String], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_Regex", 
    $sig.make(0x25C18, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_ValidatorInstance", 
    $sig.make(0x25C16, $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"), [], [])
  );

  $.Field({Static:false, Public:false}, "_regex", $.String); 
  $.Property({Static:false, Public:true , Virtual:true }, "ValidatorInstance", $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"));

  $.Property({Static:false, Public:true }, "Regex", $.String);

})
  .Attribute($asm06.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm06.System.AttributeTargets.Property]; });

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ProtectedConfigurationProvider"), "System.Configuration.RsaProtectedConfigurationProvider", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25CF9, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "AddKey", 
    $sig.make(0x25CF4, null, [$.Int32, $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Decrypt", 
    $sig.make(0x25CF2, $asm0E.TypeRef("System.Xml.XmlNode"), [$asm0E.TypeRef("System.Xml.XmlNode")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "DeleteKey", 
    $sig.make(0x25CF5, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Encrypt", 
    $sig.make(0x25CF3, $asm0E.TypeRef("System.Xml.XmlNode"), [$asm0E.TypeRef("System.Xml.XmlNode")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "ExportKey", 
    $sig.make(0x25CF7, null, [$.String, $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_CspProviderName", 
    $sig.make(0x25CED, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_KeyContainerName", 
    $sig.make(0x25CEB, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_RsaPublicKey", 
    $sig.make(0x25CF1, $asm06.TypeRef("System.Security.Cryptography.RSAParameters"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_UseMachineContainer", 
    $sig.make(0x25CEF, $.Boolean, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_UseOAEP", 
    $sig.make(0x25CF0, $.Boolean, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:true , Public:false}, "GetBooleanValue", 
    $sig.make(0x25CFD, $.Boolean, [
        $asm07.TypeRef("System.Collections.Specialized.NameValueCollection"), $.String, 
        $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetCryptoServiceProvider", 
    $sig.make(0x25CFA, $asm06.TypeRef("System.Security.Cryptography.RSACryptoServiceProvider"), [$.Boolean, $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetRandomKey", 
    $sig.make(0x25CFB, $jsilcore.TypeRef("System.Array", [$.Byte]), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "ImportKey", 
    $sig.make(0x25CF6, null, [$.String, $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Initialize", 
    $sig.make(0x25CF8, null, [$.String, $asm07.TypeRef("System.Collections.Specialized.NameValueCollection")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ThrowBetterException", 
    $sig.make(0x25CFC, null, [$.Boolean], [])
  );

  $.Field({Static:false, Public:false}, "_KeyName", $.String); 
  $.Field({Static:false, Public:false}, "_KeyContainerName", $.String); 
  $.Field({Static:false, Public:false}, "_CspProviderName", $.String); 
  $.Field({Static:false, Public:false}, "_UseMachineContainer", $.Boolean); 
  $.Field({Static:false, Public:false}, "_UseOAEP", $.Boolean); 
  $.Constant({Static:true , Public:false}, "DefaultRsaKeyContainerName", "NetFrameworkConfigurationKey"); 
  $.Constant({Static:true , Public:false}, "PROV_Rsa_FULL", 1); 
  $.Constant({Static:true , Public:false}, "CRYPT_MACHINE_KEYSET", 32); 
  $.Property({Static:false, Public:true }, "KeyContainerName", $.String);

  $.Property({Static:false, Public:true }, "CspProviderName", $.String);

  $.Property({Static:false, Public:true }, "UseMachineContainer", $.Boolean);

  $.Property({Static:false, Public:true }, "UseOAEP", $.Boolean);

  $.Property({Static:false, Public:true }, "RsaPublicKey", $asm06.TypeRef("System.Security.Cryptography.RSAParameters"));

});

JSIL.MakeStruct($asm06.TypeRef("System.ValueType"), "System.Configuration.SafeBitVector32", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xA50F, null, [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Item", 
    $sig.make(0xA50D, $.Boolean, [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_Item", 
    $sig.make(0xA50E, null, [$.Int32, $.Boolean], [])
  );

  $.Field({Static:false, Public:false}, "_data", $asm06.TypeRef("System.Int32")); 
  $.Property({Static:false, Public:false}, "Item", $.Boolean);

})
  .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.SectionInformation", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xAEAE, null, [$asm08.TypeRef("System.Configuration.ConfigurationSection")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AttachToConfigurationRecord", 
    $sig.make(0xAEB1, null, [
        $asm08.TypeRef("System.Configuration.MgmtConfigurationRecord"), $asm08.TypeRef("System.Configuration.FactoryRecord"), 
        $asm08.TypeRef("System.Configuration.SectionRecord")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "DetachFromConfigurationRecord", 
    $sig.make(0xAEB3, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "FindParentFactoryRecord", 
    $sig.make(0xAEBA, $asm08.TypeRef("System.Configuration.FactoryRecord"), [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "ForceDeclaration", 
    $sig.make(0xAEA6, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "ForceDeclaration", 
    $sig.make(0xAEA7, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_AllowDefinition", 
    $sig.make(0xAE78, $asm08.TypeRef("System.Configuration.ConfigurationAllowDefinition"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "get_AllowDefinitionModified", 
    $sig.make(0xAE7A, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_AllowExeDefinition", 
    $sig.make(0xAE7B, $asm08.TypeRef("System.Configuration.ConfigurationAllowExeDefinition"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "get_AllowExeDefinitionModified", 
    $sig.make(0xAE7D, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_AllowLocation", 
    $sig.make(0xAE82, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_AllowLocationModified", 
    $sig.make(0xAE84, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_AllowOverride", 
    $sig.make(0xAE85, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Attached", 
    $sig.make(0xAE72, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ConfigKey", 
    $sig.make(0xAE73, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_ConfigSource", 
    $sig.make(0xAE8C, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ConfigSourceModified", 
    $sig.make(0xAE8E, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ConfigSourceStreamName", 
    $sig.make(0xAE8F, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_ForceSave", 
    $sig.make(0xAEA4, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_InheritInChildApplications", 
    $sig.make(0xAE91, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsDeclarationRequired", 
    $sig.make(0xAE94, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsDeclared", 
    $sig.make(0xAE93, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsDefinitionAllowed", 
    $sig.make(0xAE95, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsLocked", 
    $sig.make(0xAE96, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsProtected", 
    $sig.make(0xAE97, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsRuntime", 
    $sig.make(0xAE71, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_LocationAttributesAreDefault", 
    $sig.make(0xAE8B, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Name", 
    $sig.make(0xAE77, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_OverrideMode", 
    $sig.make(0xAE87, $asm08.TypeRef("System.Configuration.OverrideMode"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_OverrideModeDefault", 
    $sig.make(0xAE7E, $asm08.TypeRef("System.Configuration.OverrideMode"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_OverrideModeDefaultModified", 
    $sig.make(0xAE81, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_OverrideModeDefaultSetting", 
    $sig.make(0xAE80, $asm08.TypeRef("System.Configuration.OverrideModeSetting"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_OverrideModeEffective", 
    $sig.make(0xAE89, $asm08.TypeRef("System.Configuration.OverrideMode"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_OverrideModeSetting", 
    $sig.make(0xAE8A, $asm08.TypeRef("System.Configuration.OverrideModeSetting"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_ProtectionProvider", 
    $sig.make(0xAE98, $asm08.TypeRef("System.Configuration.ProtectedConfigurationProvider"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ProtectionProviderName", 
    $sig.make(0xAE99, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_RawXml", 
    $sig.make(0xAEA2, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Removed", 
    $sig.make(0xAE74, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_RequirePermission", 
    $sig.make(0xAE9D, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_RequirePermissionModified", 
    $sig.make(0xAE9F, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_RestartOnExternalChanges", 
    $sig.make(0xAE9A, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_RestartOnExternalChangesModified", 
    $sig.make(0xAE9C, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_SectionName", 
    $sig.make(0xAE76, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_Type", 
    $sig.make(0xAEA0, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "GetParentSection", 
    $sig.make(0xAEAA, $asm08.TypeRef("System.Configuration.ConfigurationSection"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetRawXml", 
    $sig.make(0xAEAB, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IsModifiedFlags", 
    $sig.make(0xAEB0, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "ProtectSection", 
    $sig.make(0xAEA8, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ResetModifiedFlags", 
    $sig.make(0xAEAF, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "RevertToParent", 
    $sig.make(0xAEAD, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_AllowDefinition", 
    $sig.make(0xAE79, null, [$asm08.TypeRef("System.Configuration.ConfigurationAllowDefinition")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_AllowExeDefinition", 
    $sig.make(0xAE7C, null, [$asm08.TypeRef("System.Configuration.ConfigurationAllowExeDefinition")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_AllowLocation", 
    $sig.make(0xAE83, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_AllowOverride", 
    $sig.make(0xAE86, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_ConfigSource", 
    $sig.make(0xAE8D, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_ConfigSourceStreamName", 
    $sig.make(0xAE90, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_ForceSave", 
    $sig.make(0xAEA5, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_InheritInChildApplications", 
    $sig.make(0xAE92, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_OverrideMode", 
    $sig.make(0xAE88, null, [$asm08.TypeRef("System.Configuration.OverrideMode")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_OverrideModeDefault", 
    $sig.make(0xAE7F, null, [$asm08.TypeRef("System.Configuration.OverrideMode")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_RawXml", 
    $sig.make(0xAEA3, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_Removed", 
    $sig.make(0xAE75, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_RequirePermission", 
    $sig.make(0xAE9E, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_RestartOnExternalChanges", 
    $sig.make(0xAE9B, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_Type", 
    $sig.make(0xAEA1, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "SetRawXml", 
    $sig.make(0xAEAC, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SetRuntimeConfigurationInformation", 
    $sig.make(0xAEB2, null, [
        $asm08.TypeRef("System.Configuration.BaseConfigurationRecord"), $asm08.TypeRef("System.Configuration.FactoryRecord"), 
        $asm08.TypeRef("System.Configuration.SectionRecord")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "UnprotectSection", 
    $sig.make(0xAEA9, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "VerifyDesigntime", 
    $sig.make(0xAEB4, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "VerifyIsAttachedToConfigRecord", 
    $sig.make(0xAEB5, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "VerifyIsEditable", 
    $sig.make(0xAEB6, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "VerifyIsEditableFactory", 
    $sig.make(0xAEB9, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "VerifyNotParentSection", 
    $sig.make(0xAEB7, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "VerifySupportsLocation", 
    $sig.make(0xAEB8, null, [], [])
  );

  $.Field({Static:false, Public:false}, "_configurationSection", $asm08.TypeRef("System.Configuration.ConfigurationSection")); 
  $.Field({Static:false, Public:false}, "_flags", $asm08.TypeRef("System.Configuration.SafeBitVector32")); 
  $.Field({Static:false, Public:false}, "_modifiedFlags", $asm08.TypeRef("System.Configuration.SimpleBitVector32")); 
  $.Field({Static:false, Public:false}, "_allowDefinition", $asm08.TypeRef("System.Configuration.ConfigurationAllowDefinition")); 
  $.Field({Static:false, Public:false}, "_allowExeDefinition", $asm08.TypeRef("System.Configuration.ConfigurationAllowExeDefinition")); 
  $.Field({Static:false, Public:false}, "_configRecord", $asm08.TypeRef("System.Configuration.MgmtConfigurationRecord")); 
  $.Field({Static:false, Public:false}, "_configKey", $.String); 
  $.Field({Static:false, Public:false}, "_group", $.String); 
  $.Field({Static:false, Public:false}, "_name", $.String); 
  $.Field({Static:false, Public:false}, "_typeName", $.String); 
  $.Field({Static:false, Public:false}, "_rawXml", $.String); 
  $.Field({Static:false, Public:false}, "_configSource", $.String); 
  $.Field({Static:false, Public:false}, "_configSourceStreamName", $.String); 
  $.Field({Static:false, Public:false}, "_protectionProvider", $asm08.TypeRef("System.Configuration.ProtectedConfigurationProvider")); 
  $.Field({Static:false, Public:false}, "_protectionProviderName", $.String); 
  $.Field({Static:false, Public:false}, "_overrideModeDefault", $asm08.TypeRef("System.Configuration.OverrideModeSetting")); 
  $.Field({Static:false, Public:false}, "_overrideMode", $asm08.TypeRef("System.Configuration.OverrideModeSetting")); 
  $.Constant({Static:true , Public:false}, "Flag_Attached", 1); 
  $.Constant({Static:true , Public:false}, "Flag_Declared", 2); 
  $.Constant({Static:true , Public:false}, "Flag_DeclarationRequired", 4); 
  $.Constant({Static:true , Public:false}, "Flag_AllowLocation", 8); 
  $.Constant({Static:true , Public:false}, "Flag_RestartOnExternalChanges", 16); 
  $.Constant({Static:true , Public:false}, "Flag_RequirePermission", 32); 
  $.Constant({Static:true , Public:false}, "Flag_LocationLocked", 64); 
  $.Constant({Static:true , Public:false}, "Flag_ChildrenLocked", 128); 
  $.Constant({Static:true , Public:false}, "Flag_InheritInChildApps", 256); 
  $.Constant({Static:true , Public:false}, "Flag_IsParentSection", 512); 
  $.Constant({Static:true , Public:false}, "Flag_Removed", 1024); 
  $.Constant({Static:true , Public:false}, "Flag_ProtectionProviderDetermined", 2048); 
  $.Constant({Static:true , Public:false}, "Flag_ForceSave", 4096); 
  $.Constant({Static:true , Public:false}, "Flag_IsUndeclared", 8192); 
  $.Constant({Static:true , Public:false}, "Flag_ChildrenLockWithoutFileInput", 16384); 
  $.Constant({Static:true , Public:false}, "Flag_AllowExeDefinitionModified", 65536); 
  $.Constant({Static:true , Public:false}, "Flag_AllowDefinitionModified", 131072); 
  $.Constant({Static:true , Public:false}, "Flag_ConfigSourceModified", 262144); 
  $.Constant({Static:true , Public:false}, "Flag_ProtectionProviderModified", 524288); 
  $.Constant({Static:true , Public:false}, "Flag_OverrideModeDefaultModified", 1048576); 
  $.Constant({Static:true , Public:false}, "Flag_OverrideModeModified", 2097152); 
  $.Property({Static:false, Public:false}, "IsRuntime", $.Boolean);

  $.Property({Static:false, Public:false}, "Attached", $.Boolean);

  $.Property({Static:false, Public:false}, "ConfigKey", $.String);

  $.Property({Static:false, Public:false}, "Removed", $.Boolean);

  $.Property({Static:false, Public:true }, "SectionName", $.String);

  $.Property({Static:false, Public:true }, "Name", $.String);

  $.Property({Static:false, Public:true }, "AllowDefinition", $asm08.TypeRef("System.Configuration.ConfigurationAllowDefinition"));

  $.Property({Static:false, Public:false}, "AllowDefinitionModified", $.Boolean);

  $.Property({Static:false, Public:true }, "AllowExeDefinition", $asm08.TypeRef("System.Configuration.ConfigurationAllowExeDefinition"));

  $.Property({Static:false, Public:false}, "AllowExeDefinitionModified", $.Boolean);

  $.Property({Static:false, Public:true }, "OverrideModeDefault", $asm08.TypeRef("System.Configuration.OverrideMode"));

  $.Property({Static:false, Public:false}, "OverrideModeDefaultSetting", $asm08.TypeRef("System.Configuration.OverrideModeSetting"));

  $.Property({Static:false, Public:false}, "OverrideModeDefaultModified", $.Boolean);

  $.Property({Static:false, Public:true }, "AllowLocation", $.Boolean);

  $.Property({Static:false, Public:false}, "AllowLocationModified", $.Boolean);

  $.Property({Static:false, Public:true }, "AllowOverride", $.Boolean);

  $.Property({Static:false, Public:true }, "OverrideMode", $asm08.TypeRef("System.Configuration.OverrideMode"));

  $.Property({Static:false, Public:true }, "OverrideModeEffective", $asm08.TypeRef("System.Configuration.OverrideMode"));

  $.Property({Static:false, Public:false}, "OverrideModeSetting", $asm08.TypeRef("System.Configuration.OverrideModeSetting"));

  $.Property({Static:false, Public:false}, "LocationAttributesAreDefault", $.Boolean);

  $.Property({Static:false, Public:true }, "ConfigSource", $.String);

  $.Property({Static:false, Public:false}, "ConfigSourceModified", $.Boolean);

  $.Property({Static:false, Public:false}, "ConfigSourceStreamName", $.String);

  $.Property({Static:false, Public:true }, "InheritInChildApplications", $.Boolean);

  $.Property({Static:false, Public:true }, "IsDeclared", $.Boolean);

  $.Property({Static:false, Public:true }, "IsDeclarationRequired", $.Boolean);

  $.Property({Static:false, Public:false}, "IsDefinitionAllowed", $.Boolean);

  $.Property({Static:false, Public:true }, "IsLocked", $.Boolean);

  $.Property({Static:false, Public:true }, "IsProtected", $.Boolean);

  $.Property({Static:false, Public:true }, "ProtectionProvider", $asm08.TypeRef("System.Configuration.ProtectedConfigurationProvider"));

  $.Property({Static:false, Public:false}, "ProtectionProviderName", $.String);

  $.Property({Static:false, Public:true }, "RestartOnExternalChanges", $.Boolean);

  $.Property({Static:false, Public:false}, "RestartOnExternalChangesModified", $.Boolean);

  $.Property({Static:false, Public:true }, "RequirePermission", $.Boolean);

  $.Property({Static:false, Public:false}, "RequirePermissionModified", $.Boolean);

  $.Property({Static:false, Public:true }, "Type", $.String);

  $.Property({Static:false, Public:false}, "RawXml", $.String);

  $.Property({Static:false, Public:true }, "ForceSave", $.Boolean);

});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.SectionInput", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xA823, null, [$asm08.TypeRef("System.Configuration.SectionXmlInfo"), $asm06.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ClearResult", 
    $sig.make(0xA824, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Errors", 
    $sig.make(0xA821, $asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")]), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_HasErrors", 
    $sig.make(0xA822, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_HasResult", 
    $sig.make(0xA818, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_HasResultRuntimeObject", 
    $sig.make(0xA819, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsProtectionProviderDetermined", 
    $sig.make(0xA81E, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ProtectionProvider", 
    $sig.make(0xA81F, $asm08.TypeRef("System.Configuration.ProtectedConfigurationProvider"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Result", 
    $sig.make(0xA81A, $.Object, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ResultRuntimeObject", 
    $sig.make(0xA81C, $.Object, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_SectionXmlInfo", 
    $sig.make(0xA817, $asm08.TypeRef("System.Configuration.SectionXmlInfo"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_ProtectionProvider", 
    $sig.make(0xA820, null, [$asm08.TypeRef("System.Configuration.ProtectedConfigurationProvider")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_Result", 
    $sig.make(0xA81B, null, [$.Object], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_ResultRuntimeObject", 
    $sig.make(0xA81D, null, [$.Object], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ThrowOnErrors", 
    $sig.make(0xA825, null, [], [])
  );

  $.Field({Static:true , Public:false}, "s_unevaluated", $.Object); 
  $.Field({Static:false, Public:false}, "_sectionXmlInfo", $asm08.TypeRef("System.Configuration.SectionXmlInfo")); 
  $.Field({Static:false, Public:false}, "_protectionProvider", $asm08.TypeRef("System.Configuration.ProtectedConfigurationProvider")); 
  $.Field({Static:false, Public:false}, "_isProtectionProviderDetermined", $.Boolean); 
  $.Field({Static:false, Public:false}, "_result", $.Object); 
  $.Field({Static:false, Public:false}, "_resultRuntimeObject", $.Object); 
  $.Field({Static:false, Public:false}, "_errors", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")])); 
  $.Property({Static:false, Public:false}, "SectionXmlInfo", $asm08.TypeRef("System.Configuration.SectionXmlInfo"));

  $.Property({Static:false, Public:false}, "HasResult", $.Boolean);

  $.Property({Static:false, Public:false}, "HasResultRuntimeObject", $.Boolean);

  $.Property({Static:false, Public:false}, "Result", $.Object);

  $.Property({Static:false, Public:false}, "ResultRuntimeObject", $.Object);

  $.Property({Static:false, Public:false}, "IsProtectionProviderDetermined", $.Boolean);

  $.Property({Static:false, Public:false}, "ProtectionProvider", $asm08.TypeRef("System.Configuration.ProtectedConfigurationProvider"));

  $.Property({Static:false, Public:false}, "Errors", $asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")]));

  $.Property({Static:false, Public:false}, "HasErrors", $.Boolean);

})
  .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerDisplayAttribute"), function () { return ["SectionInput {_sectionXmlInfo.ConfigKey}"]; });

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.SectionRecord", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xA44C, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AddFileInput", 
    $sig.make(0xA44F, null, [$asm08.TypeRef("System.Configuration.SectionInput")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AddIndirectLocationInput", 
    $sig.make(0xA451, null, [$asm08.TypeRef("System.Configuration.SectionInput")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AddLocationInput", 
    $sig.make(0xA44D, null, [$asm08.TypeRef("System.Configuration.SectionInput")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AddLocationInputImpl", 
    $sig.make(0xA452, null, [$asm08.TypeRef("System.Configuration.SectionInput"), $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ChangeLockSettings", 
    $sig.make(0xA44E, null, [$asm08.TypeRef("System.Configuration.OverrideMode"), $asm08.TypeRef("System.Configuration.OverrideMode")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ClearRawXml", 
    $sig.make(0xA453, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ClearResult", 
    $sig.make(0xA454, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_AddUpdate", 
    $sig.make(0xA432, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ConfigKey", 
    $sig.make(0xA426, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_FileInput", 
    $sig.make(0xA43A, $asm08.TypeRef("System.Configuration.SectionInput"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_HasErrors", 
    $sig.make(0xA44B, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_HasFileInput", 
    $sig.make(0xA438, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_HasIndirectLocationInputs", 
    $sig.make(0xA43C, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_HasInput", 
    $sig.make(0xA444, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_HasLocationInputs", 
    $sig.make(0xA435, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_HasResult", 
    $sig.make(0xA445, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_HasResultRuntimeObject", 
    $sig.make(0xA446, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IndirectLocationInputs", 
    $sig.make(0xA43E, $asm06.TypeRef("System.Collections.Generic.List`1", [$asm08.TypeRef("System.Configuration.SectionInput")]), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsResultTrustedWithoutAptca", 
    $sig.make(0xA42C, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_LastIndirectLocationInput", 
    $sig.make(0xA443, $asm08.TypeRef("System.Configuration.SectionInput"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_LastLocationInput", 
    $sig.make(0xA437, $asm08.TypeRef("System.Configuration.SectionInput"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_LocationInputs", 
    $sig.make(0xA436, $asm06.TypeRef("System.Collections.Generic.List`1", [$asm08.TypeRef("System.Configuration.SectionInput")]), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_LockChildren", 
    $sig.make(0xA42A, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_LockChildrenWithoutFileInput", 
    $sig.make(0xA42B, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Locked", 
    $sig.make(0xA427, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_RequirePermission", 
    $sig.make(0xA42F, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Result", 
    $sig.make(0xA447, $.Object, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ResultRuntimeObject", 
    $sig.make(0xA449, $.Object, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetAllErrors", 
    $sig.make(0xA455, $asm06.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")]), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "RemoveFileInput", 
    $sig.make(0xA450, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_AddUpdate", 
    $sig.make(0xA434, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_IsResultTrustedWithoutAptca", 
    $sig.make(0xA42D, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_RequirePermission", 
    $sig.make(0xA430, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_Result", 
    $sig.make(0xA448, null, [$.Object], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_ResultRuntimeObject", 
    $sig.make(0xA44A, null, [$.Object], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ThrowOnErrors", 
    $sig.make(0xA456, null, [], [])
  );

  $.Field({Static:true , Public:false}, "s_unevaluated", $.Object); 
  $.Field({Static:false, Public:false}, "_flags", $asm08.TypeRef("System.Configuration.SafeBitVector32")); 
  $.Field({Static:false, Public:false}, "_configKey", $.String); 
  $.Field({Static:false, Public:false}, "_locationInputs", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm08.TypeRef("System.Configuration.SectionInput")])); 
  $.Field({Static:false, Public:false}, "_fileInput", $asm08.TypeRef("System.Configuration.SectionInput")); 
  $.Field({Static:false, Public:false}, "_indirectLocationInputs", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm08.TypeRef("System.Configuration.SectionInput")])); 
  $.Field({Static:false, Public:false}, "_result", $.Object); 
  $.Field({Static:false, Public:false}, "_resultRuntimeObject", $.Object); 
  $.Constant({Static:true , Public:false}, "Flag_Locked", 1); 
  $.Constant({Static:true , Public:false}, "Flag_LockChildren", 2); 
  $.Constant({Static:true , Public:false}, "Flag_IsResultTrustedWithoutAptca", 4); 
  $.Constant({Static:true , Public:false}, "Flag_RequirePermission", 8); 
  $.Constant({Static:true , Public:false}, "Flag_LocationInputLockApplied", 16); 
  $.Constant({Static:true , Public:false}, "Flag_IndirectLocationInputLockApplied", 32); 
  $.Constant({Static:true , Public:false}, "Flag_ChildrenLockWithoutFileInput", 64); 
  $.Constant({Static:true , Public:false}, "Flag_AddUpdate", 65536); 
  $.Property({Static:false, Public:false}, "ConfigKey", $.String);

  $.Property({Static:false, Public:false}, "Locked", $.Boolean);

  $.Property({Static:false, Public:false}, "LockChildren", $.Boolean);

  $.Property({Static:false, Public:false}, "LockChildrenWithoutFileInput", $.Boolean);

  $.Property({Static:false, Public:false}, "IsResultTrustedWithoutAptca", $.Boolean);

  $.Property({Static:false, Public:false}, "RequirePermission", $.Boolean);

  $.Property({Static:false, Public:false}, "AddUpdate", $.Boolean);

  $.Property({Static:false, Public:false}, "HasLocationInputs", $.Boolean);

  $.Property({Static:false, Public:false}, "LocationInputs", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm08.TypeRef("System.Configuration.SectionInput")]));

  $.Property({Static:false, Public:false}, "LastLocationInput", $asm08.TypeRef("System.Configuration.SectionInput"));

  $.Property({Static:false, Public:false}, "HasFileInput", $.Boolean);

  $.Property({Static:false, Public:false}, "FileInput", $asm08.TypeRef("System.Configuration.SectionInput"));

  $.Property({Static:false, Public:false}, "HasIndirectLocationInputs", $.Boolean);

  $.Property({Static:false, Public:false}, "IndirectLocationInputs", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm08.TypeRef("System.Configuration.SectionInput")]));

  $.Property({Static:false, Public:false}, "LastIndirectLocationInput", $asm08.TypeRef("System.Configuration.SectionInput"));

  $.Property({Static:false, Public:false}, "HasInput", $.Boolean);

  $.Property({Static:false, Public:false}, "HasResult", $.Boolean);

  $.Property({Static:false, Public:false}, "HasResultRuntimeObject", $.Boolean);

  $.Property({Static:false, Public:false}, "Result", $.Object);

  $.Property({Static:false, Public:false}, "ResultRuntimeObject", $.Object);

  $.Property({Static:false, Public:false}, "HasErrors", $.Boolean);

})
  .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerDisplayAttribute"), function () { return ["SectionRecord {ConfigKey}"]; });

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.SectionXmlInfo", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xA80A, null, [
        $.String, $.String, 
        $.String, $.String, 
        $.String, $.Int32, 
        $.Object, $.String, 
        $.String, $.String, 
        $.Object, $.String, 
        $asm08.TypeRef("System.Configuration.OverrideModeSetting"), $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ConfigKey", 
    $sig.make(0xA7FD, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ConfigSource", 
    $sig.make(0xA7F8, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ConfigSourceStreamName", 
    $sig.make(0xA7FA, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_DefinitionConfigPath", 
    $sig.make(0xA7FE, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Filename", 
    $sig.make(0xA7F3, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_LineNumber", 
    $sig.make(0xA7F4, $.Int32, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "get_OverrideModeSetting", 
    $sig.make(0xA806, $asm08.TypeRef("System.Configuration.OverrideModeSetting"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ProtectionProviderName", 
    $sig.make(0xA804, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_RawXml", 
    $sig.make(0xA802, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_SkipInChildApps", 
    $sig.make(0xA808, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_StreamVersion", 
    $sig.make(0xA7F6, $.Object, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_SubPath", 
    $sig.make(0xA801, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_TargetConfigPath", 
    $sig.make(0xA7FF, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_ConfigSource", 
    $sig.make(0xA7F9, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_ConfigSourceStreamName", 
    $sig.make(0xA7FB, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_ConfigSourceStreamVersion", 
    $sig.make(0xA7FC, null, [$.Object], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_LineNumber", 
    $sig.make(0xA7F5, null, [$.Int32], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "set_OverrideModeSetting", 
    $sig.make(0xA807, null, [$asm08.TypeRef("System.Configuration.OverrideModeSetting")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_ProtectionProviderName", 
    $sig.make(0xA805, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_RawXml", 
    $sig.make(0xA803, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_SkipInChildApps", 
    $sig.make(0xA809, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_StreamVersion", 
    $sig.make(0xA7F7, null, [$.Object], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_TargetConfigPath", 
    $sig.make(0xA800, null, [$.String], [])
  );

  $.Field({Static:false, Public:false}, "_configKey", $.String); 
  $.Field({Static:false, Public:false}, "_definitionConfigPath", $.String); 
  $.Field({Static:false, Public:false}, "_targetConfigPath", $.String); 
  $.Field({Static:false, Public:false}, "_subPath", $.String); 
  $.Field({Static:false, Public:false}, "_filename", $.String); 
  $.Field({Static:false, Public:false}, "_lineNumber", $.Int32); 
  $.Field({Static:false, Public:false}, "_streamVersion", $.Object); 
  $.Field({Static:false, Public:false}, "_configSource", $.String); 
  $.Field({Static:false, Public:false}, "_configSourceStreamName", $.String); 
  $.Field({Static:false, Public:false}, "_configSourceStreamVersion", $.Object); 
  $.Field({Static:false, Public:false}, "_skipInChildApps", $.Boolean); 
  $.Field({Static:false, Public:false}, "_rawXml", $.String); 
  $.Field({Static:false, Public:false}, "_protectionProviderName", $.String); 
  $.Field({Static:false, Public:false}, "_overrideMode", $asm08.TypeRef("System.Configuration.OverrideModeSetting")); 
  $.Property({Static:false, Public:true , Virtual:true }, "Filename", $.String);

  $.Property({Static:false, Public:true , Virtual:true }, "LineNumber", $.Int32);

  $.Property({Static:false, Public:false}, "StreamVersion", $.Object);

  $.Property({Static:false, Public:false}, "ConfigSource", $.String);

  $.Property({Static:false, Public:false}, "ConfigSourceStreamName", $.String);

  $.Property({Static:false, Public:false}, "ConfigSourceStreamVersion", $.Object);

  $.Property({Static:false, Public:false}, "ConfigKey", $.String);

  $.Property({Static:false, Public:false}, "DefinitionConfigPath", $.String);

  $.Property({Static:false, Public:false}, "TargetConfigPath", $.String);

  $.Property({Static:false, Public:false}, "SubPath", $.String);

  $.Property({Static:false, Public:false}, "RawXml", $.String);

  $.Property({Static:false, Public:false}, "ProtectionProviderName", $.String);

  $.Property({Static:false, Public:false}, "OverrideModeSetting", $asm08.TypeRef("System.Configuration.OverrideModeSetting"));

  $.Property({Static:false, Public:false}, "SkipInChildApps", $.Boolean);

  $.ImplementInterfaces($asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo"))
});

JSIL.MakeStruct($asm06.TypeRef("System.ValueType"), "System.Configuration.SimpleBitVector32", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xA836, null, [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Data", 
    $sig.make(0xA833, $.Int32, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Item", 
    $sig.make(0xA834, $.Boolean, [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_Item", 
    $sig.make(0xA835, null, [$.Int32, $.Boolean], [])
  );

  $.Field({Static:false, Public:false}, "data", $.Int32); 
  $.Property({Static:false, Public:false}, "Data", $.Int32);

  $.Property({Static:false, Public:false}, "Item", $.Boolean);

})
  .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

JSIL.MakeClass($asm07.TypeRef("System.Collections.Specialized.StringCollection"), "System.Configuration.CommaDelimitedStringCollection", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25913, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Add", 
    $sig.make(0x25919, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "AddRange", 
    $sig.make(0x2591B, null, [$jsilcore.TypeRef("System.Array", [$.String])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Clear", 
    $sig.make(0x2591D, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Clone", 
    $sig.make(0x25921, $.Type, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "FromString", 
    $sig.make(0x25922, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsModified", 
    $sig.make(0x2590C, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_IsReadOnly", 
    $sig.make(0x2590D, $.Boolean, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_Item", 
    $sig.make(0x2590F, $.String, [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Insert", 
    $sig.make(0x2591F, null, [$.Int32, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Remove", 
    $sig.make(0x25920, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_Item", 
    $sig.make(0x25911, null, [$.Int32, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "SetReadOnly", 
    $sig.make(0x25917, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ThrowIfContainsDelimiter", 
    $sig.make(0x25924, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ThrowIfReadOnly", 
    $sig.make(0x25923, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "toString", 
    $sig.make(0x25916, $.String, [], [])
  );

  $.Field({Static:false, Public:false}, "_Modified", $.Boolean); 
  $.Field({Static:false, Public:false}, "_ReadOnly", $.Boolean); 
  $.Field({Static:false, Public:false}, "_OriginalString", $.String); 
  $.Property({Static:false, Public:true }, "IsModified", $.Boolean);

  $.Property({Static:false, Public:true }, "IsReadOnly", $.Boolean);

  $.Property({Static:false, Public:true }, "Item", $.String);

})
  .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"), "System.Configuration.StringValidator", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25966, null, [$.Int32], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25967, null, [$.Int32, $.Int32], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25968, null, [
        $.Int32, $.Int32, 
        $.String
      ], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "CanValidate", 
    $sig.make(0x25969, $.Boolean, [$asm06.TypeRef("System.Type")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Validate", 
    $sig.make(0x2596A, null, [$.Object], [])
  );

  $.Field({Static:false, Public:false}, "_minLength", $.Int32); 
  $.Field({Static:false, Public:false}, "_maxLength", $.Int32); 
  $.Field({Static:false, Public:false}, "_invalidChars", $.String); 
});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationValidatorAttribute"), "System.Configuration.StringValidatorAttribute", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x259F8, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_InvalidCharacters", 
    $sig.make(0x259F6, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_MaxLength", 
    $sig.make(0x259F4, $.Int32, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_MinLength", 
    $sig.make(0x259F2, $.Int32, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_ValidatorInstance", 
    $sig.make(0x259F0, $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_InvalidCharacters", 
    $sig.make(0x259F7, null, [$.String], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "set_MaxLength", 
    $sig.make(0x259F5, null, [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_MinLength", 
    $sig.make(0x259F3, null, [$.Int32], [])
  );

  $.Field({Static:false, Public:false}, "_minLength", $.Int32); 
  $.Field({Static:false, Public:false}, "_maxLength", $.Int32); 
  $.Field({Static:false, Public:false}, "_invalidChars", $.String); 
  $.Property({Static:false, Public:true , Virtual:true }, "ValidatorInstance", $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"));

  $.Property({Static:false, Public:true }, "MinLength", $.Int32);

  $.Property({Static:false, Public:true }, "MaxLength", $.Int32);

  $.Property({Static:false, Public:true }, "InvalidCharacters", $.String);

})
  .Attribute($asm06.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm06.System.AttributeTargets.Property]; });

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"), "System.Configuration.SubclassTypeValidator", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25A73, null, [$asm06.TypeRef("System.Type")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CanValidate", 
    $sig.make(0x25A74, $.Boolean, [$asm06.TypeRef("System.Type")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Validate", 
    $sig.make(0x25A75, null, [$.Object], [])
  );

  $.Field({Static:false, Public:false}, "_base", $asm06.TypeRef("System.Type")); 
});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationValidatorAttribute"), "System.Configuration.SubclassTypeValidatorAttribute", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25A8D, null, [$asm06.TypeRef("System.Type")], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_BaseClass", 
    $sig.make(0x25A8C, $asm06.TypeRef("System.Type"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_ValidatorInstance", 
    $sig.make(0x25A8B, $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"), [], [])
  );

  $.Field({Static:false, Public:false}, "_baseClass", $asm06.TypeRef("System.Type")); 
  $.Property({Static:false, Public:true , Virtual:true }, "ValidatorInstance", $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"));

  $.Property({Static:false, Public:true }, "BaseClass", $asm06.TypeRef("System.Type"));

})
  .Attribute($asm06.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm06.System.AttributeTargets.Property]; });

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationConverterBase"), "System.Configuration.TimeSpanMinutesConverter", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25ACB, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "ConvertFrom", 
    $sig.make(0x25ACA, $.Object, [
        $asm07.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm06.TypeRef("System.Globalization.CultureInfo"), 
        $.Object
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "ConvertTo", 
    $sig.make(0x25AC9, $.Object, [
        $asm07.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm06.TypeRef("System.Globalization.CultureInfo"), 
        $.Object, $asm06.TypeRef("System.Type")
      ], [])
  );

});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.TimeSpanMinutesConverter"), "System.Configuration.TimeSpanMinutesOrInfiniteConverter", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25AE3, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "ConvertFrom", 
    $sig.make(0x25ADF, $.Object, [
        $asm07.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm06.TypeRef("System.Globalization.CultureInfo"), 
        $.Object
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "ConvertTo", 
    $sig.make(0x25ADD, $.Object, [
        $asm07.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm06.TypeRef("System.Globalization.CultureInfo"), 
        $.Object, $asm06.TypeRef("System.Type")
      ], [])
  );

});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationConverterBase"), "System.Configuration.TimeSpanSecondsConverter", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25AFF, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "ConvertFrom", 
    $sig.make(0x25AFE, $.Object, [
        $asm07.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm06.TypeRef("System.Globalization.CultureInfo"), 
        $.Object
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "ConvertTo", 
    $sig.make(0x25AFC, $.Object, [
        $asm07.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm06.TypeRef("System.Globalization.CultureInfo"), 
        $.Object, $asm06.TypeRef("System.Type")
      ], [])
  );

});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.TimeSpanSecondsConverter"), "System.Configuration.TimeSpanSecondsOrInfiniteConverter", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25B1B, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "ConvertFrom", 
    $sig.make(0x25B18, $.Object, [
        $asm07.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm06.TypeRef("System.Globalization.CultureInfo"), 
        $.Object
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "ConvertTo", 
    $sig.make(0x25B16, $.Object, [
        $asm07.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm06.TypeRef("System.Globalization.CultureInfo"), 
        $.Object, $asm06.TypeRef("System.Type")
      ], [])
  );

});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"), "System.Configuration.TimeSpanValidator", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25B3C, null, [$asm06.TypeRef("System.TimeSpan"), $asm06.TypeRef("System.TimeSpan")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25B3E, null, [
        $asm06.TypeRef("System.TimeSpan"), $asm06.TypeRef("System.TimeSpan"), 
        $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25B44, null, [
        $asm06.TypeRef("System.TimeSpan"), $asm06.TypeRef("System.TimeSpan"), 
        $.Boolean, $.Int64
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CanValidate", 
    $sig.make(0x25B45, $.Boolean, [$asm06.TypeRef("System.Type")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Validate", 
    $sig.make(0x25B48, null, [$.Object], [])
  );

  $.Field({Static:false, Public:false}, "_flags", $asm08.TypeRef("System.Configuration.TimeSpanValidator/ValidationFlags")); 
  $.Field({Static:false, Public:false}, "_minValue", $asm06.TypeRef("System.TimeSpan")); 
  $.Field({Static:false, Public:false}, "_maxValue", $asm06.TypeRef("System.TimeSpan")); 
  $.Field({Static:false, Public:false}, "_resolution", $.Int64); 
});

JSIL.MakeEnum(
  "System.Configuration.TimeSpanValidator/ValidationFlags", false, {
    None: 0, 
    ExclusiveRange: 1
  }, false
);

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationValidatorAttribute"), "System.Configuration.TimeSpanValidatorAttribute", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25AC2, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_ExcludeRange", 
    $sig.make(0x25AC0, $.Boolean, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_MaxValue", 
    $sig.make(0x25ABB, $asm06.TypeRef("System.TimeSpan"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_MaxValueString", 
    $sig.make(0x25ABE, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_MinValue", 
    $sig.make(0x25ABA, $asm06.TypeRef("System.TimeSpan"), [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_MinValueString", 
    $sig.make(0x25ABC, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_ValidatorInstance", 
    $sig.make(0x25AB9, $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_ExcludeRange", 
    $sig.make(0x25AC1, null, [$.Boolean], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "set_MaxValueString", 
    $sig.make(0x25ABF, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "set_MinValueString", 
    $sig.make(0x25ABD, null, [$.String], [])
  );

  $.Constant({Static:true , Public:true }, "TimeSpanMinValue", "-10675199.02:48:05.4775808"); 
  $.Constant({Static:true , Public:true }, "TimeSpanMaxValue", "10675199.02:48:05.4775807"); 
  $.Field({Static:false, Public:false}, "_min", $asm06.TypeRef("System.TimeSpan")); 
  $.Field({Static:false, Public:false}, "_max", $asm06.TypeRef("System.TimeSpan")); 
  $.Field({Static:false, Public:false}, "_excludeRange", $.Boolean); 
  $.Property({Static:false, Public:true , Virtual:true }, "ValidatorInstance", $asm08.TypeRef("System.Configuration.ConfigurationValidatorBase"));

  $.Property({Static:false, Public:true }, "MinValue", $asm06.TypeRef("System.TimeSpan"));

  $.Property({Static:false, Public:true }, "MaxValue", $asm06.TypeRef("System.TimeSpan"));

  $.Property({Static:false, Public:true }, "MinValueString", $.String);

  $.Property({Static:false, Public:true }, "MaxValueString", $.String);

  $.Property({Static:false, Public:true }, "ExcludeRange", $.Boolean);

})
  .Attribute($asm06.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm06.System.AttributeTargets.Property]; });

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationConverterBase"), "System.Configuration.TypeNameConverter", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25AE0, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "ConvertFrom", 
    $sig.make(0x25ADB, $.Object, [
        $asm07.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm06.TypeRef("System.Globalization.CultureInfo"), 
        $.Object
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "ConvertTo", 
    $sig.make(0x25AD4, $.Object, [
        $asm07.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm06.TypeRef("System.Globalization.CultureInfo"), 
        $.Object, $asm06.TypeRef("System.Type")
      ], [])
  );

});

JSIL.MakeDelegate("System.Configuration.ValidatorCallback", true, []);

JSIL.MakeClass($asm08.TypeRef("System.Configuration.ConfigurationConverterBase"), "System.Configuration.WhiteSpaceTrimStringConverter", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25B10, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "ConvertFrom", 
    $sig.make(0x25B0F, $.Object, [
        $asm07.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm06.TypeRef("System.Globalization.CultureInfo"), 
        $.Object
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "ConvertTo", 
    $sig.make(0x25B0E, $.Object, [
        $asm07.TypeRef("System.ComponentModel.ITypeDescriptorContext"), $asm06.TypeRef("System.Globalization.CultureInfo"), 
        $.Object, $asm06.TypeRef("System.Type")
      ], [])
  );

});

JSIL.MakeInterface(
  "System.Configuration.Internal.IConfigSystem", true, [], function ($) {
    $.Method({}, "Init", $sig.make(0x25B34, null, [$asm06.TypeRef("System.Type"), $jsilcore.TypeRef("System.Array", [$.Object])], []));
    $.Method({}, "get_Host", $sig.make(0x25B32, $asm08.TypeRef("System.Configuration.Internal.IInternalConfigHost"), [], []));
    $.Method({}, "get_Root", $sig.make(0x25B33, $asm08.TypeRef("System.Configuration.Internal.IInternalConfigRoot"), [], []));
    $.Property({}, "Host");
    $.Property({}, "Root");
  }, []);

JSIL.MakeInterface(
  "System.Configuration.Internal.IConfigurationManagerInternal", true, [], function ($) {
    $.Method({}, "get_SupportsUserConfig", $sig.make(0x1D5C4, $.Boolean, [], []));
    $.Method({}, "get_SetConfigurationSystemInProgress", $sig.make(0x1D5C5, $.Boolean, [], []));
    $.Method({}, "get_MachineConfigPath", $sig.make(0x1D5C6, $.String, [], []));
    $.Method({}, "get_ApplicationConfigUri", $sig.make(0x1D5C7, $.String, [], []));
    $.Method({}, "get_ExeProductName", $sig.make(0x1D5C9, $.String, [], []));
    $.Method({}, "get_ExeProductVersion", $sig.make(0x1D5CB, $.String, [], []));
    $.Method({}, "get_ExeRoamingConfigDirectory", $sig.make(0x1D5D1, $.String, [], []));
    $.Method({}, "get_ExeRoamingConfigPath", $sig.make(0x1D5D2, $.String, [], []));
    $.Method({}, "get_ExeLocalConfigDirectory", $sig.make(0x1D5D3, $.String, [], []));
    $.Method({}, "get_ExeLocalConfigPath", $sig.make(0x1D5D4, $.String, [], []));
    $.Method({}, "get_UserConfigFilename", $sig.make(0x1D5D5, $.String, [], []));
    $.Property({}, "SupportsUserConfig");
    $.Property({}, "SetConfigurationSystemInProgress");
    $.Property({}, "MachineConfigPath");
    $.Property({}, "ApplicationConfigUri");
    $.Property({}, "ExeProductName");
    $.Property({}, "ExeProductVersion");
    $.Property({}, "ExeRoamingConfigDirectory");
    $.Property({}, "ExeRoamingConfigPath");
    $.Property({}, "ExeLocalConfigDirectory");
    $.Property({}, "ExeLocalConfigPath");
    $.Property({}, "UserConfigFilename");
  }, []);

JSIL.MakeInterface(
  "System.Configuration.Internal.IConfigurationManagerHelper", true, [], function ($) {
    $.Method({}, "EnsureNetConfigLoaded", $sig.make(0x1D4DF, null, [], []));
  }, []);

JSIL.MakeInterface(
  "System.Configuration.Internal.IInternalConfigConfigurationFactory", true, [], function ($) {
    $.Method({}, "Create", $sig.make(0x1E1B6, $asm08.TypeRef("System.Configuration.Configuration"), [$asm06.TypeRef("System.Type"), $jsilcore.TypeRef("System.Array", [$.Object])], []));
    $.Method({}, "NormalizeLocationSubPath", $sig.make(0x1E1B7, $.String, [$.String, $asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo")], []));
  }, []);

JSIL.MakeInterface(
  "System.Configuration.Internal.IInternalConfigRoot", true, [], function ($) {
    $.Method({}, "Init", $sig.make(0xA842, null, [$asm08.TypeRef("System.Configuration.Internal.IInternalConfigHost"), $.Boolean], []));
    $.Method({}, "get_IsDesignTime", $sig.make(0xA83D, $.Boolean, [], []));
    $.Method({}, "add_ConfigChanged", $sig.make(0xA83E, null, [$asm08.TypeRef("System.Configuration.Internal.InternalConfigEventHandler")], []));
    $.Method({}, "remove_ConfigChanged", $sig.make(0xA83F, null, [$asm08.TypeRef("System.Configuration.Internal.InternalConfigEventHandler")], []));
    $.Method({}, "add_ConfigRemoved", $sig.make(0xA840, null, [$asm08.TypeRef("System.Configuration.Internal.InternalConfigEventHandler")], []));
    $.Method({}, "remove_ConfigRemoved", $sig.make(0xA841, null, [$asm08.TypeRef("System.Configuration.Internal.InternalConfigEventHandler")], []));
    $.Method({}, "GetSection", $sig.make(0xA843, $.Object, [$.String, $.String], []));
    $.Method({}, "GetUniqueConfigPath", $sig.make(0xA844, $.String, [$.String], []));
    $.Method({}, "GetUniqueConfigRecord", $sig.make(0xA845, $asm08.TypeRef("System.Configuration.Internal.IInternalConfigRecord"), [$.String], []));
    $.Method({}, "GetConfigRecord", $sig.make(0xA846, $asm08.TypeRef("System.Configuration.Internal.IInternalConfigRecord"), [$.String], []));
    $.Method({}, "RemoveConfig", $sig.make(0xA847, null, [$.String], []));
    $.Property({}, "IsDesignTime");
  }, []);

JSIL.MakeInterface(
  "System.Configuration.Internal.IInternalConfigSettingsFactory", true, [], function ($) {
    $.Method({}, "SetConfigurationSystem", $sig.make(0x25B0C, null, [$asm08.TypeRef("System.Configuration.Internal.IInternalConfigSystem"), $.Boolean], []));
    $.Method({}, "CompleteInit", $sig.make(0x25B0D, null, [], []));
  }, []);

JSIL.MakeClass($asm06.TypeRef("System.EventArgs"), "System.Configuration.Internal.InternalConfigEventArgs", true, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0xAF8B, null, [$.String], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "get_ConfigPath", 
    $sig.make(0xAF89, $.String, [], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:true }, "set_ConfigPath", 
    $sig.make(0xAF8A, null, [$.String], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.Field({Static:false, Public:false}, "_configPath", $.String); 
  $.Property({Static:false, Public:true }, "ConfigPath", $.String);

});

JSIL.MakeDelegate("System.Configuration.Internal.InternalConfigEventHandler", true, []);

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.Internal.InternalConfigRoot", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xA859, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xA85A, null, [$asm08.TypeRef("System.Configuration.Configuration")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AcquireHierarchyLockForRead", 
    $sig.make(0xA85B, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AcquireHierarchyLockForWrite", 
    $sig.make(0xA85D, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "add_ConfigChanged", 
    $sig.make(0xA84C, null, [$asm08.TypeRef("System.Configuration.Internal.InternalConfigEventHandler")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "add_ConfigRemoved", 
    $sig.make(0xA84E, null, [$asm08.TypeRef("System.Configuration.Internal.InternalConfigEventHandler")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "ClearResult", 
    $sig.make(0xA858, null, [
        $asm08.TypeRef("System.Configuration.BaseConfigurationRecord"), $.String, 
        $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "FireConfigChanged", 
    $sig.make(0xA861, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_CurrentConfiguration", 
    $sig.make(0xA84B, $asm08.TypeRef("System.Configuration.Configuration"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Host", 
    $sig.make(0xA848, $asm08.TypeRef("System.Configuration.Internal.IInternalConfigHost"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_RootConfigRecord", 
    $sig.make(0xA849, $asm08.TypeRef("System.Configuration.BaseConfigurationRecord"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetConfigRecord", 
    $sig.make(0xA854, $asm08.TypeRef("System.Configuration.Internal.IInternalConfigRecord"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetSection", 
    $sig.make(0xA851, $.Object, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetUniqueConfigPath", 
    $sig.make(0xA852, $.String, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetUniqueConfigRecord", 
    $sig.make(0xA853, $asm08.TypeRef("System.Configuration.Internal.IInternalConfigRecord"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "hlFindConfigRecord", 
    $sig.make(0xA85F, null, [
        $jsilcore.TypeRef("System.Array", [$.String]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
        $jsilcore.TypeRef("JSIL.Reference", [$asm08.TypeRef("System.Configuration.BaseConfigurationRecord")])
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnConfigChanged", 
    $sig.make(0xA862, null, [$asm08.TypeRef("System.Configuration.Internal.InternalConfigEventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnConfigRemoved", 
    $sig.make(0xA860, null, [$asm08.TypeRef("System.Configuration.Internal.InternalConfigEventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ReleaseHierarchyLockForRead", 
    $sig.make(0xA85C, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ReleaseHierarchyLockForWrite", 
    $sig.make(0xA85E, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "remove_ConfigChanged", 
    $sig.make(0xA84D, null, [$asm08.TypeRef("System.Configuration.Internal.InternalConfigEventHandler")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "remove_ConfigRemoved", 
    $sig.make(0xA84F, null, [$asm08.TypeRef("System.Configuration.Internal.InternalConfigEventHandler")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "RemoveConfig", 
    $sig.make(0xA856, null, [$.String], [])
  )
    .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

  $.ExternalMethod({Static:false, Public:false}, "RemoveConfigImpl", 
    $sig.make(0xA855, null, [$.String, $asm08.TypeRef("System.Configuration.BaseConfigurationRecord")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "RemoveConfigRecord", 
    $sig.make(0xA857, null, [$asm08.TypeRef("System.Configuration.BaseConfigurationRecord")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigRoot.get_IsDesignTime", 
    $sig.make(0xA84A, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigRoot.Init", 
    $sig.make(0xA850, null, [$asm08.TypeRef("System.Configuration.Internal.IInternalConfigHost"), $.Boolean], [])
  );

  $.Field({Static:false, Public:false}, "_host", $asm08.TypeRef("System.Configuration.Internal.IInternalConfigHost")); 
  $.Field({Static:false, Public:false}, "_hierarchyLock", $asm06.TypeRef("System.Threading.ReaderWriterLock")); 
  $.Field({Static:false, Public:false}, "_rootConfigRecord", $asm08.TypeRef("System.Configuration.BaseConfigurationRecord")); 
  $.Field({Static:false, Public:false}, "_isDesignTime", $.Boolean); 
  $.Field({Static:false, Public:false}, "_CurrentConfiguration", $asm08.TypeRef("System.Configuration.Configuration")); 
  $.Field({Static:false, Public:false}, "ConfigChanged", $asm08.TypeRef("System.Configuration.Internal.InternalConfigEventHandler")); 
  $.Field({Static:false, Public:false}, "ConfigRemoved", $asm08.TypeRef("System.Configuration.Internal.InternalConfigEventHandler")); 
  $.Property({Static:false, Public:false}, "Host", $asm08.TypeRef("System.Configuration.Internal.IInternalConfigHost"));

  $.Property({Static:false, Public:false}, "RootConfigRecord", $asm08.TypeRef("System.Configuration.BaseConfigurationRecord"));

  $.Property({Static:false, Public:false, Virtual:true }, "IInternalConfigRoot.IsDesignTime", $.Boolean);

  $.Property({Static:false, Public:false}, "CurrentConfiguration", $asm08.TypeRef("System.Configuration.Configuration"));

  $.ImplementInterfaces($asm08.TypeRef("System.Configuration.Internal.IInternalConfigRoot"))
});

JSIL.MakeDelegate("System.Configuration.Internal.StreamChangeCallback", true, []);

JSIL.MakeStaticClass("FXAssembly", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.Constant({Static:true , Public:false}, "Version", "4.0.0.0"); 
});

JSIL.MakeStaticClass("ThisAssembly", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.Constant({Static:true , Public:false}, "Title", "System.Configuration.dll"); 
  $.Constant({Static:true , Public:false}, "Description", "System.Configuration.dll"); 
  $.Constant({Static:true , Public:false}, "DefaultAlias", "System.Configuration.dll"); 
  $.Constant({Static:true , Public:false}, "Copyright", "\xa9 Microsoft Corporation.  All rights reserved."); 
  $.Constant({Static:true , Public:false}, "Version", "4.0.0.0"); 
  $.Constant({Static:true , Public:false}, "InformationalVersion", "4.0.30319.1"); 
  $.Constant({Static:true , Public:false}, "DailyBuildNumberStr", "30319"); 
  $.Constant({Static:true , Public:false}, "BuildRevisionStr", "1"); 
  $.Constant({Static:true , Public:false}, "DailyBuildNumber", 30319); 
});

JSIL.MakeStaticClass("AssemblyRef", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.Constant({Static:true , Public:false}, "EcmaPublicKey", "b77a5c561934e089"); 
  $.Constant({Static:true , Public:false}, "EcmaPublicKeyToken", "b77a5c561934e089"); 
  $.Constant({Static:true , Public:false}, "EcmaPublicKeyFull", "00000000000000000400000000000000"); 
  $.Constant({Static:true , Public:false}, "SilverlightPublicKey", "31bf3856ad364e35"); 
  $.Constant({Static:true , Public:false}, "SilverlightPublicKeyToken", "31bf3856ad364e35"); 
  $.Constant({Static:true , Public:false}, "SilverlightPublicKeyFull", "0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9"); 
  $.Constant({Static:true , Public:false}, "SilverlightPlatformPublicKey", "7cec85d7bea7798e"); 
  $.Constant({Static:true , Public:false}, "SilverlightPlatformPublicKeyToken", "7cec85d7bea7798e"); 
  $.Constant({Static:true , Public:false}, "SilverlightPlatformPublicKeyFull", "00240000048000009400000006020000002400005253413100040000010001008D56C76F9E8649383049F383C44BE0EC204181822A6C31CF5EB7EF486944D032188EA1D3920763712CCB12D75FB77E9811149E6148E5D32FBAAB37611C1878DDC19E20EF135D0CB2CFF2BFEC3D115810C3D9069638FE4BE215DBF795861920E5AB6F7DB2E2CEEF136AC23D5DD2BF031700AEC232F6C6B1C785B4305C123B37AB"); 
  $.Constant({Static:true , Public:false}, "PlatformPublicKey", "b77a5c561934e089"); 
  $.Constant({Static:true , Public:false}, "PlatformPublicKeyToken", "b77a5c561934e089"); 
  $.Constant({Static:true , Public:false}, "PlatformPublicKeyFull", "00000000000000000400000000000000"); 
  $.Constant({Static:true , Public:false}, "Mscorlib", "mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
  $.Constant({Static:true , Public:false}, "SystemData", "System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
  $.Constant({Static:true , Public:false}, "SystemDataOracleClient", "System.Data.OracleClient, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
  $.Constant({Static:true , Public:false}, "System", "System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
  $.Constant({Static:true , Public:false}, "SystemCore", "System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
  $.Constant({Static:true , Public:false}, "SystemNumerics", "System.Numerics, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
  $.Constant({Static:true , Public:false}, "SystemRuntimeRemoting", "System.Runtime.Remoting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
  $.Constant({Static:true , Public:false}, "SystemWindowsForms", "System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
  $.Constant({Static:true , Public:false}, "SystemXml", "System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
  $.Constant({Static:true , Public:false}, "MicrosoftPublicKey", "b03f5f7f11d50a3a"); 
  $.Constant({Static:true , Public:false}, "MicrosoftPublicKeyToken", "b03f5f7f11d50a3a"); 
  $.Constant({Static:true , Public:false}, "MicrosoftPublicKeyFull", "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"); 
  $.Constant({Static:true , Public:false}, "SharedLibPublicKey", "31bf3856ad364e35"); 
  $.Constant({Static:true , Public:false}, "SharedLibPublicKeyToken", "31bf3856ad364e35"); 
  $.Constant({Static:true , Public:false}, "SharedLibPublicKeyFull", "0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9"); 
  $.Constant({Static:true , Public:false}, "SystemComponentModelDataAnnotations", "System.ComponentModel.DataAnnotations, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"); 
  $.Constant({Static:true , Public:false}, "SystemConfiguration", "System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
  $.Constant({Static:true , Public:false}, "SystemConfigurationInstall", "System.Configuration.Install, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
  $.Constant({Static:true , Public:false}, "SystemDeployment", "System.Deployment, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
  $.Constant({Static:true , Public:false}, "SystemDesign", "System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
  $.Constant({Static:true , Public:false}, "SystemDirectoryServices", "System.DirectoryServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
  $.Constant({Static:true , Public:false}, "SystemDrawingDesign", "System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
  $.Constant({Static:true , Public:false}, "SystemDrawing", "System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
  $.Constant({Static:true , Public:false}, "SystemEnterpriseServices", "System.EnterpriseServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
  $.Constant({Static:true , Public:false}, "SystemManagement", "System.Management, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
  $.Constant({Static:true , Public:false}, "SystemMessaging", "System.Messaging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
  $.Constant({Static:true , Public:false}, "SystemRuntimeSerializationFormattersSoap", "System.Runtime.Serialization.Formatters.Soap, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
  $.Constant({Static:true , Public:false}, "SystemSecurity", "System.Security, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
  $.Constant({Static:true , Public:false}, "SystemServiceProcess", "System.ServiceProcess, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
  $.Constant({Static:true , Public:false}, "SystemWeb", "System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
  $.Constant({Static:true , Public:false}, "SystemWebAbstractions", "System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"); 
  $.Constant({Static:true , Public:false}, "SystemWebDynamicData", "System.Web.DynamicData, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"); 
  $.Constant({Static:true , Public:false}, "SystemWebDynamicDataDesign", "System.Web.DynamicData.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"); 
  $.Constant({Static:true , Public:false}, "SystemWebEntityDesign", "System.Web.Entity.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
  $.Constant({Static:true , Public:false}, "SystemWebExtensions", "System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"); 
  $.Constant({Static:true , Public:false}, "SystemWebExtensionsDesign", "System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"); 
  $.Constant({Static:true , Public:false}, "SystemWebMobile", "System.Web.Mobile, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
  $.Constant({Static:true , Public:false}, "SystemWebRegularExpressions", "System.Web.RegularExpressions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
  $.Constant({Static:true , Public:false}, "SystemWebRouting", "System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"); 
  $.Constant({Static:true , Public:false}, "SystemWebServices", "System.Web.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
  $.Constant({Static:true , Public:false}, "WindowsBase", "WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"); 
  $.Constant({Static:true , Public:false}, "MicrosoftVisualStudio", "Microsoft.VisualStudio, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
  $.Constant({Static:true , Public:false}, "MicrosoftVisualStudioWindowsForms", "Microsoft.VisualStudio.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
  $.Constant({Static:true , Public:false}, "VJSharpCodeProvider", "VJSharpCodeProvider, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
  $.Constant({Static:true , Public:false}, "ASPBrowserCapsPublicKey", "b7bd7678b977bd8f"); 
  $.Constant({Static:true , Public:false}, "ASPBrowserCapsFactory", "ASP.BrowserCapsFactory, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b7bd7678b977bd8f"); 
  $.Constant({Static:true , Public:false}, "MicrosoftVSDesigner", "Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
  $.Constant({Static:true , Public:false}, "MicrosoftVisualStudioWeb", "Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
  $.Constant({Static:true , Public:false}, "MicrosoftWebDesign", "Microsoft.Web.Design.Client, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
  $.Constant({Static:true , Public:false}, "MicrosoftVSDesignerMobile", "Microsoft.VSDesigner.Mobile, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
  $.Constant({Static:true , Public:false}, "MicrosoftJScript", "Microsoft.JScript, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
});

JSIL.MakeClass($asm07.TypeRef("System.ComponentModel.DescriptionAttribute"), "System.Configuration.SRDescriptionAttribute", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25B9A, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Description", 
    $sig.make(0x25B97, $.String, [], [])
  );

  $.Field({Static:false, Public:false}, "replaced", $.Boolean); 
  $.Property({Static:false, Public:true , Virtual:true }, "Description", $.String);

})
  .Attribute($asm06.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm06.System.AttributeTargets.$Flags(
        "All", "Assembly", "Class", "Constructor", 
        "Delegate", "Enum", "Event", "Field", 
        "GenericParameter", "Interface", "Method", "Module", 
        "Parameter", "Property", "ReturnValue", "Struct"
    )]; });

JSIL.MakeClass($asm07.TypeRef("System.ComponentModel.CategoryAttribute"), "System.Configuration.SRCategoryAttribute", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25BDB, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetLocalizedString", 
    $sig.make(0x25BDC, $.String, [$.String], [])
  );

})
  .Attribute($asm06.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm06.System.AttributeTargets.$Flags(
        "All", "Assembly", "Class", "Constructor", 
        "Delegate", "Enum", "Event", "Field", 
        "GenericParameter", "Interface", "Method", "Module", 
        "Parameter", "Property", "ReturnValue", "Struct"
    )]; });

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.SR", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25BF2, null, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_Culture", 
    $sig.make(0x25BF0, $asm06.TypeRef("System.Globalization.CultureInfo"), [], [])
  );

  $.ExternalMethod({Static:true , Public:true }, "get_Resources", 
    $sig.make(0x25BF1, $asm06.TypeRef("System.Resources.ResourceManager"), [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetLoader", 
    $sig.make(0x25BF3, $.Type, [], [])
  );

  $.ExternalMethod({Static:true , Public:true }, "GetObject", 
    $sig.make(0x25BF7, $.Object, [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:true }, "GetString", 
    $sig.make(0x25BF4, $.String, [$.String, $jsilcore.TypeRef("System.Array", [$.Object])], [])
  );

  $.ExternalMethod({Static:true , Public:true }, "GetString", 
    $sig.make(0x25BF5, $.String, [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:true }, "GetString", 
    $sig.make(0x25BF6, $.String, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])], [])
  );

  $.Constant({Static:true , Public:false}, "Parameter_Invalid", "Parameter_Invalid"); 
  $.Constant({Static:true , Public:false}, "Parameter_NullOrEmpty", "Parameter_NullOrEmpty"); 
  $.Constant({Static:true , Public:false}, "Property_NullOrEmpty", "Property_NullOrEmpty"); 
  $.Constant({Static:true , Public:false}, "Property_Invalid", "Property_Invalid"); 
  $.Constant({Static:true , Public:false}, "Unexpected_Error", "Unexpected_Error"); 
  $.Constant({Static:true , Public:false}, "Wrapped_exception_message", "Wrapped_exception_message"); 
  $.Constant({Static:true , Public:false}, "Config_error_loading_XML_file", "Config_error_loading_XML_file"); 
  $.Constant({Static:true , Public:false}, "Config_exception_creating_section_handler", "Config_exception_creating_section_handler"); 
  $.Constant({Static:true , Public:false}, "Config_exception_creating_section", "Config_exception_creating_section"); 
  $.Constant({Static:true , Public:false}, "Config_tag_name_invalid", "Config_tag_name_invalid"); 
  $.Constant({Static:true , Public:false}, "Argument_AddingDuplicate", "Argument_AddingDuplicate"); 
  $.Constant({Static:true , Public:false}, "Config_add_configurationsection_already_added", "Config_add_configurationsection_already_added"); 
  $.Constant({Static:true , Public:false}, "Config_add_configurationsection_already_exists", "Config_add_configurationsection_already_exists"); 
  $.Constant({Static:true , Public:false}, "Config_add_configurationsection_in_location_config", "Config_add_configurationsection_in_location_config"); 
  $.Constant({Static:true , Public:false}, "Config_add_configurationsectiongroup_already_added", "Config_add_configurationsectiongroup_already_added"); 
  $.Constant({Static:true , Public:false}, "Config_add_configurationsectiongroup_already_exists", "Config_add_configurationsectiongroup_already_exists"); 
  $.Constant({Static:true , Public:false}, "Config_add_configurationsectiongroup_in_location_config", "Config_add_configurationsectiongroup_in_location_config"); 
  $.Constant({Static:true , Public:false}, "Config_allow_exedefinition_error_application", "Config_allow_exedefinition_error_application"); 
  $.Constant({Static:true , Public:false}, "Config_allow_exedefinition_error_machine", "Config_allow_exedefinition_error_machine"); 
  $.Constant({Static:true , Public:false}, "Config_allow_exedefinition_error_roaminguser", "Config_allow_exedefinition_error_roaminguser"); 
  $.Constant({Static:true , Public:false}, "Config_appsettings_declaration_invalid", "Config_appsettings_declaration_invalid"); 
  $.Constant({Static:true , Public:false}, "Config_base_attribute_locked", "Config_base_attribute_locked"); 
  $.Constant({Static:true , Public:false}, "Config_base_collection_item_locked_cannot_clear", "Config_base_collection_item_locked_cannot_clear"); 
  $.Constant({Static:true , Public:false}, "Config_base_collection_item_locked", "Config_base_collection_item_locked"); 
  $.Constant({Static:true , Public:false}, "Config_base_cannot_add_items_above_inherited_items", "Config_base_cannot_add_items_above_inherited_items"); 
  $.Constant({Static:true , Public:false}, "Config_base_cannot_add_items_below_inherited_items", "Config_base_cannot_add_items_below_inherited_items"); 
  $.Constant({Static:true , Public:false}, "Config_base_cannot_remove_inherited_items", "Config_base_cannot_remove_inherited_items"); 
  $.Constant({Static:true , Public:false}, "Config_base_collection_elements_may_not_be_removed", "Config_base_collection_elements_may_not_be_removed"); 
  $.Constant({Static:true , Public:false}, "Config_base_collection_entry_already_exists", "Config_base_collection_entry_already_exists"); 
  $.Constant({Static:true , Public:false}, "Config_base_collection_entry_already_removed", "Config_base_collection_entry_already_removed"); 
  $.Constant({Static:true , Public:false}, "Config_base_collection_entry_not_found", "Config_base_collection_entry_not_found"); 
  $.Constant({Static:true , Public:false}, "Config_base_element_cannot_have_multiple_child_elements", "Config_base_element_cannot_have_multiple_child_elements"); 
  $.Constant({Static:true , Public:false}, "Config_base_element_default_collection_cannot_be_locked", "Config_base_element_default_collection_cannot_be_locked"); 
  $.Constant({Static:true , Public:false}, "Config_base_element_locked", "Config_base_element_locked"); 
  $.Constant({Static:true , Public:false}, "Config_base_expected_enum", "Config_base_expected_enum"); 
  $.Constant({Static:true , Public:false}, "Config_base_expected_to_find_element", "Config_base_expected_to_find_element"); 
  $.Constant({Static:true , Public:false}, "Config_base_invalid_attribute_to_lock", "Config_base_invalid_attribute_to_lock"); 
  $.Constant({Static:true , Public:false}, "Config_base_invalid_attribute_to_lock_by_add", "Config_base_invalid_attribute_to_lock_by_add"); 
  $.Constant({Static:true , Public:false}, "Config_base_invalid_element_key", "Config_base_invalid_element_key"); 
  $.Constant({Static:true , Public:false}, "Config_base_invalid_element_to_lock", "Config_base_invalid_element_to_lock"); 
  $.Constant({Static:true , Public:false}, "Config_base_invalid_element_to_lock_by_add", "Config_base_invalid_element_to_lock_by_add"); 
  $.Constant({Static:true , Public:false}, "Config_base_property_is_not_a_configuration_element", "Config_base_property_is_not_a_configuration_element"); 
  $.Constant({Static:true , Public:false}, "Config_base_read_only", "Config_base_read_only"); 
  $.Constant({Static:true , Public:false}, "Config_base_required_attribute_locked", "Config_base_required_attribute_locked"); 
  $.Constant({Static:true , Public:false}, "Config_base_required_attribute_lock_attempt", "Config_base_required_attribute_lock_attempt"); 
  $.Constant({Static:true , Public:false}, "Config_base_required_attribute_missing", "Config_base_required_attribute_missing"); 
  $.Constant({Static:true , Public:false}, "Config_base_section_cannot_contain_cdata", "Config_base_section_cannot_contain_cdata"); 
  $.Constant({Static:true , Public:false}, "Config_base_section_invalid_content", "Config_base_section_invalid_content"); 
  $.Constant({Static:true , Public:false}, "Config_base_unrecognized_attribute", "Config_base_unrecognized_attribute"); 
  $.Constant({Static:true , Public:false}, "Config_base_unrecognized_element", "Config_base_unrecognized_element"); 
  $.Constant({Static:true , Public:false}, "Config_base_unrecognized_element_name", "Config_base_unrecognized_element_name"); 
  $.Constant({Static:true , Public:false}, "Config_base_value_cannot_contain", "Config_base_value_cannot_contain"); 
  $.Constant({Static:true , Public:false}, "Config_cannot_edit_configurationsection_in_location_config", "Config_cannot_edit_configurationsection_in_location_config"); 
  $.Constant({Static:true , Public:false}, "Config_cannot_edit_configurationsection_parentsection", "Config_cannot_edit_configurationsection_parentsection"); 
  $.Constant({Static:true , Public:false}, "Config_cannot_edit_configurationsection_when_location_locked", "Config_cannot_edit_configurationsection_when_location_locked"); 
  $.Constant({Static:true , Public:false}, "Config_cannot_edit_configurationsection_when_locked", "Config_cannot_edit_configurationsection_when_locked"); 
  $.Constant({Static:true , Public:false}, "Config_cannot_edit_configurationsection_when_not_attached", "Config_cannot_edit_configurationsection_when_not_attached"); 
  $.Constant({Static:true , Public:false}, "Config_cannot_edit_configurationsection_when_it_is_implicit", "Config_cannot_edit_configurationsection_when_it_is_implicit"); 
  $.Constant({Static:true , Public:false}, "Config_cannot_edit_configurationsection_when_it_is_undeclared", "Config_cannot_edit_configurationsection_when_it_is_undeclared"); 
  $.Constant({Static:true , Public:false}, "Config_cannot_edit_configurationsectiongroup_in_location_config", "Config_cannot_edit_configurationsectiongroup_in_location_config"); 
  $.Constant({Static:true , Public:false}, "Config_cannot_edit_configurationsectiongroup_when_not_attached", "Config_cannot_edit_configurationsectiongroup_when_not_attached"); 
  $.Constant({Static:true , Public:false}, "Config_cannot_edit_locationattriubtes", "Config_cannot_edit_locationattriubtes"); 
  $.Constant({Static:true , Public:false}, "Config_cannot_open_config_source", "Config_cannot_open_config_source"); 
  $.Constant({Static:true , Public:false}, "Config_client_config_init_error", "Config_client_config_init_error"); 
  $.Constant({Static:true , Public:false}, "Config_client_config_init_security", "Config_client_config_init_security"); 
  $.Constant({Static:true , Public:false}, "Config_client_config_too_many_configsections_elements", "Config_client_config_too_many_configsections_elements"); 
  $.Constant({Static:true , Public:false}, "Config_configmanager_open_noexe", "Config_configmanager_open_noexe"); 
  $.Constant({Static:true , Public:false}, "Config_configsection_parentnotvalid", "Config_configsection_parentnotvalid"); 
  $.Constant({Static:true , Public:false}, "Config_connectionstrings_declaration_invalid", "Config_connectionstrings_declaration_invalid"); 
  $.Constant({Static:true , Public:false}, "Config_data_read_count_mismatch", "Config_data_read_count_mismatch"); 
  $.Constant({Static:true , Public:false}, "Config_element_no_context", "Config_element_no_context"); 
  $.Constant({Static:true , Public:false}, "Config_empty_lock_attributes_except", "Config_empty_lock_attributes_except"); 
  $.Constant({Static:true , Public:false}, "Config_empty_lock_attributes_except_effective", "Config_empty_lock_attributes_except_effective"); 
  $.Constant({Static:true , Public:false}, "Config_empty_lock_element_except", "Config_empty_lock_element_except"); 
  $.Constant({Static:true , Public:false}, "Config_exception_in_config_section_handler", "Config_exception_in_config_section_handler"); 
  $.Constant({Static:true , Public:false}, "Config_file_doesnt_have_root_configuration", "Config_file_doesnt_have_root_configuration"); 
  $.Constant({Static:true , Public:false}, "Config_file_has_changed", "Config_file_has_changed"); 
  $.Constant({Static:true , Public:false}, "Config_getparentconfigurationsection_first_instance", "Config_getparentconfigurationsection_first_instance"); 
  $.Constant({Static:true , Public:false}, "Config_inconsistent_location_attributes", "Config_inconsistent_location_attributes"); 
  $.Constant({Static:true , Public:false}, "Config_invalid_attributes_for_write", "Config_invalid_attributes_for_write"); 
  $.Constant({Static:true , Public:false}, "Config_invalid_boolean_attribute", "Config_invalid_boolean_attribute"); 
  $.Constant({Static:true , Public:false}, "Config_invalid_configurationsection_constructor", "Config_invalid_configurationsection_constructor"); 
  $.Constant({Static:true , Public:false}, "Config_invalid_node_type", "Config_invalid_node_type"); 
  $.Constant({Static:true , Public:false}, "Config_location_location_not_allowed", "Config_location_location_not_allowed"); 
  $.Constant({Static:true , Public:false}, "Config_location_path_invalid_character", "Config_location_path_invalid_character"); 
  $.Constant({Static:true , Public:false}, "Config_location_path_invalid_first_character", "Config_location_path_invalid_first_character"); 
  $.Constant({Static:true , Public:false}, "Config_location_path_invalid_last_character", "Config_location_path_invalid_last_character"); 
  $.Constant({Static:true , Public:false}, "Config_missing_required_attribute", "Config_missing_required_attribute"); 
  $.Constant({Static:true , Public:false}, "Config_more_data_than_expected", "Config_more_data_than_expected"); 
  $.Constant({Static:true , Public:false}, "Config_name_value_file_section_file_invalid_root", "Config_name_value_file_section_file_invalid_root"); 
  $.Constant({Static:true , Public:false}, "Config_namespace_invalid", "Config_namespace_invalid"); 
  $.Constant({Static:true , Public:false}, "Config_no_stream_to_write", "Config_no_stream_to_write"); 
  $.Constant({Static:true , Public:false}, "Config_not_allowed_to_encrypt_this_section", "Config_not_allowed_to_encrypt_this_section"); 
  $.Constant({Static:true , Public:false}, "Config_object_is_null", "Config_object_is_null"); 
  $.Constant({Static:true , Public:false}, "Config_operation_not_runtime", "Config_operation_not_runtime"); 
  $.Constant({Static:true , Public:false}, "Config_properties_may_not_be_derived_from_configuration_section", "Config_properties_may_not_be_derived_from_configuration_section"); 
  $.Constant({Static:true , Public:false}, "Config_protection_section_not_found", "Config_protection_section_not_found"); 
  $.Constant({Static:true , Public:false}, "Config_provider_must_implement_type", "Config_provider_must_implement_type"); 
  $.Constant({Static:true , Public:false}, "Config_root_section_group_cannot_be_edited", "Config_root_section_group_cannot_be_edited"); 
  $.Constant({Static:true , Public:false}, "Config_section_allow_definition_attribute_invalid", "Config_section_allow_definition_attribute_invalid"); 
  $.Constant({Static:true , Public:false}, "Config_section_allow_exe_definition_attribute_invalid", "Config_section_allow_exe_definition_attribute_invalid"); 
  $.Constant({Static:true , Public:false}, "Config_section_cannot_be_used_in_location", "Config_section_cannot_be_used_in_location"); 
  $.Constant({Static:true , Public:false}, "Config_section_group_missing_public_constructor", "Config_section_group_missing_public_constructor"); 
  $.Constant({Static:true , Public:false}, "Config_section_locked", "Config_section_locked"); 
  $.Constant({Static:true , Public:false}, "Config_sections_must_be_unique", "Config_sections_must_be_unique"); 
  $.Constant({Static:true , Public:false}, "Config_source_cannot_be_shared", "Config_source_cannot_be_shared"); 
  $.Constant({Static:true , Public:false}, "Config_source_parent_conflict", "Config_source_parent_conflict"); 
  $.Constant({Static:true , Public:false}, "Config_source_file_format", "Config_source_file_format"); 
  $.Constant({Static:true , Public:false}, "Config_source_invalid_format", "Config_source_invalid_format"); 
  $.Constant({Static:true , Public:false}, "Config_source_invalid_chars", "Config_source_invalid_chars"); 
  $.Constant({Static:true , Public:false}, "Config_source_requires_file", "Config_source_requires_file"); 
  $.Constant({Static:true , Public:false}, "Config_source_syntax_error", "Config_source_syntax_error"); 
  $.Constant({Static:true , Public:false}, "Config_system_already_set", "Config_system_already_set"); 
  $.Constant({Static:true , Public:false}, "Config_tag_name_already_defined", "Config_tag_name_already_defined"); 
  $.Constant({Static:true , Public:false}, "Config_tag_name_already_defined_at_this_level", "Config_tag_name_already_defined_at_this_level"); 
  $.Constant({Static:true , Public:false}, "Config_tag_name_cannot_be_location", "Config_tag_name_cannot_be_location"); 
  $.Constant({Static:true , Public:false}, "Config_tag_name_cannot_begin_with_config", "Config_tag_name_cannot_begin_with_config"); 
  $.Constant({Static:true , Public:false}, "Config_type_doesnt_inherit_from_type", "Config_type_doesnt_inherit_from_type"); 
  $.Constant({Static:true , Public:false}, "Config_unexpected_element_end", "Config_unexpected_element_end"); 
  $.Constant({Static:true , Public:false}, "Config_unexpected_element_name", "Config_unexpected_element_name"); 
  $.Constant({Static:true , Public:false}, "Config_unexpected_node_type", "Config_unexpected_node_type"); 
  $.Constant({Static:true , Public:false}, "Config_unrecognized_configuration_section", "Config_unrecognized_configuration_section"); 
  $.Constant({Static:true , Public:false}, "Config_write_failed", "Config_write_failed"); 
  $.Constant({Static:true , Public:false}, "Converter_timespan_not_in_second", "Converter_timespan_not_in_second"); 
  $.Constant({Static:true , Public:false}, "Converter_unsupported_value_type", "Converter_unsupported_value_type"); 
  $.Constant({Static:true , Public:false}, "Decryption_failed", "Decryption_failed"); 
  $.Constant({Static:true , Public:false}, "Default_value_conversion_error_from_string", "Default_value_conversion_error_from_string"); 
  $.Constant({Static:true , Public:false}, "Default_value_wrong_type", "Default_value_wrong_type"); 
  $.Constant({Static:true , Public:false}, "DPAPI_bad_data", "DPAPI_bad_data"); 
  $.Constant({Static:true , Public:false}, "Empty_attribute", "Empty_attribute"); 
  $.Constant({Static:true , Public:false}, "EncryptedNode_not_found", "EncryptedNode_not_found"); 
  $.Constant({Static:true , Public:false}, "EncryptedNode_is_in_invalid_format", "EncryptedNode_is_in_invalid_format"); 
  $.Constant({Static:true , Public:false}, "Encryption_failed", "Encryption_failed"); 
  $.Constant({Static:true , Public:false}, "Expect_bool_value_for_DoNotShowUI", "Expect_bool_value_for_DoNotShowUI"); 
  $.Constant({Static:true , Public:false}, "Expect_bool_value_for_useMachineProtection", "Expect_bool_value_for_useMachineProtection"); 
  $.Constant({Static:true , Public:false}, "IndexOutOfRange", "IndexOutOfRange"); 
  $.Constant({Static:true , Public:false}, "Invalid_enum_value", "Invalid_enum_value"); 
  $.Constant({Static:true , Public:false}, "Key_container_doesnt_exist_or_access_denied", "Key_container_doesnt_exist_or_access_denied"); 
  $.Constant({Static:true , Public:false}, "Must_add_to_config_before_protecting_it", "Must_add_to_config_before_protecting_it"); 
  $.Constant({Static:true , Public:false}, "No_converter", "No_converter"); 
  $.Constant({Static:true , Public:false}, "No_exception_information_available", "No_exception_information_available"); 
  $.Constant({Static:true , Public:false}, "Property_name_reserved", "Property_name_reserved"); 
  $.Constant({Static:true , Public:false}, "Item_name_reserved", "Item_name_reserved"); 
  $.Constant({Static:true , Public:false}, "Basicmap_item_name_reserved", "Basicmap_item_name_reserved"); 
  $.Constant({Static:true , Public:false}, "ProtectedConfigurationProvider_not_found", "ProtectedConfigurationProvider_not_found"); 
  $.Constant({Static:true , Public:false}, "Regex_validator_error", "Regex_validator_error"); 
  $.Constant({Static:true , Public:false}, "String_null_or_empty", "String_null_or_empty"); 
  $.Constant({Static:true , Public:false}, "Subclass_validator_error", "Subclass_validator_error"); 
  $.Constant({Static:true , Public:false}, "Top_level_conversion_error_from_string", "Top_level_conversion_error_from_string"); 
  $.Constant({Static:true , Public:false}, "Top_level_conversion_error_to_string", "Top_level_conversion_error_to_string"); 
  $.Constant({Static:true , Public:false}, "Top_level_validation_error", "Top_level_validation_error"); 
  $.Constant({Static:true , Public:false}, "Type_cannot_be_resolved", "Type_cannot_be_resolved"); 
  $.Constant({Static:true , Public:false}, "TypeNotPublic", "TypeNotPublic"); 
  $.Constant({Static:true , Public:false}, "Unrecognized_initialization_value", "Unrecognized_initialization_value"); 
  $.Constant({Static:true , Public:false}, "UseMachineContainer_must_be_bool", "UseMachineContainer_must_be_bool"); 
  $.Constant({Static:true , Public:false}, "UseOAEP_must_be_bool", "UseOAEP_must_be_bool"); 
  $.Constant({Static:true , Public:false}, "Validation_scalar_range_violation_not_different", "Validation_scalar_range_violation_not_different"); 
  $.Constant({Static:true , Public:false}, "Validation_scalar_range_violation_not_equal", "Validation_scalar_range_violation_not_equal"); 
  $.Constant({Static:true , Public:false}, "Validation_scalar_range_violation_not_in_range", "Validation_scalar_range_violation_not_in_range"); 
  $.Constant({Static:true , Public:false}, "Validation_scalar_range_violation_not_outside_range", "Validation_scalar_range_violation_not_outside_range"); 
  $.Constant({Static:true , Public:false}, "Validator_Attribute_param_not_validator", "Validator_Attribute_param_not_validator"); 
  $.Constant({Static:true , Public:false}, "Validator_does_not_support_elem_type", "Validator_does_not_support_elem_type"); 
  $.Constant({Static:true , Public:false}, "Validator_does_not_support_prop_type", "Validator_does_not_support_prop_type"); 
  $.Constant({Static:true , Public:false}, "Validator_element_not_valid", "Validator_element_not_valid"); 
  $.Constant({Static:true , Public:false}, "Validator_method_not_found", "Validator_method_not_found"); 
  $.Constant({Static:true , Public:false}, "Validator_min_greater_than_max", "Validator_min_greater_than_max"); 
  $.Constant({Static:true , Public:false}, "Validator_scalar_resolution_violation", "Validator_scalar_resolution_violation"); 
  $.Constant({Static:true , Public:false}, "Validator_string_invalid_chars", "Validator_string_invalid_chars"); 
  $.Constant({Static:true , Public:false}, "Validator_string_max_length", "Validator_string_max_length"); 
  $.Constant({Static:true , Public:false}, "Validator_string_min_length", "Validator_string_min_length"); 
  $.Constant({Static:true , Public:false}, "Validator_value_type_invalid", "Validator_value_type_invalid"); 
  $.Constant({Static:true , Public:false}, "Validator_multiple_validator_attributes", "Validator_multiple_validator_attributes"); 
  $.Constant({Static:true , Public:false}, "Validator_timespan_value_must_be_positive", "Validator_timespan_value_must_be_positive"); 
  $.Constant({Static:true , Public:false}, "WrongType_of_Protected_provider", "WrongType_of_Protected_provider"); 
  $.Constant({Static:true , Public:false}, "Type_from_untrusted_assembly", "Type_from_untrusted_assembly"); 
  $.Constant({Static:true , Public:false}, "Config_element_locking_not_supported", "Config_element_locking_not_supported"); 
  $.Constant({Static:true , Public:false}, "Config_element_null_instance", "Config_element_null_instance"); 
  $.Constant({Static:true , Public:false}, "ConfigurationPermissionBadXml", "ConfigurationPermissionBadXml"); 
  $.Constant({Static:true , Public:false}, "ConfigurationPermission_Denied", "ConfigurationPermission_Denied"); 
  $.Constant({Static:true , Public:false}, "Section_from_untrusted_assembly", "Section_from_untrusted_assembly"); 
  $.Constant({Static:true , Public:false}, "Protection_provider_syntax_error", "Protection_provider_syntax_error"); 
  $.Constant({Static:true , Public:false}, "Protection_provider_invalid_format", "Protection_provider_invalid_format"); 
  $.Constant({Static:true , Public:false}, "Cannot_declare_or_remove_implicit_section", "Cannot_declare_or_remove_implicit_section"); 
  $.Constant({Static:true , Public:false}, "Config_reserved_attribute", "Config_reserved_attribute"); 
  $.Constant({Static:true , Public:false}, "Filename_in_SaveAs_is_used_already", "Filename_in_SaveAs_is_used_already"); 
  $.Constant({Static:true , Public:false}, "Provider_Already_Initialized", "Provider_Already_Initialized"); 
  $.Constant({Static:true , Public:false}, "Config_provider_name_null_or_empty", "Config_provider_name_null_or_empty"); 
  $.Constant({Static:true , Public:false}, "CollectionReadOnly", "CollectionReadOnly"); 
  $.Constant({Static:true , Public:false}, "Config_source_not_under_config_dir", "Config_source_not_under_config_dir"); 
  $.Constant({Static:true , Public:false}, "Config_source_invalid", "Config_source_invalid"); 
  $.Constant({Static:true , Public:false}, "Location_invalid_inheritInChildApplications_in_machine_or_root_web_config", "Location_invalid_inheritInChildApplications_in_machine_or_root_web_config"); 
  $.Constant({Static:true , Public:false}, "Cannot_change_both_AllowOverride_and_OverrideMode", "Cannot_change_both_AllowOverride_and_OverrideMode"); 
  $.Constant({Static:true , Public:false}, "Config_section_override_mode_attribute_invalid", "Config_section_override_mode_attribute_invalid"); 
  $.Constant({Static:true , Public:false}, "Invalid_override_mode_declaration", "Invalid_override_mode_declaration"); 
  $.Constant({Static:true , Public:false}, "Config_cannot_edit_locked_configurationsection_when_mode_is_not_allow", "Config_cannot_edit_locked_configurationsection_when_mode_is_not_allow"); 
  $.Constant({Static:true , Public:false}, "Machine_config_file_not_found", "Machine_config_file_not_found"); 
  $.Field({Static:true , Public:false}, "loader", $.Type); 
  $.Field({Static:false, Public:false}, "resources", $asm06.TypeRef("System.Resources.ResourceManager")); 
  $.Property({Static:true , Public:false}, "Culture", $asm06.TypeRef("System.Globalization.CultureInfo"));

  $.Property({Static:true , Public:true }, "Resources", $asm06.TypeRef("System.Resources.ResourceManager"));

});

JSIL.MakeStaticClass("System.ExternDll", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.Constant({Static:true , Public:true }, "Activeds", "activeds.dll"); 
  $.Constant({Static:true , Public:true }, "Advapi32", "advapi32.dll"); 
  $.Constant({Static:true , Public:true }, "Comctl32", "comctl32.dll"); 
  $.Constant({Static:true , Public:true }, "Comdlg32", "comdlg32.dll"); 
  $.Constant({Static:true , Public:true }, "Gdi32", "gdi32.dll"); 
  $.Constant({Static:true , Public:true }, "Gdiplus", "gdiplus.dll"); 
  $.Constant({Static:true , Public:true }, "Hhctrl", "hhctrl.ocx"); 
  $.Constant({Static:true , Public:true }, "Imm32", "imm32.dll"); 
  $.Constant({Static:true , Public:true }, "Kernel32", "kernel32.dll"); 
  $.Constant({Static:true , Public:true }, "Loadperf", "Loadperf.dll"); 
  $.Constant({Static:true , Public:true }, "Mscoree", "mscoree.dll"); 
  $.Constant({Static:true , Public:true }, "Clr", "clr.dll"); 
  $.Constant({Static:true , Public:true }, "Msi", "msi.dll"); 
  $.Constant({Static:true , Public:true }, "Mqrt", "mqrt.dll"); 
  $.Constant({Static:true , Public:true }, "Ntdll", "ntdll.dll"); 
  $.Constant({Static:true , Public:true }, "Ole32", "ole32.dll"); 
  $.Constant({Static:true , Public:true }, "Oleacc", "oleacc.dll"); 
  $.Constant({Static:true , Public:true }, "Oleaut32", "oleaut32.dll"); 
  $.Constant({Static:true , Public:true }, "Olepro32", "olepro32.dll"); 
  $.Constant({Static:true , Public:true }, "PerfCounter", "perfcounter.dll"); 
  $.Constant({Static:true , Public:true }, "Powrprof", "Powrprof.dll"); 
  $.Constant({Static:true , Public:true }, "Psapi", "psapi.dll"); 
  $.Constant({Static:true , Public:true }, "Shell32", "shell32.dll"); 
  $.Constant({Static:true , Public:true }, "Shfolder", "shfolder.dll"); 
  $.Constant({Static:true , Public:true }, "User32", "user32.dll"); 
  $.Constant({Static:true , Public:true }, "Uxtheme", "uxtheme.dll"); 
  $.Constant({Static:true , Public:true }, "WinMM", "winmm.dll"); 
  $.Constant({Static:true , Public:true }, "Winspool", "winspool.drv"); 
  $.Constant({Static:true , Public:true }, "Wtsapi32", "wtsapi32.dll"); 
  $.Constant({Static:true , Public:true }, "Version", "version.dll"); 
  $.Constant({Static:true , Public:true }, "Vsassert", "vsassert.dll"); 
  $.Constant({Static:true , Public:true }, "Fxassert", "Fxassert.dll"); 
  $.Constant({Static:true , Public:true }, "Shlwapi", "shlwapi.dll"); 
  $.Constant({Static:true , Public:true }, "Crypt32", "crypt32.dll"); 
  $.Constant({Static:true , Public:false}, "Odbc32", "odbc32.dll"); 
  $.Constant({Static:true , Public:false}, "SNI", "System.Data.dll"); 
  $.Constant({Static:true , Public:false}, "OciDll", "oci.dll"); 
  $.Constant({Static:true , Public:false}, "OraMtsDll", "oramts.dll"); 
});

JSIL.MakeStaticClass("System.HResults", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.Constant({Static:true , Public:false}, "Configuration", -2146232062); 
  $.Constant({Static:true , Public:false}, "Xml", -2146232000); 
  $.Constant({Static:true , Public:false}, "XmlSchema", -2146231999); 
  $.Constant({Static:true , Public:false}, "XmlXslt", -2146231998); 
  $.Constant({Static:true , Public:false}, "XmlXPath", -2146231997); 
  $.Constant({Static:true , Public:false}, "Data", -2146232032); 
  $.Constant({Static:true , Public:false}, "DataDeletedRowInaccessible", -2146232031); 
  $.Constant({Static:true , Public:false}, "DataDuplicateName", -2146232030); 
  $.Constant({Static:true , Public:false}, "DataInRowChangingEvent", -2146232029); 
  $.Constant({Static:true , Public:false}, "DataInvalidConstraint", -2146232028); 
  $.Constant({Static:true , Public:false}, "DataMissingPrimaryKey", -2146232027); 
  $.Constant({Static:true , Public:false}, "DataNoNullAllowed", -2146232026); 
  $.Constant({Static:true , Public:false}, "DataReadOnly", -2146232025); 
  $.Constant({Static:true , Public:false}, "DataRowNotInTable", -2146232024); 
  $.Constant({Static:true , Public:false}, "DataVersionNotFound", -2146232023); 
  $.Constant({Static:true , Public:false}, "DataConstraint", -2146232022); 
  $.Constant({Static:true , Public:false}, "StrongTyping", -2146232021); 
  $.Constant({Static:true , Public:false}, "SqlType", -2146232016); 
  $.Constant({Static:true , Public:false}, "SqlNullValue", -2146232015); 
  $.Constant({Static:true , Public:false}, "SqlTruncate", -2146232014); 
  $.Constant({Static:true , Public:false}, "AdapterMapping", -2146232013); 
  $.Constant({Static:true , Public:false}, "DataAdapter", -2146232012); 
  $.Constant({Static:true , Public:false}, "DBConcurrency", -2146232011); 
  $.Constant({Static:true , Public:false}, "OperationAborted", -2146232010); 
  $.Constant({Static:true , Public:false}, "InvalidUdt", -2146232009); 
  $.Constant({Static:true , Public:false}, "Metadata", -2146232007); 
  $.Constant({Static:true , Public:false}, "InvalidQuery", -2146232006); 
  $.Constant({Static:true , Public:false}, "CommandCompilation", -2146232005); 
  $.Constant({Static:true , Public:false}, "CommandExecution", -2146232004); 
  $.Constant({Static:true , Public:false}, "SqlException", -2146232060); 
  $.Constant({Static:true , Public:false}, "OdbcException", -2146232009); 
  $.Constant({Static:true , Public:false}, "OracleException", -2146232008); 
  $.Constant({Static:true , Public:false}, "ConnectionPlanException", -2146232003); 
  $.Constant({Static:true , Public:false}, "NteBadKeySet", -2146893802); 
  $.Constant({Static:true , Public:false}, "Win32AccessDenied", -2147024891); 
  $.Constant({Static:true , Public:false}, "Win32InvalidHandle", -2147024890); 
  $.Constant({Static:true , Public:false}, "License", -2146232063); 
  $.Constant({Static:true , Public:false}, "InternalBufferOverflow", -2146232059); 
  $.Constant({Static:true , Public:false}, "ServiceControllerTimeout", -2146232058); 
  $.Constant({Static:true , Public:false}, "Install", -2146232057); 
  $.Constant({Static:true , Public:false}, "EFail", -2147467259); 
});

JSIL.MakeStaticClass("System.Configuration.ConfigPathUtility", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:true , Public:false}, "Combine", 
    $sig.make(0x25C62, $.String, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetName", 
    $sig.make(0x25C6E, $.String, [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetParts", 
    $sig.make(0x25C63, $jsilcore.TypeRef("System.Array", [$.String]), [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "IsValid", 
    $sig.make(0x25C60, $.Boolean, [$.String], [])
  );

  $.Constant({Static:true , Public:false}, "SeparatorChar", "/"); 
});

JSIL.MakeStaticClass("System.Configuration.PrivilegedConfigurationManager", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:true , Public:false}, "get_ConnectionStrings", 
    $sig.make(0x25C7B, $asm08.TypeRef("System.Configuration.ConnectionStringSettingsCollection"), [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetSection", 
    $sig.make(0x25C7D, $.Object, [$.String], [])
  );

  $.Property({Static:true , Public:false}, "ConnectionStrings", $asm08.TypeRef("System.Configuration.ConnectionStringSettingsCollection"));

});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.ClientConfigPaths", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25B47, null, [$.String, $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CombineIfValid", 
    $sig.make(0x25B4F, $.String, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ApplicationConfigUri", 
    $sig.make(0x25B38, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ApplicationUri", 
    $sig.make(0x25B37, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_ControlEvidencePermission", 
    $sig.make(0x25B43, $asm06.TypeRef("System.Security.Permissions.SecurityPermission"), [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_Current", 
    $sig.make(0x25B35, $.Type, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_HasEntryAssembly", 
    $sig.make(0x25B36, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_HasLocalConfig", 
    $sig.make(0x25B40, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_HasRoamingConfig", 
    $sig.make(0x25B3B, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_LocalConfigDirectory", 
    $sig.make(0x25B3F, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_LocalConfigFilename", 
    $sig.make(0x25B3D, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ProductName", 
    $sig.make(0x25B41, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ProductVersion", 
    $sig.make(0x25B42, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_RoamingConfigDirectory", 
    $sig.make(0x25B3A, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_RoamingConfigFilename", 
    $sig.make(0x25B39, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_SerializationFormatterPermission", 
    $sig.make(0x25B46, $asm06.TypeRef("System.Security.Permissions.SecurityPermission"), [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetEvidenceInfo", 
    $sig.make(0x25B52, $.Object, [
        $asm06.TypeRef("System.AppDomain"), $.String, 
        $jsilcore.TypeRef("JSIL.Reference", [$.String])
      ], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetHash", 
    $sig.make(0x25B54, $.String, [$asm06.TypeRef("System.IO.Stream")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetPaths", 
    $sig.make(0x25B4A, $.Type, [$.String, $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetTypeAndHashSuffix", 
    $sig.make(0x25B50, $.String, [$asm06.TypeRef("System.AppDomain"), $.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IsClickOnceDeployed", 
    $sig.make(0x25B55, $.Boolean, [$asm06.TypeRef("System.AppDomain")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "MakeVersionIndependent", 
    $sig.make(0x25B56, $asm06.TypeRef("System.Security.Policy.StrongName"), [$asm06.TypeRef("System.Security.Policy.StrongName")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "RefreshCurrent", 
    $sig.make(0x25B4C, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SetNamesAndVersion", 
    $sig.make(0x25B57, null, [
        $.String, $asm06.TypeRef("System.Reflection.Assembly"), 
        $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "ToBase32StringSuitableForDirName", 
    $sig.make(0x25B58, $.String, [$jsilcore.TypeRef("System.Array", [$.Byte])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Validate", 
    $sig.make(0x25B59, $.String, [$.String, $.Boolean], [])
  );

  $.Constant({Static:true , Public:false}, "UserConfigFilename", "user.config"); 
  $.Constant({Static:true , Public:false}, "ClickOnceDataDirectory", "DataDirectory"); 
  $.Constant({Static:true , Public:false}, "ConfigExtension", ".config"); 
  $.Constant({Static:true , Public:false}, "MAX_PATH", 260); 
  $.Constant({Static:true , Public:false}, "MAX_LENGTH_TO_USE", 25); 
  $.Constant({Static:true , Public:false}, "FILE_URI_LOCAL", "file:///"); 
  $.Constant({Static:true , Public:false}, "FILE_URI_UNC", "file://"); 
  $.Constant({Static:true , Public:false}, "FILE_URI", "file:"); 
  $.Constant({Static:true , Public:false}, "HTTP_URI", "http://"); 
  $.Constant({Static:true , Public:false}, "StrongNameDesc", "StrongName"); 
  $.Constant({Static:true , Public:false}, "UrlDesc", "Url"); 
  $.Constant({Static:true , Public:false}, "PathDesc", "Path"); 
  $.Field({Static:true , Public:false}, "s_Base32Char", $jsilcore.TypeRef("System.Array", [$.Char])); 
  $.Field({Static:true , Public:false}, "s_current", $.Type); 
  $.Field({Static:true , Public:false}, "s_currentIncludesUserConfig", $asm06.TypeRef("System.Boolean")); 
  $.Field({Static:true , Public:false}, "s_serializationPerm", $asm06.TypeRef("System.Security.Permissions.SecurityPermission")); 
  $.Field({Static:true , Public:false}, "s_controlEvidencePerm", $asm06.TypeRef("System.Security.Permissions.SecurityPermission")); 
  $.Field({Static:false, Public:false}, "_hasEntryAssembly", $.Boolean); 
  $.Field({Static:false, Public:false}, "_includesUserConfig", $.Boolean); 
  $.Field({Static:false, Public:false}, "_applicationUri", $.String); 
  $.Field({Static:false, Public:false}, "_applicationConfigUri", $.String); 
  $.Field({Static:false, Public:false}, "_roamingConfigDirectory", $.String); 
  $.Field({Static:false, Public:false}, "_roamingConfigFilename", $.String); 
  $.Field({Static:false, Public:false}, "_localConfigDirectory", $.String); 
  $.Field({Static:false, Public:false}, "_localConfigFilename", $.String); 
  $.Field({Static:false, Public:false}, "_companyName", $.String); 
  $.Field({Static:false, Public:false}, "_productName", $.String); 
  $.Field({Static:false, Public:false}, "_productVersion", $.String); 
  $.Property({Static:true , Public:false}, "Current", $.Type);

  $.Property({Static:false, Public:false}, "HasEntryAssembly", $.Boolean);

  $.Property({Static:false, Public:false}, "ApplicationUri", $.String);

  $.Property({Static:false, Public:false}, "ApplicationConfigUri", $.String);

  $.Property({Static:false, Public:false}, "RoamingConfigFilename", $.String);

  $.Property({Static:false, Public:false}, "RoamingConfigDirectory", $.String);

  $.Property({Static:false, Public:false}, "HasRoamingConfig", $.Boolean);

  $.Property({Static:false, Public:false}, "LocalConfigFilename", $.String);

  $.Property({Static:false, Public:false}, "LocalConfigDirectory", $.String);

  $.Property({Static:false, Public:false}, "HasLocalConfig", $.Boolean);

  $.Property({Static:false, Public:false}, "ProductName", $.String);

  $.Property({Static:false, Public:false}, "ProductVersion", $.String);

  $.Property({Static:true , Public:false}, "ControlEvidencePermission", $asm06.TypeRef("System.Security.Permissions.SecurityPermission"));

  $.Property({Static:true , Public:false}, "SerializationFormatterPermission", $asm06.TypeRef("System.Security.Permissions.SecurityPermission"));

});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.Internal.DelegatingConfigHost"), "System.Configuration.ClientConfigurationHost", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25C8A, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CreateConfigurationContext", 
    $sig.make(0x25CC2, $.Object, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CreateDeprecatedConfigContext", 
    $sig.make(0x25CC1, $.Object, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "DeleteStream", 
    $sig.make(0x25CB3, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ConfigPaths", 
    $sig.make(0x25C71, $asm08.TypeRef("System.Configuration.ClientConfigPaths"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_HasLocalConfig", 
    $sig.make(0x25C7E, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_HasRoamingConfig", 
    $sig.make(0x25C73, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsAppConfigHttp", 
    $sig.make(0x25C80, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_MachineConfigFilePath", 
    $sig.make(0x25C72, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_SupportsLocation", 
    $sig.make(0x25C85, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_SupportsPath", 
    $sig.make(0x25C83, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_SupportsRefresh", 
    $sig.make(0x25C81, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetRestrictedPermissions", 
    $sig.make(0x25CBF, null, [
        $asm08.TypeRef("System.Configuration.Internal.IInternalConfigRecord"), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Security.PermissionSet")]), 
        $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetStreamName", 
    $sig.make(0x25CAD, $.String, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetStreamNameForConfigSource", 
    $sig.make(0x25CAE, $.String, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetStreamVersion", 
    $sig.make(0x25CAF, $.Object, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetUserLevel", 
    $sig.make(0x25CC4, $asm08.TypeRef("System.Configuration.ConfigurationUserLevel"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Impersonate", 
    $sig.make(0x25CC0, $asm06.TypeRef("System.IDisposable"), [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Init", 
    $sig.make(0x25CA5, null, [$asm08.TypeRef("System.Configuration.Internal.IInternalConfigRoot"), $jsilcore.TypeRef("System.Array", [$.Object])], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "InitForConfiguration", 
    $sig.make(0x25CA7, null, [
        $jsilcore.TypeRef("JSIL.Reference", [$.String]), $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
        $jsilcore.TypeRef("JSIL.Reference", [$.String]), $asm08.TypeRef("System.Configuration.Internal.IInternalConfigRoot"), 
        $jsilcore.TypeRef("System.Array", [$.Object])
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "IsConfigRecordRequired", 
    $sig.make(0x25CAC, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "IsDefinitionAllowed", 
    $sig.make(0x25CB5, $.Boolean, [
        $.String, $asm08.TypeRef("System.Configuration.ConfigurationAllowDefinition"), 
        $asm08.TypeRef("System.Configuration.ConfigurationAllowExeDefinition")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "IsInitDelayed", 
    $sig.make(0x25CA9, $.Boolean, [$asm08.TypeRef("System.Configuration.Internal.IInternalConfigRecord")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "IsTrustedConfigPath", 
    $sig.make(0x25CBE, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IsUserConfig", 
    $sig.make(0x25C9F, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "OpenExeConfiguration", 
    $sig.make(0x25CC6, $asm08.TypeRef("System.Configuration.Configuration"), [
        $asm08.TypeRef("System.Configuration.ConfigurationFileMap"), $.Boolean, 
        $asm08.TypeRef("System.Configuration.ConfigurationUserLevel"), $.String
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "OpenStreamForRead", 
    $sig.make(0x25CB0, $asm06.TypeRef("System.IO.Stream"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "OpenStreamForWrite", 
    $sig.make(0x25CB1, $asm06.TypeRef("System.IO.Stream"), [
        $.String, $.String, 
        $jsilcore.TypeRef("JSIL.Reference", [$.Object])
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "PrefetchAll", 
    $sig.make(0x25CBB, $.Boolean, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "PrefetchSection", 
    $sig.make(0x25CBD, $.Boolean, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "RefreshConfigPaths", 
    $sig.make(0x25C8C, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "RequireCompleteInit", 
    $sig.make(0x25CAB, null, [$asm08.TypeRef("System.Configuration.Internal.IInternalConfigRecord")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigClientHost.GetExeConfigPath", 
    $sig.make(0x25CA0, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigClientHost.GetLocalUserConfigPath", 
    $sig.make(0x25CA4, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigClientHost.GetRoamingUserConfigPath", 
    $sig.make(0x25CA1, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigClientHost.IsExeConfig", 
    $sig.make(0x25C98, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigClientHost.IsLocalUserConfig", 
    $sig.make(0x25C9E, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigClientHost.IsRoamingUserConfig", 
    $sig.make(0x25C9B, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "VerifyDefinitionAllowed", 
    $sig.make(0x25CBA, null, [
        $.String, $asm08.TypeRef("System.Configuration.ConfigurationAllowDefinition"), 
        $asm08.TypeRef("System.Configuration.ConfigurationAllowExeDefinition"), $asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo")
      ], [])
  );

  $.Constant({Static:true , Public:false}, "MachineConfigName", "MACHINE"); 
  $.Constant({Static:true , Public:false}, "ExeConfigName", "EXE"); 
  $.Constant({Static:true , Public:false}, "RoamingUserConfigName", "ROAMING_USER"); 
  $.Constant({Static:true , Public:false}, "LocalUserConfigName", "LOCAL_USER"); 
  $.Constant({Static:true , Public:false}, "MachineConfigPath", "MACHINE"); 
  $.Constant({Static:true , Public:false}, "ExeConfigPath", "MACHINE/EXE"); 
  $.Constant({Static:true , Public:false}, "RoamingUserConfigPath", "MACHINE/EXE/ROAMING_USER"); 
  $.Constant({Static:true , Public:false}, "LocalUserConfigPath", "MACHINE/EXE/ROAMING_USER/LOCAL_USER"); 
  $.Constant({Static:true , Public:false}, "ConfigExtension", ".config"); 
  $.Constant({Static:true , Public:false}, "MachineConfigFilename", "machine.config"); 
  $.Constant({Static:true , Public:false}, "MachineConfigSubdirectory", "Config"); 
  $.Field({Static:true , Public:false}, "s_init", $.Object); 
  $.Field({Static:true , Public:false}, "s_version", $.Object); 
  $.Field({Static:true , Public:false}, "s_machineConfigFilePath", $.String); 
  $.Field({Static:false, Public:false}, "_exePath", $.String); 
  $.Field({Static:false, Public:false}, "_configPaths", $asm08.TypeRef("System.Configuration.ClientConfigPaths")); 
  $.Field({Static:false, Public:false}, "_fileMap", $asm08.TypeRef("System.Configuration.ExeConfigurationFileMap")); 
  $.Field({Static:false, Public:false}, "_initComplete", $.Boolean); 
  $.Property({Static:false, Public:false}, "ConfigPaths", $asm08.TypeRef("System.Configuration.ClientConfigPaths"));

  $.Property({Static:true , Public:false}, "MachineConfigFilePath", $.String);

  $.Property({Static:false, Public:false}, "HasRoamingConfig", $.Boolean);

  $.Property({Static:false, Public:false}, "HasLocalConfig", $.Boolean);

  $.Property({Static:false, Public:false}, "IsAppConfigHttp", $.Boolean);

  $.Property({Static:false, Public:true , Virtual:true }, "SupportsRefresh", $.Boolean);

  $.Property({Static:false, Public:true , Virtual:true }, "SupportsPath", $.Boolean);

  $.Property({Static:false, Public:true , Virtual:true }, "SupportsLocation", $.Boolean);

  $.ImplementInterfaces($asm08.TypeRef("System.Configuration.Internal.IInternalConfigClientHost"))
});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.ClientConfigurationSystem", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25D09, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "DoesSectionOnlyUseMachineConfig", 
    $sig.make(0x25D0D, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "EnsureInit", 
    $sig.make(0x25D0E, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IsSectionUsedInInit", 
    $sig.make(0x25D0B, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "OnConfigRemoved", 
    $sig.make(0x25D10, null, [$.Object, $asm08.TypeRef("System.Configuration.Internal.InternalConfigEventArgs")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "PrepareClientConfigSystem", 
    $sig.make(0x25D0F, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigSystem.get_SupportsUserConfig", 
    $sig.make(0x25D04, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigSystem.GetSection", 
    $sig.make(0x25D11, $.Object, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigSystem.RefreshConfig", 
    $sig.make(0x25D12, null, [$.String], [])
  );

  $.Constant({Static:true , Public:false}, "SystemDiagnosticsConfigKey", "system.diagnostics"); 
  $.Constant({Static:true , Public:false}, "SystemNetGroupKey", "system.net/"); 
  $.Field({Static:false, Public:false}, "_configSystem", $asm08.TypeRef("System.Configuration.Internal.IConfigSystem")); 
  $.Field({Static:false, Public:false}, "_configRoot", $asm08.TypeRef("System.Configuration.Internal.IInternalConfigRoot")); 
  $.Field({Static:false, Public:false}, "_configHost", $asm08.TypeRef("System.Configuration.ClientConfigurationHost")); 
  $.Field({Static:false, Public:false}, "_machineConfigRecord", $asm08.TypeRef("System.Configuration.Internal.IInternalConfigRecord")); 
  $.Field({Static:false, Public:false}, "_completeConfigRecord", $asm08.TypeRef("System.Configuration.Internal.IInternalConfigRecord")); 
  $.Field({Static:false, Public:false}, "_initError", $asm06.TypeRef("System.Exception")); 
  $.Field({Static:false, Public:false}, "_isInitInProgress", $.Boolean); 
  $.Field({Static:false, Public:false}, "_isMachineConfigInited", $.Boolean); 
  $.Field({Static:false, Public:false}, "_isUserConfigInited", $.Boolean); 
  $.Field({Static:false, Public:false}, "_isAppConfigHttp", $.Boolean); 
  $.Property({Static:false, Public:false, Virtual:true }, "IInternalConfigSystem.SupportsUserConfig", $.Boolean);

  $.ImplementInterfaces($asm08.TypeRef("System.Configuration.Internal.IInternalConfigSystem"))
});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.ConfigDefinitionUpdates", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xB433, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AddUpdate", 
    $sig.make(0xB435, $asm08.TypeRef("System.Configuration.DefinitionUpdate"), [
        $asm08.TypeRef("System.Configuration.OverrideModeSetting"), $.Boolean, 
        $.Boolean, $.String, 
        $asm08.TypeRef("System.Configuration.SectionRecord")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CompleteUpdates", 
    $sig.make(0xB436, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "FindLocationUpdates", 
    $sig.make(0xB434, $asm08.TypeRef("System.Configuration.LocationUpdates"), [$asm08.TypeRef("System.Configuration.OverrideModeSetting"), $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "FlagLocationWritten", 
    $sig.make(0xB437, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_LocationUpdatesList", 
    $sig.make(0xB430, $asm06.TypeRef("System.Collections.ArrayList"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_RequireLocation", 
    $sig.make(0xB431, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_RequireLocation", 
    $sig.make(0xB432, null, [$.Boolean], [])
  );

  $.Field({Static:false, Public:false}, "_locationUpdatesList", $asm06.TypeRef("System.Collections.ArrayList")); 
  $.Field({Static:false, Public:false}, "_requireLocationWritten", $.Boolean); 
  $.Property({Static:false, Public:false}, "LocationUpdatesList", $asm06.TypeRef("System.Collections.ArrayList"));

  $.Property({Static:false, Public:false}, "RequireLocation", $.Boolean);

});

JSIL.MakeStaticClass("System.Configuration.ConfigurationManagerHelperFactory", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:true , Public:false}, "get_Instance", 
    $sig.make(0x25D3C, $asm08.TypeRef("System.Configuration.Internal.IConfigurationManagerHelper"), [], [])
  );

  $.Constant({Static:true , Public:false}, "ConfigurationManagerHelperTypeString", "System.Configuration.Internal.ConfigurationManagerHelper, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
  $.Field({Static:true , Public:false}, "s_instance", $asm08.TypeRef("System.Configuration.Internal.IConfigurationManagerHelper")); 
  $.Property({Static:true , Public:false}, "Instance", $asm08.TypeRef("System.Configuration.Internal.IConfigurationManagerHelper"));

});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.ConfigurationValue", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x9C82, null, [
        $.Object, $asm08.TypeRef("System.Configuration.ConfigurationValueFlags"), 
        $asm08.TypeRef("System.Configuration.PropertySourceInfo")
      ], [])
  );

  $.Field({Static:false, Public:false}, "ValueFlags", $asm08.TypeRef("System.Configuration.ConfigurationValueFlags")); 
  $.Field({Static:false, Public:false}, "Value", $.Object); 
  $.Field({Static:false, Public:false}, "SourceInfo", $asm08.TypeRef("System.Configuration.PropertySourceInfo")); 
});

JSIL.MakeClass($asm0E.TypeRef("System.Xml.XmlAttribute"), "System.Configuration.ConfigXmlAttribute", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25D4A, null, [
        $.String, $.Int32, 
        $.String, $.String, 
        $.String, $asm0E.TypeRef("System.Xml.XmlDocument")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CloneNode", 
    $sig.make(0x25D4B, $asm0E.TypeRef("System.Xml.XmlNode"), [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigErrorInfo.get_Filename", 
    $sig.make(0x25D49, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigErrorInfo.get_LineNumber", 
    $sig.make(0x25D47, $.Int32, [], [])
  );

  $.Field({Static:false, Public:false}, "_line", $.Int32); 
  $.Field({Static:false, Public:false}, "_filename", $.String); 
  $.Property({Static:false, Public:false, Virtual:true }, "IConfigErrorInfo.LineNumber", $.Int32);

  $.Property({Static:false, Public:false, Virtual:true }, "IConfigErrorInfo.Filename", $.String);

  $.ImplementInterfaces($asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo"))
});

JSIL.MakeClass($asm0E.TypeRef("System.Xml.XmlCDataSection"), "System.Configuration.ConfigXmlCDataSection", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x258F6, null, [
        $.String, $.Int32, 
        $.String, $asm0E.TypeRef("System.Xml.XmlDocument")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CloneNode", 
    $sig.make(0x258F7, $asm0E.TypeRef("System.Xml.XmlNode"), [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigErrorInfo.get_Filename", 
    $sig.make(0x258F5, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigErrorInfo.get_LineNumber", 
    $sig.make(0x258F4, $.Int32, [], [])
  );

  $.Field({Static:false, Public:false}, "_line", $.Int32); 
  $.Field({Static:false, Public:false}, "_filename", $.String); 
  $.Property({Static:false, Public:false, Virtual:true }, "IConfigErrorInfo.LineNumber", $.Int32);

  $.Property({Static:false, Public:false, Virtual:true }, "IConfigErrorInfo.Filename", $.String);

  $.ImplementInterfaces($asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo"))
});

JSIL.MakeClass($asm0E.TypeRef("System.Xml.XmlComment"), "System.Configuration.ConfigXmlComment", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x2598A, null, [
        $.String, $.Int32, 
        $.String, $asm0E.TypeRef("System.Xml.XmlDocument")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CloneNode", 
    $sig.make(0x2598B, $asm0E.TypeRef("System.Xml.XmlNode"), [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigErrorInfo.get_Filename", 
    $sig.make(0x25989, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigErrorInfo.get_LineNumber", 
    $sig.make(0x25988, $.Int32, [], [])
  );

  $.Field({Static:false, Public:false}, "_line", $.Int32); 
  $.Field({Static:false, Public:false}, "_filename", $.String); 
  $.Property({Static:false, Public:false, Virtual:true }, "IConfigErrorInfo.LineNumber", $.Int32);

  $.Property({Static:false, Public:false, Virtual:true }, "IConfigErrorInfo.Filename", $.String);

  $.ImplementInterfaces($asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo"))
});

JSIL.MakeClass($asm0E.TypeRef("System.Xml.XmlElement"), "System.Configuration.ConfigXmlElement", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x259A9, null, [
        $.String, $.Int32, 
        $.String, $.String, 
        $.String, $asm0E.TypeRef("System.Xml.XmlDocument")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CloneNode", 
    $sig.make(0x259AA, $asm0E.TypeRef("System.Xml.XmlNode"), [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigErrorInfo.get_Filename", 
    $sig.make(0x259A8, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigErrorInfo.get_LineNumber", 
    $sig.make(0x259A7, $.Int32, [], [])
  );

  $.Field({Static:false, Public:false}, "_line", $.Int32); 
  $.Field({Static:false, Public:false}, "_filename", $.String); 
  $.Property({Static:false, Public:false, Virtual:true }, "IConfigErrorInfo.LineNumber", $.Int32);

  $.Property({Static:false, Public:false, Virtual:true }, "IConfigErrorInfo.Filename", $.String);

  $.ImplementInterfaces($asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo"))
});

JSIL.MakeClass($asm0E.TypeRef("System.Xml.XmlSignificantWhitespace"), "System.Configuration.ConfigXmlSignificantWhitespace", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x259B4, null, [
        $.String, $.Int32, 
        $.String, $asm0E.TypeRef("System.Xml.XmlDocument")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CloneNode", 
    $sig.make(0x259B5, $asm0E.TypeRef("System.Xml.XmlNode"), [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigErrorInfo.get_Filename", 
    $sig.make(0x259B2, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigErrorInfo.get_LineNumber", 
    $sig.make(0x259B1, $.Int32, [], [])
  );

  $.Field({Static:false, Public:false}, "_line", $.Int32); 
  $.Field({Static:false, Public:false}, "_filename", $.String); 
  $.Property({Static:false, Public:false, Virtual:true }, "IConfigErrorInfo.LineNumber", $.Int32);

  $.Property({Static:false, Public:false, Virtual:true }, "IConfigErrorInfo.Filename", $.String);

  $.ImplementInterfaces($asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo"))
});

JSIL.MakeClass($asm0E.TypeRef("System.Xml.XmlText"), "System.Configuration.ConfigXmlText", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x259D3, null, [
        $.String, $.Int32, 
        $.String, $asm0E.TypeRef("System.Xml.XmlDocument")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CloneNode", 
    $sig.make(0x259D5, $asm0E.TypeRef("System.Xml.XmlNode"), [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigErrorInfo.get_Filename", 
    $sig.make(0x259D2, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigErrorInfo.get_LineNumber", 
    $sig.make(0x259D1, $.Int32, [], [])
  );

  $.Field({Static:false, Public:false}, "_line", $.Int32); 
  $.Field({Static:false, Public:false}, "_filename", $.String); 
  $.Property({Static:false, Public:false, Virtual:true }, "IConfigErrorInfo.LineNumber", $.Int32);

  $.Property({Static:false, Public:false, Virtual:true }, "IConfigErrorInfo.Filename", $.String);

  $.ImplementInterfaces($asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo"))
});

JSIL.MakeClass($asm0E.TypeRef("System.Xml.XmlWhitespace"), "System.Configuration.ConfigXmlWhitespace", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25A07, null, [
        $.String, $.Int32, 
        $.String, $asm0E.TypeRef("System.Xml.XmlDocument")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CloneNode", 
    $sig.make(0x25A09, $asm0E.TypeRef("System.Xml.XmlNode"), [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigErrorInfo.get_Filename", 
    $sig.make(0x25A05, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigErrorInfo.get_LineNumber", 
    $sig.make(0x25A04, $.Int32, [], [])
  );

  $.Field({Static:false, Public:false}, "_line", $.Int32); 
  $.Field({Static:false, Public:false}, "_filename", $.String); 
  $.Property({Static:false, Public:false, Virtual:true }, "IConfigErrorInfo.LineNumber", $.Int32);

  $.Property({Static:false, Public:false, Virtual:true }, "IConfigErrorInfo.Filename", $.String);

  $.ImplementInterfaces($asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo"))
});

JSIL.MakeStruct($asm06.TypeRef("System.ValueType"), "System.Configuration.CRYPTPROTECT_PROMPTSTRUCT", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, "IDisposable.Dispose", 
    $sig.make(0x2596B, null, [], [])
  );

  $.Field({Static:false, Public:true }, "cbSize", $.Int32); 
  $.Field({Static:false, Public:true }, "dwPromptFlags", $.Int32); 
  $.Field({Static:false, Public:true }, "hwndApp", $asm06.TypeRef("System.IntPtr")); 
  $.Field({Static:false, Public:true }, "szPrompt", $.String); 
  $.ImplementInterfaces($asm06.TypeRef("System.IDisposable"))
});

JSIL.MakeStruct($asm06.TypeRef("System.ValueType"), "System.Configuration.DATA_BLOB", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, "IDisposable.Dispose", 
    $sig.make(0x2595F, null, [], [])
  );

  $.Field({Static:false, Public:true }, "cbData", $.Int32); 
  $.Field({Static:false, Public:true }, "pbData", $asm06.TypeRef("System.IntPtr")); 
  $.ImplementInterfaces($asm06.TypeRef("System.IDisposable"))
});

JSIL.MakeStaticClass("System.Configuration.Debug", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:true , Public:false}, "AlwaysValidate", 
    $sig.make(0x25A66, null, [$.String], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["DBG"]; });

  $.ExternalMethod({Static:true , Public:false}, "Assert", 
    $sig.make(0x25A56, null, [$.Boolean, $.String], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["DBG"]; });

  $.ExternalMethod({Static:true , Public:false}, "Assert", 
    $sig.make(0x25A58, null, [$.Boolean], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["DBG"]; });

  $.ExternalMethod({Static:true , Public:false}, "Break", 
    $sig.make(0x25A64, null, [], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["DBG"]; });

  $.ExternalMethod({Static:true , Public:false}, "CheckValid", 
    $sig.make(0x25A68, null, [$.Boolean, $.String], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["DBG"]; });

  $.ExternalMethod({Static:true , Public:false}, "Dump", 
    $sig.make(0x25A70, null, [$.String, $.Object], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["DBG"]; });

  $.ExternalMethod({Static:true , Public:false}, "Fail", 
    $sig.make(0x25A5A, null, [$.String], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["DBG"]; });

  $.ExternalMethod({Static:true , Public:false}, "IsTagEnabled", 
    $sig.make(0x25A5C, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "IsTagPresent", 
    $sig.make(0x25A5E, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "Trace", 
    $sig.make(0x25A4E, null, [$.String, $.String], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["DBG"]; });

  $.ExternalMethod({Static:true , Public:false}, "Trace", 
    $sig.make(0x25A4F, null, [
        $.String, $.String, 
        $.Boolean
      ], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["DBG"]; });

  $.ExternalMethod({Static:true , Public:false}, "Trace", 
    $sig.make(0x25A50, null, [
        $.String, $.String, 
        $asm06.TypeRef("System.Exception")
      ], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["DBG"]; });

  $.ExternalMethod({Static:true , Public:false}, "Trace", 
    $sig.make(0x25A51, null, [$.String, $asm06.TypeRef("System.Exception")], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["DBG"]; });

  $.ExternalMethod({Static:true , Public:false}, "Trace", 
    $sig.make(0x25A52, null, [
        $.String, $.String, 
        $asm06.TypeRef("System.Exception"), $.Boolean
      ], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["DBG"]; });

  $.ExternalMethod({Static:true , Public:false}, "Validate", 
    $sig.make(0x25A6A, null, [$.Object], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["DBG"]; });

  $.ExternalMethod({Static:true , Public:false}, "Validate", 
    $sig.make(0x25A6D, null, [$.String, $.Object], [])
  )
    .Attribute($asm06.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["DBG"]; });

  $.Constant({Static:true , Public:false}, "TAG_INTERNAL", "Internal"); 
  $.Constant({Static:true , Public:false}, "TAG_EXTERNAL", "External"); 
  $.Constant({Static:true , Public:false}, "TAG_ALL", "*"); 
  $.Constant({Static:true , Public:false}, "DATE_FORMAT", "yyyy/MM/dd HH:mm:ss.ffff"); 
  $.Constant({Static:true , Public:false}, "TIME_FORMAT", "HH:mm:ss:ffff"); 
});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.Update", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xB449, null, [
        $.String, $.Boolean, 
        $.String
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ConfigKey", 
    $sig.make(0xB444, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Moved", 
    $sig.make(0xB445, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Retrieved", 
    $sig.make(0xB447, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_UpdatedXml", 
    $sig.make(0xB446, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_Retrieved", 
    $sig.make(0xB448, null, [$.Boolean], [])
  );

  $.Field({Static:false, Public:false}, "_moved", $.Boolean); 
  $.Field({Static:false, Public:false}, "_retrieved", $.Boolean); 
  $.Field({Static:false, Public:false}, "_configKey", $.String); 
  $.Field({Static:false, Public:false}, "_updatedXml", $.String); 
  $.Property({Static:false, Public:false}, "ConfigKey", $.String);

  $.Property({Static:false, Public:false}, "Moved", $.Boolean);

  $.Property({Static:false, Public:false}, "UpdatedXml", $.String);

  $.Property({Static:false, Public:false}, "Retrieved", $.Boolean);

});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.Update"), "System.Configuration.DeclarationUpdate", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xBA31, null, [
        $.String, $.Boolean, 
        $.String
      ], [])
  );

});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.Update"), "System.Configuration.DefinitionUpdate", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xB451, null, [
        $.String, $.Boolean, 
        $.String, $asm08.TypeRef("System.Configuration.SectionRecord")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_SectionRecord", 
    $sig.make(0xB450, $asm08.TypeRef("System.Configuration.SectionRecord"), [], [])
  );

  $.Field({Static:false, Public:false}, "_sectionRecord", $asm08.TypeRef("System.Configuration.SectionRecord")); 
  $.Property({Static:false, Public:false}, "SectionRecord", $asm08.TypeRef("System.Configuration.SectionRecord"));

});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.EmptyImpersonationContext", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25A7E, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Dispose", 
    $sig.make(0x25A7D, null, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetStaticInstance", 
    $sig.make(0x25A7C, $asm06.TypeRef("System.IDisposable"), [], [])
  );

  $.Field({Static:true , Public:false}, "s_emptyImpersonationContext", $asm06.TypeRef("System.IDisposable")); 
  $.ImplementInterfaces($asm06.TypeRef("System.IDisposable"))
});

JSIL.MakeClass($asm0E.TypeRef("System.Xml.XmlDocument"), "System.Configuration.ErrorInfoXmlDocument", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25B82, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CreateAttribute", 
    $sig.make(0x25B7B, $asm0E.TypeRef("System.Xml.XmlAttribute"), [
        $.String, $.String, 
        $.String
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CreateCDataSection", 
    $sig.make(0x25B7E, $asm0E.TypeRef("System.Xml.XmlCDataSection"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CreateComment", 
    $sig.make(0x25B7F, $asm0E.TypeRef("System.Xml.XmlComment"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CreateElement", 
    $sig.make(0x25B7C, $asm0E.TypeRef("System.Xml.XmlElement"), [
        $.String, $.String, 
        $.String
      ], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "CreateSectionXmlNode", 
    $sig.make(0x25B7A, $asm0E.TypeRef("System.Xml.XmlNode"), [$asm08.TypeRef("System.Configuration.ConfigXmlReader")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CreateSignificantWhitespace", 
    $sig.make(0x25B80, $asm0E.TypeRef("System.Xml.XmlSignificantWhitespace"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CreateTextNode", 
    $sig.make(0x25B7D, $asm0E.TypeRef("System.Xml.XmlText"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "CreateWhitespace", 
    $sig.make(0x25B81, $asm0E.TypeRef("System.Xml.XmlWhitespace"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_LineNumber", 
    $sig.make(0x25B76, $.Int32, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Load", 
    $sig.make(0x25B78, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "LoadFromConfigXmlReader", 
    $sig.make(0x25B79, null, [$asm08.TypeRef("System.Configuration.ConfigXmlReader")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigErrorInfo.get_Filename", 
    $sig.make(0x25B77, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigErrorInfo.get_LineNumber", 
    $sig.make(0x25B75, $.Int32, [], [])
  );

  $.Field({Static:false, Public:false}, "_reader", $asm0E.TypeRef("System.Xml.XmlTextReader")); 
  $.Field({Static:false, Public:false}, "_lineOffset", $.Int32); 
  $.Field({Static:false, Public:false}, "_filename", $.String); 
  $.Property({Static:false, Public:false, Virtual:true }, "IConfigErrorInfo.LineNumber", $.Int32);

  $.Property({Static:false, Public:false}, "LineNumber", $.Int32);

  $.Property({Static:false, Public:false, Virtual:true }, "IConfigErrorInfo.Filename", $.String);

  $.ImplementInterfaces($asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo"))
});

JSIL.MakeStaticClass("System.Configuration.ErrorsHelper", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:true , Public:false}, "AddError", 
    $sig.make(0x25B91, null, [$jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")])]), $asm07.TypeRef("System.Configuration.ConfigurationException")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "AddErrors", 
    $sig.make(0x25B92, null, [$jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")])]), $asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")])], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetErrorCount", 
    $sig.make(0x25B8F, $.Int32, [$asm06.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")])], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetErrorsException", 
    $sig.make(0x25B93, $asm08.TypeRef("System.Configuration.ConfigurationErrorsException"), [$asm06.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")])], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetHasErrors", 
    $sig.make(0x25B90, $.Boolean, [$asm06.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")])], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "ThrowOnErrors", 
    $sig.make(0x25B94, null, [$asm06.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")])], [])
  );

});

JSIL.MakeEnum(
  "System.Configuration.ExceptionAction", false, {
    NonSpecific: 0, 
    Local: 1, 
    Global: 2
  }, false
);

JSIL.MakeStaticClass("System.Configuration.ExceptionUtil", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:true , Public:false}, "get_NoExceptionInformation", 
    $sig.make(0x25BA6, $.String, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "ParameterInvalid", 
    $sig.make(0x25BA7, $asm06.TypeRef("System.ArgumentException"), [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "ParameterNullOrEmpty", 
    $sig.make(0x25BA9, $asm06.TypeRef("System.ArgumentException"), [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "PropertyInvalid", 
    $sig.make(0x25BAB, $asm06.TypeRef("System.ArgumentException"), [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "PropertyNullOrEmpty", 
    $sig.make(0x25BAD, $asm06.TypeRef("System.ArgumentException"), [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "UnexpectedError", 
    $sig.make(0x25BAF, $asm06.TypeRef("System.InvalidOperationException"), [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "WrapAsConfigException", 
    $sig.make(0x25BB0, $asm08.TypeRef("System.Configuration.ConfigurationErrorsException"), [
        $.String, $asm06.TypeRef("System.Exception"), 
        $asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo")
      ], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "WrapAsConfigException", 
    $sig.make(0x25BB2, $asm08.TypeRef("System.Configuration.ConfigurationErrorsException"), [
        $.String, $asm06.TypeRef("System.Exception"), 
        $.String, $.Int32
      ], [])
  );

  $.Property({Static:true , Public:false}, "NoExceptionInformation", $.String);

});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.FactoryId", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25BC4, null, [
        $.String, $.String, 
        $.String
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ConfigKey", 
    $sig.make(0x25BC1, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Group", 
    $sig.make(0x25BC2, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Name", 
    $sig.make(0x25BC3, $.String, [], [])
  );

  $.Field({Static:false, Public:false}, "_configKey", $.String); 
  $.Field({Static:false, Public:false}, "_group", $.String); 
  $.Field({Static:false, Public:false}, "_name", $.String); 
  $.Property({Static:false, Public:false}, "ConfigKey", $.String);

  $.Property({Static:false, Public:false}, "Group", $.String);

  $.Property({Static:false, Public:false}, "Name", $.String);

})
  .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerDisplayAttribute"), function () { return ["FactoryId {ConfigKey}"]; });

JSIL.MakeStaticClass("System.Configuration.FileUtil", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:true , Public:false}, "FileExists", 
    $sig.make(0x25BED, $.Boolean, [$.String, $.Boolean], [])
  );

  $.Constant({Static:true , Public:false}, "HRESULT_WIN32_FILE_NOT_FOUND", -2147024894); 
  $.Constant({Static:true , Public:false}, "HRESULT_WIN32_PATH_NOT_FOUND", -2147024893); 
});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.InvalidPropValue", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25C01, null, [$.String, $asm07.TypeRef("System.Configuration.ConfigurationException")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Error", 
    $sig.make(0x25BFF, $asm07.TypeRef("System.Configuration.ConfigurationException"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Value", 
    $sig.make(0x25C00, $.String, [], [])
  );

  $.Field({Static:false, Public:false}, "_value", $.String); 
  $.Field({Static:false, Public:false}, "_error", $asm07.TypeRef("System.Configuration.ConfigurationException")); 
  $.Property({Static:false, Public:false}, "Error", $asm07.TypeRef("System.Configuration.ConfigurationException"));

  $.Property({Static:false, Public:false}, "Value", $.String);

});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.LocationSectionRecord", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25C1E, null, [$asm08.TypeRef("System.Configuration.SectionXmlInfo"), $asm06.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AddError", 
    $sig.make(0x25C21, null, [$asm07.TypeRef("System.Configuration.ConfigurationException")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ConfigKey", 
    $sig.make(0x25C11, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Errors", 
    $sig.make(0x25C13, $asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")]), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ErrorsList", 
    $sig.make(0x25C17, $asm06.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")]), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_HasErrors", 
    $sig.make(0x25C1B, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_SectionXmlInfo", 
    $sig.make(0x25C12, $asm08.TypeRef("System.Configuration.SectionXmlInfo"), [], [])
  );

  $.Field({Static:false, Public:false}, "_sectionXmlInfo", $asm08.TypeRef("System.Configuration.SectionXmlInfo")); 
  $.Field({Static:false, Public:false}, "_errors", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")])); 
  $.Property({Static:false, Public:false}, "ConfigKey", $.String);

  $.Property({Static:false, Public:false}, "SectionXmlInfo", $asm08.TypeRef("System.Configuration.SectionXmlInfo"));

  $.Property({Static:false, Public:false}, "Errors", $asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")]));

  $.Property({Static:false, Public:false}, "ErrorsList", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Configuration.ConfigurationException")]));

  $.Property({Static:false, Public:false}, "HasErrors", $.Boolean);

})
  .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerDisplayAttribute"), function () { return ["LocationSectionRecord {ConfigKey}"]; });

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.LocationUpdates", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xB45C, null, [$asm08.TypeRef("System.Configuration.OverrideModeSetting"), $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CompleteUpdates", 
    $sig.make(0xB45D, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_InheritInChildApps", 
    $sig.make(0xB459, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsDefault", 
    $sig.make(0xB45B, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_OverrideMode", 
    $sig.make(0xB458, $asm08.TypeRef("System.Configuration.OverrideModeSetting"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_SectionUpdates", 
    $sig.make(0xB45A, $asm08.TypeRef("System.Configuration.SectionUpdates"), [], [])
  );

  $.Field({Static:false, Public:false}, "_overrideMode", $asm08.TypeRef("System.Configuration.OverrideModeSetting")); 
  $.Field({Static:false, Public:false}, "_inheritInChildApps", $.Boolean); 
  $.Field({Static:false, Public:false}, "_sectionUpdates", $asm08.TypeRef("System.Configuration.SectionUpdates")); 
  $.Property({Static:false, Public:false}, "OverrideMode", $asm08.TypeRef("System.Configuration.OverrideModeSetting"));

  $.Property({Static:false, Public:false}, "InheritInChildApps", $.Boolean);

  $.Property({Static:false, Public:false}, "SectionUpdates", $asm08.TypeRef("System.Configuration.SectionUpdates"));

  $.Property({Static:false, Public:false}, "IsDefault", $.Boolean);

});

JSIL.MakeEnum(
  "System.Configuration.NamespaceChange", false, {
    None: 0, 
    Add: 1, 
    Remove: 2
  }, false
);

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.PropertySourceInfo", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x9CB1, null, [$asm0E.TypeRef("System.Xml.XmlReader")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_FileName", 
    $sig.make(0x9CAC, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_LineNumber", 
    $sig.make(0x9CB0, $.Int32, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetFilename", 
    $sig.make(0x9CB2, $.String, [$asm0E.TypeRef("System.Xml.XmlReader")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetLineNumber", 
    $sig.make(0x9CB3, $.Int32, [$asm0E.TypeRef("System.Xml.XmlReader")], [])
  );

  $.Field({Static:false, Public:false}, "_fileName", $.String); 
  $.Field({Static:false, Public:false}, "_lineNumber", $.Int32); 
  $.Property({Static:false, Public:false}, "FileName", $.String);

  $.Property({Static:false, Public:false}, "LineNumber", $.Int32);

});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.BaseConfigurationRecord"), "System.Configuration.RuntimeConfigurationRecord", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25C47, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CallHostDecryptSection", 
    $sig.make(0x25C55, $.String, [
        $.String, $asm08.TypeRef("System.Configuration.ProtectedConfigurationProvider"), 
        $asm08.TypeRef("System.Configuration.ProtectedConfigurationSection")
      ], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "Create", 
    $sig.make(0x25C46, $asm08.TypeRef("System.Configuration.Internal.IInternalConfigRecord"), [
        $asm08.TypeRef("System.Configuration.Internal.InternalConfigRoot"), $asm08.TypeRef("System.Configuration.Internal.IInternalConfigRecord"), 
        $.String
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CreateSection", 
    $sig.make(0x25C4C, $.Object, [
        $.Boolean, $asm08.TypeRef("System.Configuration.FactoryRecord"), 
        $asm08.TypeRef("System.Configuration.SectionRecord"), $.Object, 
        $asm08.TypeRef("System.Configuration.ConfigXmlReader")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CreateSectionFactory", 
    $sig.make(0x25C4A, $.Object, [$asm08.TypeRef("System.Configuration.FactoryRecord")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ClassFlags", 
    $sig.make(0x25C45, $asm08.TypeRef("System.Configuration.SimpleBitVector32"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetRuntimeObject", 
    $sig.make(0x25C53, $.Object, [$.Object], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetRuntimeObjectWithFullTrust", 
    $sig.make(0x25C50, $.Object, [$asm08.TypeRef("System.Configuration.ConfigurationSection")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetRuntimeObjectWithRestrictedPermissions", 
    $sig.make(0x25C52, $.Object, [$asm08.TypeRef("System.Configuration.ConfigurationSection")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "UseParentResult", 
    $sig.make(0x25C4E, $.Object, [
        $.String, $.Object, 
        $asm08.TypeRef("System.Configuration.SectionRecord")
      ], [])
  );

  $.Field({Static:true , Public:false, ReadOnly:true }, "RuntimeClassFlags", $asm08.TypeRef("System.Configuration.SimpleBitVector32")); 
  $.Method({Static:true , Public:false}, ".cctor", 
    $sig.make(0x2AA55, null, [], []), 
    function RuntimeConfigurationRecord__cctor () {
      $thisType.RuntimeClassFlags = new $asm08.System.Configuration.SimpleBitVector32();
    }
  );

  $.Property({Static:false, Public:false, Virtual:true }, "ClassFlags", $asm08.TypeRef("System.Configuration.SimpleBitVector32"));

});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.RuntimeConfigurationRecord/RuntimeConfigurationFactory", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25D79, null, [$asm08.TypeRef("System.Configuration.RuntimeConfigurationRecord"), $asm08.TypeRef("System.Configuration.FactoryRecord")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "CheckForLockAttributes", 
    $sig.make(0x25D7F, null, [$.String, $asm0E.TypeRef("System.Xml.XmlNode")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CreateSection", 
    $sig.make(0x25D8A, $.Object, [
        $.Boolean, $asm08.TypeRef("System.Configuration.RuntimeConfigurationRecord"), 
        $asm08.TypeRef("System.Configuration.FactoryRecord"), $asm08.TypeRef("System.Configuration.SectionRecord"), 
        $.Object, $asm08.TypeRef("System.Configuration.ConfigXmlReader")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CreateSectionImpl", 
    $sig.make(0x25D83, $.Object, [
        $asm08.TypeRef("System.Configuration.RuntimeConfigurationRecord"), $asm08.TypeRef("System.Configuration.FactoryRecord"), 
        $asm08.TypeRef("System.Configuration.SectionRecord"), $.Object, 
        $asm08.TypeRef("System.Configuration.ConfigXmlReader")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CreateSectionWithFullTrust", 
    $sig.make(0x25D85, $.Object, [
        $asm08.TypeRef("System.Configuration.RuntimeConfigurationRecord"), $asm08.TypeRef("System.Configuration.FactoryRecord"), 
        $asm08.TypeRef("System.Configuration.SectionRecord"), $.Object, 
        $asm08.TypeRef("System.Configuration.ConfigXmlReader")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CreateSectionWithRestrictedPermissions", 
    $sig.make(0x25D88, $.Object, [
        $asm08.TypeRef("System.Configuration.RuntimeConfigurationRecord"), $asm08.TypeRef("System.Configuration.FactoryRecord"), 
        $asm08.TypeRef("System.Configuration.SectionRecord"), $.Object, 
        $asm08.TypeRef("System.Configuration.ConfigXmlReader")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Init", 
    $sig.make(0x25D7A, null, [$asm08.TypeRef("System.Configuration.RuntimeConfigurationRecord"), $asm08.TypeRef("System.Configuration.FactoryRecord")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "InitWithFullTrust", 
    $sig.make(0x25D7B, null, [$asm08.TypeRef("System.Configuration.RuntimeConfigurationRecord"), $asm08.TypeRef("System.Configuration.FactoryRecord")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "InitWithRestrictedPermissions", 
    $sig.make(0x25D7D, null, [$asm08.TypeRef("System.Configuration.RuntimeConfigurationRecord"), $asm08.TypeRef("System.Configuration.FactoryRecord")], [])
  );

  $.Field({Static:false, Public:false}, "_sectionCtor", $asm06.TypeRef("System.Reflection.ConstructorInfo")); 
  $.Field({Static:false, Public:false}, "_sectionHandler", $asm07.TypeRef("System.Configuration.IConfigurationSectionHandler")); 
});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.SectionUpdates", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xB3D5, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AddSection", 
    $sig.make(0xB3D8, null, [$asm08.TypeRef("System.Configuration.Update")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AddSectionGroup", 
    $sig.make(0xB3D9, null, [$asm08.TypeRef("System.Configuration.Update")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CompleteUpdates", 
    $sig.make(0xB3D7, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "FindSectionUpdates", 
    $sig.make(0xB3D6, $.Type, [$.String, $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsEmpty", 
    $sig.make(0xB3D4, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsNew", 
    $sig.make(0xB3D2, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetDeclarationUpdate", 
    $sig.make(0xB3DD, $asm08.TypeRef("System.Configuration.DeclarationUpdate"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetDefinitionUpdate", 
    $sig.make(0xB3DC, $asm08.TypeRef("System.Configuration.DefinitionUpdate"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetMovedSectionNames", 
    $sig.make(0xB3E4, $jsilcore.TypeRef("System.Array", [$.String]), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetNewGroupNames", 
    $sig.make(0xB3E6, $jsilcore.TypeRef("System.Array", [$.String]), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetSectionGroupUpdate", 
    $sig.make(0xB3DB, $asm08.TypeRef("System.Configuration.DeclarationUpdate"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetSectionUpdatesForGroup", 
    $sig.make(0xB3DE, $.Type, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetUnretrievedGroupNames", 
    $sig.make(0xB3E5, $jsilcore.TypeRef("System.Array", [$.String]), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetUnretrievedSectionNames", 
    $sig.make(0xB3E3, $jsilcore.TypeRef("System.Array", [$.String]), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetUpdate", 
    $sig.make(0xB3DA, $asm08.TypeRef("System.Configuration.Update"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "HasNewSectionGroups", 
    $sig.make(0xB3E2, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "HasUnretrievedSections", 
    $sig.make(0xB3DF, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "MarkAsRetrieved", 
    $sig.make(0xB3E0, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "MarkGroupAsRetrieved", 
    $sig.make(0xB3E1, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_IsNew", 
    $sig.make(0xB3D3, null, [$.Boolean], [])
  );

  $.Field({Static:false, Public:false}, "_name", $.String); 
  $.Field({Static:false, Public:false}, "_groups", $asm06.TypeRef("System.Collections.Hashtable")); 
  $.Field({Static:false, Public:false}, "_sections", $asm06.TypeRef("System.Collections.Hashtable")); 
  $.Field({Static:false, Public:false}, "_cUnretrieved", $.Int32); 
  $.Field({Static:false, Public:false}, "_cMoved", $.Int32); 
  $.Field({Static:false, Public:false}, "_sectionGroupUpdate", $asm08.TypeRef("System.Configuration.Update")); 
  $.Field({Static:false, Public:false}, "_isNew", $.Boolean); 
  $.Property({Static:false, Public:false}, "IsNew", $.Boolean);

  $.Property({Static:false, Public:false}, "IsEmpty", $.Boolean);

});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.StreamInfo", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25C8B, null, [
        $.String, $.String, 
        $.String
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25C8E, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Clone", 
    $sig.make(0x25C90, $.Type, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_ConfigSource", 
    $sig.make(0x25C64, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsMonitored", 
    $sig.make(0x25C68, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_SectionName", 
    $sig.make(0x25C5E, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_StreamName", 
    $sig.make(0x25C66, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Version", 
    $sig.make(0x25C7F, $.Object, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_IsMonitored", 
    $sig.make(0x25C7C, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_Version", 
    $sig.make(0x25C87, null, [$.Object], [])
  );

  $.Field({Static:false, Public:false}, "_sectionName", $.String); 
  $.Field({Static:false, Public:false}, "_configSource", $.String); 
  $.Field({Static:false, Public:false}, "_streamName", $.String); 
  $.Field({Static:false, Public:false}, "_isMonitored", $.Boolean); 
  $.Field({Static:false, Public:false}, "_version", $.Object); 
  $.Property({Static:false, Public:false}, "SectionName", $.String);

  $.Property({Static:false, Public:false}, "ConfigSource", $.String);

  $.Property({Static:false, Public:false}, "StreamName", $.String);

  $.Property({Static:false, Public:false}, "IsMonitored", $.Boolean);

  $.Property({Static:false, Public:false}, "Version", $.Object);

});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.StreamUpdate", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xBA3B, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_NewStreamname", 
    $sig.make(0xBA38, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_WriteCompleted", 
    $sig.make(0xBA39, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "set_WriteCompleted", 
    $sig.make(0xBA3A, null, [$.Boolean], [])
  );

  $.Field({Static:false, Public:false}, "_newStreamname", $.String); 
  $.Field({Static:false, Public:false}, "_writeCompleted", $.Boolean); 
  $.Property({Static:false, Public:false}, "NewStreamname", $.String);

  $.Property({Static:false, Public:false}, "WriteCompleted", $.Boolean);

});

JSIL.MakeStaticClass("System.Configuration.StringUtil", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:true , Public:false}, "EqualsIgnoreCase", 
    $sig.make(0x25CE7, $.Boolean, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "EqualsNE", 
    $sig.make(0x25CE6, $.Boolean, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "ObjectArrayToStringArray", 
    $sig.make(0x25CEA, $jsilcore.TypeRef("System.Array", [$.String]), [$jsilcore.TypeRef("System.Array", [$.Object])], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "StartsWith", 
    $sig.make(0x25CE8, $.Boolean, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "StartsWithIgnoreCase", 
    $sig.make(0x25CE9, $.Boolean, [$.String, $.String], [])
  );

});

JSIL.MakeStaticClass("System.Configuration.TypeUtil", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:true , Public:false}, "CreateInstanceWithReflectionPermission", 
    $sig.make(0x25D0C, $.Object, [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "CreateInstanceWithReflectionPermission", 
    $sig.make(0x25D13, $.Object, [$asm06.TypeRef("System.Type")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "get_IsCallerFullTrust", 
    $sig.make(0x25D05, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetConstructorWithReflectionPermission", 
    $sig.make(0x25D15, $asm06.TypeRef("System.Reflection.ConstructorInfo"), [
        $asm06.TypeRef("System.Type"), $asm06.TypeRef("System.Type"), 
        $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetLegacyType", 
    $sig.make(0x25D06, $asm06.TypeRef("System.Type"), [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetTypeImpl", 
    $sig.make(0x25D07, $asm06.TypeRef("System.Type"), [$.String, $.Boolean], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetTypeWithReflectionPermission", 
    $sig.make(0x25D08, $asm06.TypeRef("System.Type"), [
        $asm08.TypeRef("System.Configuration.Internal.IInternalConfigHost"), $.String, 
        $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetTypeWithReflectionPermission", 
    $sig.make(0x25D0A, $asm06.TypeRef("System.Type"), [$.String, $.Boolean], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "HasAptcaBit", 
    $sig.make(0x25D1D, $.Boolean, [$asm06.TypeRef("System.Reflection.Assembly")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "InvokeCtorWithReflectionPermission", 
    $sig.make(0x25D18, $.Object, [$asm06.TypeRef("System.Reflection.ConstructorInfo")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "IsTypeAllowedInConfig", 
    $sig.make(0x25D1F, $.Boolean, [$asm06.TypeRef("System.Type")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "IsTypeFromTrustedAssemblyWithoutAptca", 
    $sig.make(0x25D1A, $.Boolean, [$asm06.TypeRef("System.Type")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "VerifyAssignableType", 
    $sig.make(0x25D1C, $asm06.TypeRef("System.Type"), [
        $asm06.TypeRef("System.Type"), $asm06.TypeRef("System.Type"), 
        $.Boolean
      ], [])
  );

  $.Field({Static:true , Public:false}, "s_fullTrustPermissionSet", $asm06.TypeRef("System.Security.PermissionSet")); 
  $.Property({Static:true , Public:false}, "IsCallerFullTrust", $.Boolean);

});

JSIL.MakeClass($asm08.TypeRef("System.Configuration.Internal.DelegatingConfigHost"), "System.Configuration.UpdateConfigHost", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xB41F, null, [$asm08.TypeRef("System.Configuration.Internal.IInternalConfigHost")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AddStreamname", 
    $sig.make(0xB420, null, [
        $.String, $.String, 
        $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "DeleteStream", 
    $sig.make(0xB428, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetNewStreamname", 
    $sig.make(0xB421, $.String, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "GetStreamUpdate", 
    $sig.make(0xB422, $asm08.TypeRef("System.Configuration.StreamUpdate"), [$.String, $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetStreamVersion", 
    $sig.make(0xB423, $.Object, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "IsConfigRecordRequired", 
    $sig.make(0xB427, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "IsFile", 
    $sig.make(0xB429, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "OpenStreamForRead", 
    $sig.make(0xB424, $asm06.TypeRef("System.IO.Stream"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "OpenStreamForWrite", 
    $sig.make(0xB425, $asm06.TypeRef("System.IO.Stream"), [
        $.String, $.String, 
        $jsilcore.TypeRef("JSIL.Reference", [$.Object])
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "WriteCompleted", 
    $sig.make(0xB426, null, [
        $.String, $.Boolean, 
        $.Object
      ], [])
  );

  $.Field({Static:false, Public:false}, "_streams", $asm07.TypeRef("System.Collections.Specialized.HybridDictionary")); 
});

JSIL.MakeStaticClass("System.Configuration.UrlPath", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:true , Public:false}, "ConvertFileNameToUrl", 
    $sig.make(0x25BBE, $.String, [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetDirectoryOrRootName", 
    $sig.make(0x25BB6, $.String, [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "IsAbsoluteLocalPhysicalPath", 
    $sig.make(0x25BBC, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "IsAbsoluteUNCPhysicalPath", 
    $sig.make(0x25BBD, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "IsDirectorySeparatorChar", 
    $sig.make(0x25BBB, $.Boolean, [$.Char], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "IsEqualOrSubdirectory", 
    $sig.make(0x25BB7, $.Boolean, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "IsEqualOrSubpath", 
    $sig.make(0x25BB8, $.Boolean, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "IsEqualOrSubpathImpl", 
    $sig.make(0x25BBA, $.Boolean, [
        $.String, $.String, 
        $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "IsSubpath", 
    $sig.make(0x25BB9, $.Boolean, [$.String, $.String], [])
  );

  $.Constant({Static:true , Public:false}, "FILE_URL_LOCAL", "file:///"); 
  $.Constant({Static:true , Public:false}, "FILE_URL_UNC", "file:"); 
});

JSIL.MakeStaticClass("System.Configuration.ValidatorUtils", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:true , Public:true }, "HelperParamValidation", 
    $sig.make(0x25C08, null, [$.Object, $asm06.TypeRef("System.Type")], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "ValidateRangeImpl", 
    $sig.make(0x25C0A, null, [
        "!!0", "!!0", 
        "!!0", $.Boolean
      ], ["T"])
  );

  $.ExternalMethod({Static:true , Public:false}, "ValidateResolution", 
    $sig.make(0x25C0B, null, [
        $.String, $.Int64, 
        $.Int64
      ], [])
  );

  $.ExternalMethod({Static:true , Public:true }, "ValidateScalar", 
    $sig.make(0x25C09, null, [
        "!!0", "!!0", 
        "!!0", "!!0", 
        $.Boolean
      ], ["T"])
  );

  $.ExternalMethod({Static:true , Public:true }, "ValidateScalar", 
    $sig.make(0x25C0C, null, [
        $asm06.TypeRef("System.TimeSpan"), $asm06.TypeRef("System.TimeSpan"), 
        $asm06.TypeRef("System.TimeSpan"), $.Int64, 
        $.Boolean
      ], [])
  );

});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.XmlUtil", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xA59A, null, [
        $asm06.TypeRef("System.IO.Stream"), $.String, 
        $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xA59B, null, [
        $asm06.TypeRef("System.IO.Stream"), $.String, 
        $.Boolean, $asm08.TypeRef("System.Configuration.ConfigurationSchemaErrors")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AddErrorRequiredAttribute", 
    $sig.make(0xA5A7, null, [$.String, $asm08.TypeRef("System.Configuration.ExceptionAction")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AddErrorReservedAttribute", 
    $sig.make(0xA5A8, null, [$asm08.TypeRef("System.Configuration.ExceptionAction")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AddErrorUnrecognizedAttribute", 
    $sig.make(0xA5A6, null, [$asm08.TypeRef("System.Configuration.ExceptionAction")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AddErrorUnrecognizedElement", 
    $sig.make(0xA5A9, null, [$asm08.TypeRef("System.Configuration.ExceptionAction")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CopyElement", 
    $sig.make(0xA5B0, null, [$asm08.TypeRef("System.Configuration.XmlUtilWriter")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CopyOuterXmlToNextElement", 
    $sig.make(0xA5AC, $.Boolean, [$asm08.TypeRef("System.Configuration.XmlUtilWriter"), $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CopyReaderToNextElement", 
    $sig.make(0xA5AE, $.Boolean, [$asm08.TypeRef("System.Configuration.XmlUtilWriter"), $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CopySection", 
    $sig.make(0xA5B5, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CopyXmlNode", 
    $sig.make(0xA5B1, $.Boolean, [$asm08.TypeRef("System.Configuration.XmlUtilWriter")], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Dispose", 
    $sig.make(0xA59D, null, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "FormatXmlElement", 
    $sig.make(0xA5B6, $.String, [
        $.String, $.Int32, 
        $.Int32, $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_Filename", 
    $sig.make(0xA594, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "get_LineNumber", 
    $sig.make(0xA595, $.Int32, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Reader", 
    $sig.make(0xA597, $asm0E.TypeRef("System.Xml.XmlTextReader"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_SchemaErrors", 
    $sig.make(0xA598, $asm08.TypeRef("System.Configuration.ConfigurationSchemaErrors"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_TrueLinePosition", 
    $sig.make(0xA596, $.Int32, [], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "GetPositionOffset", 
    $sig.make(0xA599, $.Int32, [$asm0E.TypeRef("System.Xml.XmlNodeType")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ReadToNextElement", 
    $sig.make(0xA59E, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ReleaseResources", 
    $sig.make(0xA59C, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ResetCachedStringWriter", 
    $sig.make(0xA5B4, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "RetrieveFullOpenElementTag", 
    $sig.make(0xA5B2, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SkipAndCopyReaderToNextElement", 
    $sig.make(0xA5AF, $.Boolean, [$asm08.TypeRef("System.Configuration.XmlUtilWriter"), $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SkipChildElementsAndCopyOuterXmlToNextElement", 
    $sig.make(0xA5AD, $.Boolean, [$asm08.TypeRef("System.Configuration.XmlUtilWriter")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SkipToNextElement", 
    $sig.make(0xA59F, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "StrictReadToNextElement", 
    $sig.make(0xA5A0, null, [$asm08.TypeRef("System.Configuration.ExceptionAction")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "StrictSkipToNextElement", 
    $sig.make(0xA5A1, null, [$asm08.TypeRef("System.Configuration.ExceptionAction")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "StrictSkipToOurParentsEndElement", 
    $sig.make(0xA5A2, null, [$asm08.TypeRef("System.Configuration.ExceptionAction")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "UpdateStartElement", 
    $sig.make(0xA5B3, $.String, [
        $asm08.TypeRef("System.Configuration.XmlUtilWriter"), $.String, 
        $.Boolean, $.Int32, 
        $.Int32
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "VerifyAndGetBooleanAttribute", 
    $sig.make(0xA5AB, null, [
        $asm08.TypeRef("System.Configuration.ExceptionAction"), $.Boolean, 
        $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "VerifyAndGetNonEmptyStringAttribute", 
    $sig.make(0xA5AA, null, [$asm08.TypeRef("System.Configuration.ExceptionAction"), $jsilcore.TypeRef("JSIL.Reference", [$.String])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "VerifyIgnorableNodeType", 
    $sig.make(0xA5A3, null, [$asm08.TypeRef("System.Configuration.ExceptionAction")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "VerifyNoUnrecognizedAttributes", 
    $sig.make(0xA5A4, null, [$asm08.TypeRef("System.Configuration.ExceptionAction")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "VerifyRequiredAttribute", 
    $sig.make(0xA5A5, $.Boolean, [
        $.Object, $.String, 
        $asm08.TypeRef("System.Configuration.ExceptionAction")
      ], [])
  );

  $.Constant({Static:true , Public:false}, "MAX_LINE_WIDTH", 60); 
  $.Field({Static:true , Public:false, ReadOnly:true }, "s_positionOffset", $jsilcore.TypeRef("System.Array", [$.Int32])); 
  $.Field({Static:false, Public:false}, "_stream", $asm06.TypeRef("System.IO.Stream")); 
  $.Field({Static:false, Public:false}, "_streamName", $.String); 
  $.Field({Static:false, Public:false}, "_reader", $asm0E.TypeRef("System.Xml.XmlTextReader")); 
  $.Field({Static:false, Public:false}, "_cachedStringWriter", $asm06.TypeRef("System.IO.StringWriter")); 
  $.Field({Static:false, Public:false}, "_schemaErrors", $asm08.TypeRef("System.Configuration.ConfigurationSchemaErrors")); 
  $.Field({Static:false, Public:false}, "_lastLineNumber", $.Int32); 
  $.Field({Static:false, Public:false}, "_lastLinePosition", $.Int32); 
  $.Property({Static:false, Public:true , Virtual:true }, "Filename", $.String);

  $.Property({Static:false, Public:true , Virtual:true }, "LineNumber", $.Int32);

  $.Property({Static:false, Public:false}, "TrueLinePosition", $.Int32);

  $.Property({Static:false, Public:false}, "Reader", $asm0E.TypeRef("System.Xml.XmlTextReader"));

  $.Property({Static:false, Public:false}, "SchemaErrors", $asm08.TypeRef("System.Configuration.ConfigurationSchemaErrors"));

  $.ImplementInterfaces($asm06.TypeRef("System.IDisposable"), $asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo"))
});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.XmlUtilWriter", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0xAF1B, null, [$asm06.TypeRef("System.IO.TextWriter"), $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AppendAttributeValue", 
    $sig.make(0xAF27, $.Int32, [$asm0E.TypeRef("System.Xml.XmlTextReader")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AppendCData", 
    $sig.make(0xAF24, $.Int32, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AppendCharEntity", 
    $sig.make(0xAF23, $.Int32, [$.Char], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AppendComment", 
    $sig.make(0xAF26, $.Int32, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AppendEntityRef", 
    $sig.make(0xAF22, $.Int32, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AppendEscapeTextString", 
    $sig.make(0xAF20, $.Int32, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AppendEscapeXmlString", 
    $sig.make(0xAF21, $.Int32, [
        $.String, $.Boolean, 
        $.Char
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AppendIndent", 
    $sig.make(0xAF2A, $.Int32, [
        $.Int32, $.Int32, 
        $.Int32, $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AppendNewLine", 
    $sig.make(0xAF2C, $.Int32, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AppendProcessingInstruction", 
    $sig.make(0xAF25, $.Int32, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AppendRequiredWhiteSpace", 
    $sig.make(0xAF28, $.Int32, [
        $.Int32, $.Int32, 
        $.Int32, $.Int32
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AppendSpace", 
    $sig.make(0xAF2E, $.Int32, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AppendSpaces", 
    $sig.make(0xAF2D, $.Int32, [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AppendSpacesToLinePosition", 
    $sig.make(0xAF2B, $.Int32, [$.Int32], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AppendWhiteSpace", 
    $sig.make(0xAF29, $.Int32, [
        $.Int32, $.Int32, 
        $.Int32, $.Int32
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "CreateStreamCheckpoint", 
    $sig.make(0xAF30, $.Object, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Flush", 
    $sig.make(0xAF1F, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsLastLineBlank", 
    $sig.make(0xAF19, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_LineNumber", 
    $sig.make(0xAF17, $.Int32, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_LinePosition", 
    $sig.make(0xAF18, $.Int32, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_TrackPosition", 
    $sig.make(0xAF16, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_Writer", 
    $sig.make(0xAF15, $asm06.TypeRef("System.IO.TextWriter"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "RestoreStreamCheckpoint", 
    $sig.make(0xAF31, null, [$.Object], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SeekToLineStart", 
    $sig.make(0xAF2F, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "UpdatePosition", 
    $sig.make(0xAF1C, null, [$.Char], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Write", 
    $sig.make(0xAF1D, $.Int32, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Write", 
    $sig.make(0xAF1E, $.Int32, [$.Char], [])
  );

  $.Constant({Static:true , Public:false}, "SPACE", " "); 
  $.Constant({Static:true , Public:false}, "NL", "\r\n"); 
  $.Field({Static:true , Public:false}, "SPACES_8", $.String); 
  $.Field({Static:true , Public:false}, "SPACES_4", $.String); 
  $.Field({Static:true , Public:false}, "SPACES_2", $.String); 
  $.Field({Static:false, Public:false}, "_writer", $asm06.TypeRef("System.IO.TextWriter")); 
  $.Field({Static:false, Public:false}, "_baseStream", $asm06.TypeRef("System.IO.Stream")); 
  $.Field({Static:false, Public:false}, "_trackPosition", $.Boolean); 
  $.Field({Static:false, Public:false}, "_lineNumber", $.Int32); 
  $.Field({Static:false, Public:false}, "_linePosition", $.Int32); 
  $.Field({Static:false, Public:false}, "_isLastLineBlank", $.Boolean); 
  $.Field({Static:false, Public:false}, "_lineStartCheckpoint", $.Object); 
  $.Property({Static:false, Public:false}, "Writer", $asm06.TypeRef("System.IO.TextWriter"));

  $.Property({Static:false, Public:false}, "TrackPosition", $.Boolean);

  $.Property({Static:false, Public:false}, "LineNumber", $.Int32);

  $.Property({Static:false, Public:false}, "LinePosition", $.Int32);

  $.Property({Static:false, Public:false}, "IsLastLineBlank", $.Boolean);

});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.XmlUtilWriter/StreamWriterCheckpoint", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25D9A, null, [$asm08.TypeRef("System.Configuration.XmlUtilWriter")], [])
  );

  $.Field({Static:false, Public:false}, "_lineNumber", $.Int32); 
  $.Field({Static:false, Public:false}, "_linePosition", $.Int32); 
  $.Field({Static:false, Public:false}, "_isLastLineBlank", $.Boolean); 
  $.Field({Static:false, Public:false}, "_streamLength", $.Int64); 
  $.Field({Static:false, Public:false}, "_streamPosition", $.Int64); 
});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.Internal.ConfigSystem", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:true }, ".ctor", 
    $sig.make(0x25C20, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigSystem.get_Host", 
    $sig.make(0x25C14, $asm08.TypeRef("System.Configuration.Internal.IInternalConfigHost"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigSystem.get_Root", 
    $sig.make(0x25C15, $asm08.TypeRef("System.Configuration.Internal.IInternalConfigRoot"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigSystem.Init", 
    $sig.make(0x25C1C, null, [$asm06.TypeRef("System.Type"), $jsilcore.TypeRef("System.Array", [$.Object])], [])
  );

  $.Field({Static:false, Public:false}, "_configRoot", $asm08.TypeRef("System.Configuration.Internal.IInternalConfigRoot")); 
  $.Field({Static:false, Public:false}, "_configHost", $asm08.TypeRef("System.Configuration.Internal.IInternalConfigHost")); 
  $.Property({Static:false, Public:false, Virtual:true }, "IConfigSystem.Host", $asm08.TypeRef("System.Configuration.Internal.IInternalConfigHost"));

  $.Property({Static:false, Public:false, Virtual:true }, "IConfigSystem.Root", $asm08.TypeRef("System.Configuration.Internal.IInternalConfigRoot"));

  $.ImplementInterfaces($asm08.TypeRef("System.Configuration.Internal.IConfigSystem"))
});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.Internal.ConfigurationManagerInternal", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25C3E, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigurationManagerInternal.get_ApplicationConfigUri", 
    $sig.make(0x25C36, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigurationManagerInternal.get_ExeLocalConfigDirectory", 
    $sig.make(0x25C3B, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigurationManagerInternal.get_ExeLocalConfigPath", 
    $sig.make(0x25C3C, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigurationManagerInternal.get_ExeProductName", 
    $sig.make(0x25C37, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigurationManagerInternal.get_ExeProductVersion", 
    $sig.make(0x25C38, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigurationManagerInternal.get_ExeRoamingConfigDirectory", 
    $sig.make(0x25C39, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigurationManagerInternal.get_ExeRoamingConfigPath", 
    $sig.make(0x25C3A, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigurationManagerInternal.get_MachineConfigPath", 
    $sig.make(0x25C35, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigurationManagerInternal.get_SetConfigurationSystemInProgress", 
    $sig.make(0x25C34, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigurationManagerInternal.get_SupportsUserConfig", 
    $sig.make(0x25C33, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IConfigurationManagerInternal.get_UserConfigFilename", 
    $sig.make(0x25C3D, $.String, [], [])
  );

  $.Property({Static:false, Public:false, Virtual:true }, "IConfigurationManagerInternal.SupportsUserConfig", $.Boolean);

  $.Property({Static:false, Public:false, Virtual:true }, "IConfigurationManagerInternal.SetConfigurationSystemInProgress", $.Boolean);

  $.Property({Static:false, Public:false, Virtual:true }, "IConfigurationManagerInternal.MachineConfigPath", $.String);

  $.Property({Static:false, Public:false, Virtual:true }, "IConfigurationManagerInternal.ApplicationConfigUri", $.String);

  $.Property({Static:false, Public:false, Virtual:true }, "IConfigurationManagerInternal.ExeProductName", $.String);

  $.Property({Static:false, Public:false, Virtual:true }, "IConfigurationManagerInternal.ExeProductVersion", $.String);

  $.Property({Static:false, Public:false, Virtual:true }, "IConfigurationManagerInternal.ExeRoamingConfigDirectory", $.String);

  $.Property({Static:false, Public:false, Virtual:true }, "IConfigurationManagerInternal.ExeRoamingConfigPath", $.String);

  $.Property({Static:false, Public:false, Virtual:true }, "IConfigurationManagerInternal.ExeLocalConfigDirectory", $.String);

  $.Property({Static:false, Public:false, Virtual:true }, "IConfigurationManagerInternal.ExeLocalConfigPath", $.String);

  $.Property({Static:false, Public:false, Virtual:true }, "IConfigurationManagerInternal.UserConfigFilename", $.String);

  $.ImplementInterfaces($asm08.TypeRef("System.Configuration.Internal.IConfigurationManagerInternal"))
});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.Internal.FileVersion", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25C48, null, [
        $.Boolean, $.Int64, 
        $asm06.TypeRef("System.DateTime"), $asm06.TypeRef("System.DateTime")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "Object.Equals", 
    $sig.make(0x25C49, $.Boolean, [$.Object], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "GetHashCode", 
    $sig.make(0x25C4B, $.Int32, [], [])
  );

  $.Field({Static:false, Public:false}, "_exists", $.Boolean); 
  $.Field({Static:false, Public:false}, "_fileSize", $.Int64); 
  $.Field({Static:false, Public:false}, "_utcCreationTime", $asm06.TypeRef("System.DateTime")); 
  $.Field({Static:false, Public:false}, "_utcLastWriteTime", $asm06.TypeRef("System.DateTime")); 
});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.Internal.InternalConfigConfigurationFactory", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25C5F, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigConfigurationFactory.Create", 
    $sig.make(0x25C61, $asm08.TypeRef("System.Configuration.Configuration"), [$asm06.TypeRef("System.Type"), $jsilcore.TypeRef("System.Array", [$.Object])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigConfigurationFactory.NormalizeLocationSubPath", 
    $sig.make(0x25C65, $.String, [$.String, $asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo")], [])
  );

  $.ImplementInterfaces($asm08.TypeRef("System.Configuration.Internal.IInternalConfigConfigurationFactory"))
});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.Internal.InternalConfigHost", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25C79, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:true }, "IsSecondaryRoot", 
    $sig.make(0x25C8F, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "StaticDeleteStream", 
    $sig.make(0x25CB8, null, [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "StaticGetStreamNameForConfigSource", 
    $sig.make(0x25C92, $.String, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "StaticGetStreamVersion", 
    $sig.make(0x25C96, $.Object, [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "StaticIsFile", 
    $sig.make(0x25CBC, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "StaticOpenStreamForRead", 
    $sig.make(0x25C9D, $asm06.TypeRef("System.IO.Stream"), [$.String], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "StaticOpenStreamForWrite", 
    $sig.make(0x25CA8, $asm06.TypeRef("System.IO.Stream"), [
        $.String, $.String, 
        $jsilcore.TypeRef("JSIL.Reference", [$.Object]), $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:true , Public:false}, "StaticWriteCompleted", 
    $sig.make(0x25CB4, null, [
        $.String, $.Boolean, 
        $.Object, $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.CreateConfigurationContext", 
    $sig.make(0x25CDB, $.Object, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.CreateDeprecatedConfigContext", 
    $sig.make(0x25CDA, $.Object, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.DecryptSection", 
    $sig.make(0x25CDC, $.String, [
        $.String, $asm08.TypeRef("System.Configuration.ProtectedConfigurationProvider"), 
        $asm08.TypeRef("System.Configuration.ProtectedConfigurationSection")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.DeleteStream", 
    $sig.make(0x25CB9, null, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.EncryptSection", 
    $sig.make(0x25CDD, $.String, [
        $.String, $asm08.TypeRef("System.Configuration.ProtectedConfigurationProvider"), 
        $asm08.TypeRef("System.Configuration.ProtectedConfigurationSection")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.get_IsRemote", 
    $sig.make(0x25C78, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.get_SupportsChangeNotifications", 
    $sig.make(0x25C74, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.get_SupportsLocation", 
    $sig.make(0x25C77, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.get_SupportsPath", 
    $sig.make(0x25C76, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.get_SupportsRefresh", 
    $sig.make(0x25C75, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.GetConfigPathFromLocationSubPath", 
    $sig.make(0x25CCF, $.String, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.GetConfigType", 
    $sig.make(0x25CDE, $asm06.TypeRef("System.Type"), [$.String, $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.GetConfigTypeName", 
    $sig.make(0x25CDF, $.String, [$asm06.TypeRef("System.Type")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.GetRestrictedPermissions", 
    $sig.make(0x25CD4, null, [
        $asm08.TypeRef("System.Configuration.Internal.IInternalConfigRecord"), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Security.PermissionSet")]), 
        $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.GetStreamName", 
    $sig.make(0x25C91, $.String, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.GetStreamNameForConfigSource", 
    $sig.make(0x25C94, $.String, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.GetStreamVersion", 
    $sig.make(0x25C9A, $.Object, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.Impersonate", 
    $sig.make(0x25CD5, $asm06.TypeRef("System.IDisposable"), [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.Init", 
    $sig.make(0x25C7A, null, [$asm08.TypeRef("System.Configuration.Internal.IInternalConfigRoot"), $jsilcore.TypeRef("System.Array", [$.Object])], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.InitForConfiguration", 
    $sig.make(0x25C82, null, [
        $jsilcore.TypeRef("JSIL.Reference", [$.String]), $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
        $jsilcore.TypeRef("JSIL.Reference", [$.String]), $asm08.TypeRef("System.Configuration.Internal.IInternalConfigRoot"), 
        $jsilcore.TypeRef("System.Array", [$.Object])
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.IsAboveApplication", 
    $sig.make(0x25CCE, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.IsConfigRecordRequired", 
    $sig.make(0x25C84, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.IsDefinitionAllowed", 
    $sig.make(0x25CCA, $.Boolean, [
        $.String, $asm08.TypeRef("System.Configuration.ConfigurationAllowDefinition"), 
        $asm08.TypeRef("System.Configuration.ConfigurationAllowExeDefinition")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.IsFile", 
    $sig.make(0x25CC3, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.IsFullTrustSectionWithoutAptcaAllowed", 
    $sig.make(0x25CD3, $.Boolean, [$asm08.TypeRef("System.Configuration.Internal.IInternalConfigRecord")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.IsInitDelayed", 
    $sig.make(0x25C88, $.Boolean, [$asm08.TypeRef("System.Configuration.Internal.IInternalConfigRecord")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.IsLocationApplicable", 
    $sig.make(0x25CD0, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.IsTrustedConfigPath", 
    $sig.make(0x25CD1, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.OpenStreamForRead", 
    $sig.make(0x25CA3, $asm06.TypeRef("System.IO.Stream"), [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.OpenStreamForRead", 
    $sig.make(0x25CA6, $asm06.TypeRef("System.IO.Stream"), [$.String, $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.OpenStreamForWrite", 
    $sig.make(0x25CAA, $asm06.TypeRef("System.IO.Stream"), [
        $.String, $.String, 
        $jsilcore.TypeRef("JSIL.Reference", [$.Object])
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.OpenStreamForWrite", 
    $sig.make(0x25CB2, $asm06.TypeRef("System.IO.Stream"), [
        $.String, $.String, 
        $jsilcore.TypeRef("JSIL.Reference", [$.Object]), $.Boolean
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.PrefetchAll", 
    $sig.make(0x25CD7, $.Boolean, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.PrefetchSection", 
    $sig.make(0x25CD9, $.Boolean, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.RequireCompleteInit", 
    $sig.make(0x25C8D, null, [$asm08.TypeRef("System.Configuration.Internal.IInternalConfigRecord")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.StartMonitoringStreamForChanges", 
    $sig.make(0x25CC5, $.Object, [$.String, $asm08.TypeRef("System.Configuration.Internal.StreamChangeCallback")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.StopMonitoringStreamForChanges", 
    $sig.make(0x25CC8, null, [$.String, $asm08.TypeRef("System.Configuration.Internal.StreamChangeCallback")], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.VerifyDefinitionAllowed", 
    $sig.make(0x25CCC, null, [
        $.String, $asm08.TypeRef("System.Configuration.ConfigurationAllowDefinition"), 
        $asm08.TypeRef("System.Configuration.ConfigurationAllowExeDefinition"), $asm08.TypeRef("System.Configuration.Internal.IConfigErrorInfo")
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.WriteCompleted", 
    $sig.make(0x25CB6, null, [
        $.String, $.Boolean, 
        $.Object
      ], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigHost.WriteCompleted", 
    $sig.make(0x25CB7, null, [
        $.String, $.Boolean, 
        $.Object, $.Boolean
      ], [])
  );

  $.Constant({Static:true , Public:false}, "InvalidAttributesForWrite", 3); 
  $.Field({Static:false, Public:false}, "_configRoot", $asm08.TypeRef("System.Configuration.Internal.IInternalConfigRoot")); 
  $.Property({Static:false, Public:false, Virtual:true }, "IInternalConfigHost.SupportsChangeNotifications", $.Boolean);

  $.Property({Static:false, Public:false, Virtual:true }, "IInternalConfigHost.SupportsRefresh", $.Boolean);

  $.Property({Static:false, Public:false, Virtual:true }, "IInternalConfigHost.SupportsPath", $.Boolean);

  $.Property({Static:false, Public:false, Virtual:true }, "IInternalConfigHost.SupportsLocation", $.Boolean);

  $.Property({Static:false, Public:false, Virtual:true }, "IInternalConfigHost.IsRemote", $.Boolean);

  $.ImplementInterfaces($asm08.TypeRef("System.Configuration.Internal.IInternalConfigHost"))
});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.Internal.InternalConfigSettingsFactory", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25D17, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigSettingsFactory.CompleteInit", 
    $sig.make(0x25D23, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "IInternalConfigSettingsFactory.SetConfigurationSystem", 
    $sig.make(0x25D22, null, [$asm08.TypeRef("System.Configuration.Internal.IInternalConfigSystem"), $.Boolean], [])
  );

  $.ImplementInterfaces($asm08.TypeRef("System.Configuration.Internal.IInternalConfigSettingsFactory"))
});

JSIL.MakeClass($asm06.TypeRef("System.Object"), "System.Configuration.Internal.WriteFileContext", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25D2D, null, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "AttemptMove", 
    $sig.make(0x25D34, $.Boolean, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "Complete", 
    $sig.make(0x25D2F, null, [$.String, $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "DuplicateFileAttributes", 
    $sig.make(0x25D30, null, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "DuplicateTemplateAttributes", 
    $sig.make(0x25D31, null, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "FileIsWriteLocked", 
    $sig.make(0x25D35, $.Boolean, [$.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_IsWinNT", 
    $sig.make(0x25D2C, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "get_TempNewFilename", 
    $sig.make(0x25D2B, $.String, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ReplaceFile", 
    $sig.make(0x25D33, null, [$.String, $.String], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ValidateWriteAccess", 
    $sig.make(0x25D32, null, [$.String], [])
  );

  $.Constant({Static:true , Public:false}, "SAVING_TIMEOUT", 10000); 
  $.Constant({Static:true , Public:false}, "SAVING_RETRY_INTERVAL", 100); 
  $.Field({Static:true , Public:false}, "_osPlatformDetermined", $.Boolean, false); 
  $.Field({Static:true , Public:false}, "_osPlatform", $asm06.TypeRef("System.PlatformID")); 
  $.Field({Static:false, Public:false}, "_tempFiles", $asm07.TypeRef("System.CodeDom.Compiler.TempFileCollection")); 
  $.Field({Static:false, Public:false}, "_tempNewFilename", $.String); 
  $.Field({Static:false, Public:false}, "_templateFilename", $.String); 
  $.Property({Static:false, Public:false}, "TempNewFilename", $.String);

  $.Property({Static:false, Public:false}, "IsWinNT", $.Boolean);

});

JSIL.DeclareNamespace("Microsoft");
JSIL.DeclareNamespace("Microsoft.Win32");
JSIL.MakeClass($asm06.TypeRef("Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid"), "Microsoft.Win32.SafeCryptContextHandle", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25D3F, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25D40, null, [$asm06.TypeRef("System.IntPtr"), $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ReleaseHandle", 
    $sig.make(0x25D41, $.Boolean, [], [])
  );

})
  .Attribute($asm06.TypeRef("System.Security.SuppressUnmanagedCodeSecurityAttribute"));

JSIL.MakeClass($asm06.TypeRef("Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid"), "Microsoft.Win32.SafeNativeMemoryHandle", false, [], function ($) {
  var $thisType = $.publicInterface;

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25D52, null, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25D53, null, [$.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, ".ctor", 
    $sig.make(0x25D54, null, [$asm06.TypeRef("System.IntPtr"), $.Boolean], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "ReleaseHandle", 
    $sig.make(0x25D56, $.Boolean, [], [])
  );

  $.ExternalMethod({Static:false, Public:false}, "SetDataHandle", 
    $sig.make(0x25D55, null, [$asm06.TypeRef("System.IntPtr")], [])
  );

  $.Field({Static:false, Public:false}, "_useLocalFree", $.Boolean); 
})
  .Attribute($asm06.TypeRef("System.Security.SuppressUnmanagedCodeSecurityAttribute"));

JSIL.MakeStaticClass("Microsoft.Win32.SafeNativeMethods", false, [], function ($) {
  var $thisType = $.publicInterface;

})
  .Attribute($asm06.TypeRef("System.Security.SuppressUnmanagedCodeSecurityAttribute"));

